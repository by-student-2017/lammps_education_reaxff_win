
! cvff_templates.dat
!	Template file of potential type assignment templates for the cvff
! forcefield
!
! Revision History:
!  simonm 27/1/2005 Added rule for mg
!	simonm 13-April-2000	Fix for imidazole_ion in Materials Studio (00104smmq03)
!	simonm 13-April-2000	Fix for Thiophene in Materials Studio (00104smmq01)
!       simonm 1/97             Added support for C2. 
!                               Added o(o-) precedence (03202smmq02).
!
!	KWC	6/5/90		Initial version without ci and ni types
!	DWS	8/13/90		Fixes for beta bugs, addition of ci,ni
!	KWC	8/16/90		added o- templates for carboxylate oxygens,
!				changed precedence for Cl/cl since brackets
!				now work correctly for first atom in template
!	KWC	8/16/90		Fixed the error introduced into the o-
!				template covering O:*:O
!	DWS	11/17/90	Removed SP3 test for o potential, changed 
!				precedence for some of the c' and o' stuff
!       JDC      4/8/92         Added alternative bonding for nitro group
!      
!       SHS      1/9/92         Changed the atom type for Calcium ion - Ca++
!                               from c+ to ca+           
!       JDC      9/10/92        Update template for ca from cff91.
!
!
!       AMG      12/7/92        Changed file to include catalysis nonbond
!				metal parameters. Generic oxygen parameter has
!				been replaced by catalysis oxygen stub oz,
!				because atom test rules do not seem to work 
!				correctly.

type: ?
  ! anything	
  template: (>*)
end_type

type:h
  ! hydrogen bonded to carbon
  template: (>H (-*) )
  atom_test:2
     allowed_elements:C,Si,H
  end_test
end_type

type:hn
  ! hydrogen bonded to nitrogen
  template: (>H(-N))
end_type

type:ho
  ! hydrogen bonded to oxygen
  template: (>H(-O))
end_type

type:hp
  ! hydrogen bonded to phosphorous
  template: (>H(-P))
end_type

type:hs
  ! hydrogen bonded to sulfur
  template: (>H(-S))
end_type

type:h*
  ! hydrogen in water
  template: (>H(-O(-H)))
end_type

type:d
  ! deuterium
  template: (>D (-*))
end_type

type:dw
  ! deuterium in water
  template: (>D(-O(-*)))
  atom_test:3
     allowed_elements:H,D
  end_test
end_type

type: lp
  !lone pair
  template: (>L (-*))
end_type

type:c
  ! generic SP3 carbon
  template: (>C)
  atom_test:1
        hybridization:sp3
  end_test
end_type

type: c=
    ! non aromatic double bonded carbon
    template: (>C(=*))
    atom_test:1
        aromaticity:NON_AROMATIC
    end_test
end_type

type:c'
    ! carbonyl (c=O) group
    template (>C[=*])
    atom_test: 2
      allowed_elements: O,S
    end_test
end_type

type:c'
  ! carbonyl (c:O) group
  template (>C[:*](~*)(~*))
    atom_test: 2
      allowed_elements: O,S
    end_test
end_type

type:cp
  ! SP2 aromatic carbon
  template:(>C)
  atom_test:1
    hybridization: SP2
    aromaticity:AROMATIC
  end_test
end_type

type:cp
  ! This is used for aromatic carbons that fail the aromaticity test because
  ! the current ring checker is to lame to figure on a ring with more than
  ! seven or eight sides. The NON_AROMATIC test is to eliminate the conflict
  ! with the above 'cp' definition. This can be removed when the ring checker
  ! is made more robust.
  template: [>C(-*)(:*)(:*)]
  atom_test:1
    hybridization: SP2
    aromaticity:NON_AROMATIC
  end_test
end_type

type: c5
   ! SP2 aromatic in 5 membered ring
   template:(>C)
   atom_test: 1
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
  end_test
end_type

! sm - don't need for c2 or MatStudio but do for I2
type: cs
   ! SP2 aromatic in 5 membered ring next to S
   template:(>C(-S))
   atom_test: 1
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
   end_test
   atom_test: 2
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
   end_test
end_type

! sm added this resonant rule for c2 and MatStudio
type: cs
   ! SP2 aromatic in 5 membered ring next to S
   template:(>C(:S))
   atom_test: 1
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
   end_test
   atom_test: 2
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
   end_test	
end_type
       

! The cn type is not assigned currently
!type: cn
!   template (>C(-N)(-*)(-*)(-*))
!end_type

type: cr
   ! c in guanidinium group
   template: (>C (:N(-*)) (:N(-H)(-H)) (:N(-H)(-H)) )
end_type

type: cr
   ! c in guanidinium group
   template: (>C (=N(-*)) (-N(-H)(-H)) (-N(-H)(-H)) )
end_type

type: c-
   ! c in charged carboxylate
   template: (>C(:O)(:O))
end_type

type: c-
   ! c in charged carboxylate
   ! How do we indicate that the second O has nothing bonded to it ?
   ! what makes it not match COOH ?
   template: (>C(=O)[-O])
end_type

type: c1
    ! sp3 carbon with 1 h 3 heavies
    template: (>C(-H)(-*)(-*)(-*))
    atom_test:3
        disallowed_elements:H
    end_test
    atom_test:4
        disallowed_elements:H
    end_test
    atom_test:5
        disallowed_elements:H
    end_test
end_type

type: ca
!    template: (>C(-H)(-C[~O])(-C)(-N(-H)))
     template: (>C(-N(-*))(-C[~O])(~*)(~*))
end_type
	
type:c2
  ! sp3 carbon with 2 H's, 2 Heavy's
  template:(>C(-H)(-H)(-*)(-*))
    atom_test:4
        disallowed_elements:H
    end_test
    atom_test:5
        disallowed_elements:H
    end_test
end_type

type: cg
    template: (>C(-H)(-H)(-C[~O])(-N(-H)))
end_type

type: c3
    ! sp3 carbon with 3 h's 1 heavy
    template: (>C(-H)(-H)(-H)(-*))
    atom_test:5
        disallowed_elements:H
    end_test
end_type

type: ct
   ! sp carbon involved in a triple bond
   template: (>C(#*))
end_type

type: ct
   ! sp carbond involved in two double bonds
   template: (>C(=*)(=*))
end_type
	
type: n
    ! Billed as sp2 with 1 H but seems to be used for sp2 with no H's as
    ! well in proline
    template: (>N(-*))
    atom_test:1
	aromaticity: non_aromatic
        hybridization:SP2
    end_test
end_type

type: n1
    !sp2 nitrogen in charged arginine
    template: (>N(-C)(=C)(-H))
    atom_test:1
	hybridization:SP2
    end_test
end_type

type: n1
    !sp2 nitrogen in charged arginine
    template: (>N(:C(:N))(-C)(-H))
    atom_test:1
        hybridization:SP2
    end_test
end_type

type: n2
    !sp2 nittrogen with two hydrogens
    template: (>N(-H)(-H))
    atom_test:1
	aromaticity: non_aromatic
	hybridization:SP2
    end_test
end_type

type: no
    ! sp2 nitrogen in nitro group (Ar-NOO)
    template: (>N[=O][-O](~C))
    atom_test:1
        hybridization:SP2
    end_test
    atom_test:4
        aromaticity:aromatic
    end_test
end_type


type: no
    ! sp2 nitrogen in nitro group (Ar-NOO)
    template: (>N[:O][:O](~C))
    atom_test:1
        hybridization:SP2
    end_test
    atom_test:4
        aromaticity:aromatic
    end_test
end_type

type: np
    !sp2 sp2 aromatic
    template: (>N)
    atom_test:1
	aromaticity:aromatic
	hybridization:SP2
    end_test
end_type

type: np
    !sp2 sp2 aromatic
    template: (>N(:*)(:*))
    atom_test:1
	aromaticity:non_aromatic
        hybridization:SP2
    end_test
end_type

type: np
    !
    template: (>N(=O)(-O))
    atom_test:1
        aromaticity:non_aromatic
        hybridization:SP2
    end_test
end_type

type: n3
    ! sp3 nitrogen with 3 substituants
    template: (>N(-*)(-*)(-*))
    atom_test:1
        hybridization:SP3
    end_test
end_type

type: n4
    ! sp3 nitrogen with 4 substituants
    template: (>N(-*)(-*)(-*)(-*))
    atom_test:1
        hybridization:SP3
    end_test
end_type

type:n=
  ! sp2 nitrogen involved ina double bond (non-aromatic)
  template:(>N(=*))
  atom_test:1
    aromaticity:NON_AROMATIC
    hybridization:SP2
  end_test
end_type

type:nt
  ! sp nitrogen involved in a triple bond 
   template:(>N(#*)) 
end_type

type:nz
  ! sp nitrogen in N2
   template:[>N[#N]] 
end_type

!sm1 not needed by C2, but is my I2
type: ni
   ! Nitrogen in charged imidazole ring
   template:[>N(=C(-N(-C(=C))))(-H)(-C)]
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:5
      ring:PLANAR(5)
   end_test
   atom_test:7
      ring:PLANAR(5)
   end_test
end_type

!sm1 not needed by C2, but is my I2
type: ni
   ! Nitrogen in charged imidazole ring
   template:(>N(-C(=C(-N(=C)(-H))))(-C)(-*))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:5
      ring:PLANAR(5)
   end_test
   atom_test:7
      ring:PLANAR(5)
   end_test
end_type

!sm Added the ni rule for C2 and MatStudio
type: ni
   ! Nitrogen in charged imidazole ring
   template:(>N(:C(:C(:N(:C)(-H))))(:C)(~*))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:5
      ring:PLANAR(5)
   end_test
   atom_test:7
      ring:PLANAR(5)
   end_test
end_type

!sm1 Don't need for c2, but do for I2 (ci1)
type: ci
   ! Carbon in charged imidazole ring
   template:(>C(=N(-C(=C(-N)))(-H)))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:5
      ring:PLANAR(5)
   end_test
end_type

!sm1 Don't need for c2, but do for I2 (ci2)
type: ci
   ! Carbon in charged imidazole ring
   template:(>C(-N(-C(=N(-H)(-C)))))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
      formal_charge:1
   end_test
   atom_test:6
      ring:PLANAR(5)
   end_test
end_type

!sm1 Don't need for c2, but do for I2 (ci3)
type: ci
   ! Carbon in charged imidazole ring
   template:(>C(=C(-N(-C(=N(-C)(-H))))))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:5
      ring:PLANAR(5)
      formal_charge:1
   end_test
   atom_test:6
      ring:PLANAR(5)
   end_test
end_type

!sm1 Added the ci rule for C2 (ci4)
type: ci
   ! Carbon in charged imidazole ring
   template:(>C(:N(:C(:C(:N)))(-H)))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
      formal_charge:1
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:5
      ring:PLANAR(5)
   end_test
end_type

!sm1 Added the ci rule for C2 (ci5)
type: ci
   ! Carbon in charged imidazole ring
   template:(>C(:N(:C(:N(:C)(-H)))))
    atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
      formal_charge:1
   end_test
end_type

!sm1 Added the ci rule for C2 (ci6)
type: ci
   ! Carbon in charged imidazole ring
   template:(>C(:N(:C(:N(-H)(:C)))))
   atom_test:1
      ring:PLANAR(5)
   end_test
   atom_test:2
      ring:PLANAR(5)
      formal_charge:1
   end_test
   atom_test:3
      ring:PLANAR(5)
   end_test
   atom_test:4
      ring:PLANAR(5)
   end_test
   atom_test:6
      ring:PLANAR(5)
   end_test
end_type

type: o
! generic oxygen
   template: (>O)
end_type

! commented out by Huai
!type: oz
!  ! Oxygen for catalysis
!  template: (>O(-*)(-*))
!  atom_test:2
!     disallowed_elements:C,H,N
!  end_test
!  atom_test:3
!     disallowed_elements:C,H,N
!  end_test
!end_type

type: oz
  ! Oxygen for catalysis
  template: (>O(-*)(-Si(-O)(-O)(-O)))
  atom_test:2
     disallowed_elements:C,N
  end_test
end_type

type: oz
  ! Oxygen for catalysis
  template: (>O(-*)(-Al(-O)(-O)(-O)))
  atom_test:2
     disallowed_elements:C,N
  end_test
end_type

!type: o Commented this type out since atom tests not correct-AMG
!   ! generic oxygen
!   template (>O(-*)(-*))
!  SP3 test removed by DWS 11/27/90
!   atom_test:1
!       hybridization:SP3
!   end_test
!   atom_test:1
!   disallowed_elements: Al, Si, P
!   end_test
!end_type

type: o'
   ! oxygen in carbonyl group
   template: (>O(=*))
   atom_test:2
      allowed_elements: N,C,S
   end_test
end_type

type: o'
   ! oxygen in carbonyl group
   template: [>O(:*(:*))]
   atom_test:3
      disallowed_elements: O
   end_test
end_type

type: o-
   ! partial double oxygen bonded to something then bonded to 
   ! another  partial double oxygen
   template: [>O(:*[:O](-*))]
end_type

type: o-
   ! double bonded oxygen in charged carboxylate COO-
   template: [>O(=C[-O](-*))]
end_type

type: o-
   ! single bonded oxygen in charged carboxylate COO-
   template: [>O[-C[=O](-*)]]
end_type

type: o-
   ! single bonded oxygen in incorrecly bond ordered charged carboxylate COO-
   ! NOTE: the carbon will be flagged as having unfilled valences
   template: [>O[-C[-O](-*)]]
end_type

type: o-
   ! single bonded oxygen in nitro group
   template: (>O(-N(=O)))
end_type

type: o-
   ! double bonded oxygen in nitro group
   template: (>O(:N(:O)))
   atom_test:1
      hybridization:SP2
   end_test
end_type

type: o-
   ! double bonded oxygen in nitro group
   template: (>O(=N(-O)))
   atom_test:1
      hybridization:SP2
   end_test
end_type

type oh
   ! oxygen bonded to hydrogen
   template: (>O(-H)(-*))
!   atom_test:3
!       disallowed_elements:Si, Al
!   end_test
end_type

type: op
   ! SP2 aromatic in 5 membered ring
   template:(>O)
   atom_test: 1
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
  end_test
end_type

type: o*
    !oxygen in water
    template (>O(-H)(-H))
end_type

type: sh
    template: (>S(-H)(-*))
    atom_test:3
        disallowed_elements:S
    end_test
end_type

type: s1
    ! disufide
    template: (>S(-S))
end_type

type: s
    ! methionine sulfur
    template: (>S) 
end_type

type: sp
   ! SP2 aromatic in 5 membered ring
   template:(>S)
   atom_test: 1
    hybridization: SP2
    aromaticity:AROMATIC
    ring:PLANAR(5)
  end_test
end_type

type: s'
   ! S in thioketone group
   template: (>S(=*))
   atom_test:2
      allowed_elements: C
   end_test
end_type

type: p
   ! General phosphorous atom
   template: (>P)
end_type

type: ca+
  ! calcium ion
  template: [>Ca]
end_type

type: f
  !fluorine bonded to carbon
  template: (>F (-*))
  atom_test: 2
     allowed_elements: C,F
  end_test
end_type

type: cl
  !chlorine bonded to carbon
  template: (>Cl (-*))
  atom_test: 2
     allowed_elements: C,Cl
  end_test
end_type

type: Cl
  !chlorine ion
  template: [>Cl]
end_type

type: Na
  !sodium ion
  template: [>Na]
end_type

type: br
  !bromine bonded to carbon
  template: (>Br (-*))
  atom_test: 2
     allowed_elements: C,Br
  end_test
end_type

type: Br
  !bromine ion
  template: [>Br]
end_type

type: i
  !iodine
  template: (>I (-*))
  atom_test: 2
     allowed_elements: C,I
  end_test
end_type

type: si
  !silicon
  template: (>Si)
end_type

type: ar
  ! Argon
  template: (>Ar)
end_type

type: he
  ! Helium
  template: (>He)
end_type

type: al
  ! Aluminium
  template: (>Al)
end_type

type: Pt
  ! Platinum metal
  template: (>Pt)
end_type

type: Pd
  ! Palladium metal
  template: (>Pd)
end_type

type: Au
  ! Gold metal
  template: (>Au)
end_type

type: Ag
  ! Silver metal
  template: (>Ag)
end_type

type: Sn
  ! Tin metal
  template: (>Sn)
end_type

type: K
  ! Potassium metal
  template: (>K)
end_type

type: Li
  ! Lithium metal
  template: (>Li)
end_type

type: Mo
  ! Molybdenum metal
  template: (>Mo)
end_type

type: Fe
  ! Iron metal
  template: (>Fe)
end_type

type: W
  ! Tungsten metal
  template: (>W)
end_type

type: Ni
  ! Nickel metal
  template: (>Ni)
end_type

type: Cr
  ! Chromium metal
  template: (>Cr)
end_type

type: Cu
  ! Copper metal
  template: (>Cu)
end_type

type: Pb
  ! Lead metal
  template: (>Pb)
end_type

type: mg
  ! Magnesium metal
  template: (>Mg)
end_type

!commented out, and replaced by next entry  - by Huai
!type: sz
!  ! Si in Aluminino-Silicate
!  template: (>Si(~O))
!end_type

type: sz
  ! silicon atom in zeolites (SiO4 tetrahedron)
  template: (>Si(-O)(-O)(-O)(-O))
end_type

type: az
  ! Al in Aluminino-Silicate
  template: (>Al(~O)) 
end_type


precedence:
(?
  (ca+)
  (Cl) (cl)
  (Br) (br)
  (Na)
  (p)
  (si(sz))
  (f)
  (i)
  (d (dw))
  (h) (ho(h*)) (hn) (hp) (hs) 
  (lp)
  (cr)
  (ct) (c=(ci)(c'(c-)(ct)) (cr)) (cp(c'(c-)(ct))) (c'(c-)(ct))
  (cp(c5(ci)(c'(ct))(cs(c'(ct))))) (c(c1(ca)) (c2(ca(cg))) (c3) (ca))
  (o(oz(o-(o-))) (oh(oz)) (oh(o*)) (op)) (o(o'(o-(o-))) (o-(o-))) 
  (no)
  (nt (nz))
  (n(ni)(np(ni)(no))(n2(n=))(n=(ni)(np(ni)(no)(n1(ni)))))
  (np(ni)(no))
  (n3(n4))
  (n(n=(n1(np(ni)(no))(ni)))(n1(np(ni)(no))(ni)))
  (s (sh) (s1) (sp) (s'))
  (ar)
  (he)
  (al(az))
  (Pt)
  (Pd)
  (Au)
  (Ag)
  (Sn)
  (K)
  (Li)
  (Mo)
  (Fe)
  (W)
  (Ni)
  (Cr)
  (Cu)
  (Pb)
  (mg)
)
end_precedence


