LAMMPS (7 Aug 2019)
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
# GCMC parent script

include		control_gc
# User Inputs

variable	iEnsmble equal 	0		#0:GCMC NVT, 1:GCMC NPT, 2:MC NVT, 3:NPT
variable	nmciter equal 	1000000		#No. of GCMC iterations
variable	EmMD equal	1		#0:control_emin, 1:control_md (Emin/MD for every GCMC iter)
variable	MDstp1 equal	200		#MD steps (for every GCMC iter) if control_md selected
variable	readfile equal	0		#Type of the input geo file. 0:data.in, 1:infile

variable	iMD equal	1		#1:Perform MD run every iMDfreq GCMC iter
variable	iMDfreq equal	5		#GCMC iter if iMD=1
variable	MDstp2 equal	200		#MD steps (for iMDfreq MD) if iMD=1
variable	initMD equal	1		#1:Run (longer) MD on first geometry (for EmMD=1,MD)
variable	MDstp3 equal	10000		#MD steps (for 1st long MD) if initMD=1

variable	Temp equal 	300		#Temp for MD, GCMC prob
variable	Pressure equal 	0.0		#For GCMC NPT
variable	vfactIn equal 	0.01		#Max change in length during NPT
variable	volAvoid equal	0		#Vol of sim box - Vol (Li) used for GCMC

variable	ifix1 equal 	0		#first atom-id in the range of fixed atoms
variable	ifix2 equal 	0		#last atom-id in the range of fixed atoms
variable	inonMC equal	1536		#last id of nonMC atom (not part of any GCMC move)
variable	iMC equal	1536		#last id of MC atoms (just displacable)(should be at the end of data.in file)(inonMC=iMC, if no MC atom)

variable	Rmax equal 	3.0		#Farthest new atom can be (from typeNear* if iNear*=1, otherwise any atom) 	(default-criteria1)
variable	Rmin equal 	2.0		#Closest new atom can be (to typeNear* if iNear*=1, otherwise any atom) 	(default-criteria2)
variable	typeGC equal	2		#Atom type of GCMC atom
variable	mass equal	6.941		#Mass of GCMC atom
variable	mu equal	-57.93		#Chemical potential of GCMC atom
variable	iSiDist equal	0		#1:To apply distance criteria from Si for new atom placement, 0:otherwise 	(addon-criteria1)
variable	iNear1 equal	1		#1:To restrict placement of typeGC atoms near typeNear1 atoms (near Si) 	(addon-criteria2.1)
variable	typeNear1 equal	1		#Type of atom1 near which typeGC atoms are placed (Si)
variable	iNear2 equal	0		#1:To restrict placement of typeGC atoms near typeNear1 or typeNear2 atoms (near Si or Li) 	(addon-criteria2.2)
variable	typeNear2 equal	2		#Type of atom2 near which typeGC atoms are placed (Li)
variable	iparticle equal	0		#1:To place typeGC in a particle of typeNear (iNear must be 1), 0:otherwise (Change r_atoms and r_factor in getcoords.py) (addon-criteria3) (only for particle geometry)
variable	far_atoms equal	75		#farthest atoms used to calculate r of particle (only for particle geometry)
variable	far_rfact equal	0.9025		#multiplication factor to r to get r for placing in particle (only for particle geometry)



#Initialize
print           "Seed: ${seed}"
Seed: 17570
variable	rn_01 equal	random(0,1,${seed})
variable	rn_01 equal	random(0,1,17570)
variable	beta equal	1/(0.0019872041*${Temp})
variable	beta equal	1/(0.0019872041*300)
variable	lambda equal	sqrt(1/(${mass}*${Temp}))*17.45822066
variable	lambda equal	sqrt(1/(6.941*${Temp}))*17.45822066
variable	lambda equal	sqrt(1/(6.941*300))*17.45822066
variable	therm_vel equal	sqrt(${Temp}/${mass})*0.001579347326
variable	therm_vel equal	sqrt(300/${mass})*0.001579347326
variable	therm_vel equal	sqrt(300/6.941)*0.001579347326
print		"beta: ${beta}; lambda:${lambda}; therm_vel:${therm_vel}"
beta: 1.67739857890457; lambda:0.382585343708812; therm_vel:0.0103831052085002
shell		rm dump.last dump.reax bonds.last bonds.out ener_comp  Thermo dump.strs.last dump.strs MClog status.log
print		"imc  pass  n_system  E_system  vol_system  vol_GC  pr_system  prob1  prob2" append MClog
imc  pass  n_system  E_system  vol_system  vol_GC  pr_system  prob1  prob2
print 		"1imc  2nGCMC  3Pe  4eb  5ea  6elp  7emol  8ev  9epen  10ecoa  11ehb  12et  13eco  14ew  15ep  16efi  17eqeq" file ener_comp
1imc  2nGCMC  3Pe  4eb  5ea  6elp  7emol  8ev  9epen  10ecoa  11ehb  12et  13eco  14ew  15ep  16efi  17eqeq
print 		"1imc  2nGCMC  3Pe  4Ke  5Te  6V  7Tmp  8P  9Px  10Py  11Pz  12Lx  13Ly  14Lz  15Dens" file Thermo
1imc  2nGCMC  3Pe  4Ke  5Te  6V  7Tmp  8P  9Px  10Py  11Pz  12Lx  13Ly  14Lz  15Dens

units           real
atom_style      charge
atom_modify	map yes
if		"${readfile} == 0" then "read_data data.in" else "read_restart infile"
read_data data.in
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  reading atoms ...
  1536 atoms
  read_data CPU = 0.0034461 secs
group		freezeatoms id ${ifix1}:${ifix2}
group		freezeatoms id 0:${ifix2}
group		freezeatoms id 0:0
0 atoms in group freezeatoms



# Variables for minimization
variable        etol equal 	1.0e-10
variable        ftol equal 	1.0e-10
variable        maxiter equal 	500000
variable        maxeval equal 	100000
variable        dmax equal 	1.0e-1



#First reax run
variable	n_trial equal 	count(all)
variable	E_trial equal 	pe
variable	vol_trial equal vol
variable	pr_trial equal press
variable	imc equal 0

if		"${initMD}==1" then 		"variable	MDstp equal	${MDstp3}" else		"variable	MDstp equal	${MDstp1}"
variable	MDstp equal	${MDstp3}
variable	MDstp equal	10000
if		"(${initMD}==1) && (${MDstp3}<1000)" then 		"variable	MDdmp equal	${MDstp3}" else		"variable	MDdmp equal	1000"
variable	MDdmp equal	1000
if		"${EmMD}==0" then "variable	filename string control_emin" else "variable	filename string control_md"
variable	filename string control_md

include 	${filename}
include 	control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 1000 bonds.last


thermo		${MDdmp}
thermo		1000
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 1000 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 1000 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		10000
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72 | 72.37 | 72.69 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
       0            0   -155856.71            0   -155856.71    30096.474            0   -2093.1735    718.88686   -3780.1588   -3218.2487      30.5776      30.5776      32.1891    2.3780026   -221353.06 
    1000          250   -156344.67    937.80167   -155406.87    30096.474    204.95963    7014.8206    10319.647    3163.1283    7561.6866      30.5776      30.5776      32.1891    2.3780026   -221587.64 
    2000          500   -156005.23    1218.6712   -154786.56    30096.474    266.34458    1159.3569    833.47511    829.59323    1815.0025      30.5776      30.5776      32.1891    2.3780026   -221276.95 
    3000          750   -155762.59    1409.2044   -154353.39    30096.474    307.98624    1894.8443    4763.6985    1996.8738   -1076.0395      30.5776      30.5776      32.1891    2.3780026   -221442.68 
    4000         1000   -155839.16    1326.7384   -154512.42    30096.474    289.96302    -990.0286    4707.0288    -3254.596   -4422.5186      30.5776      30.5776      32.1891    2.3780026   -221258.39 
    5000         1250   -155854.26     1356.879   -154497.38    30096.474    296.55035    3206.3101     5834.462    1075.7489    2708.7196      30.5776      30.5776      32.1891    2.3780026   -221257.91 
    6000         1500   -155827.25    1431.9455    -154395.3    30096.474    312.95637    2370.6878    5363.0719     2375.865   -626.87358      30.5776      30.5776      32.1891    2.3780026   -221438.77 
    7000         1750   -155904.49    1344.4337   -154560.06    30096.474    293.83039    1996.5871    5062.9223    467.09049    459.74842      30.5776      30.5776      32.1891    2.3780026   -221095.77 
    8000         2000   -155843.67    1397.1916   -154446.48    30096.474    305.36079    2645.7003    6425.4234   -763.26086    2274.9385      30.5776      30.5776      32.1891    2.3780026   -221282.85 
    9000         2250   -155816.79    1388.5314   -154428.26    30096.474    303.46808    1072.7394    1561.7229    2633.3717   -976.87638      30.5776      30.5776      32.1891    2.3780026   -221481.42 
   10000         2500   -155887.23    1348.4464   -154538.78    30096.474    294.70738   -593.18963    2358.0725   -2838.0547   -1299.5866      30.5776      30.5776      32.1891    2.3780026   -221348.39 
Loop time of 128.382 on 24 procs for 10000 steps with 1536 atoms

Performance: 1.682 ns/day, 14.265 hours/ns, 77.893 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 110.03     | 112.99     | 114.91     |  10.8 | 88.01
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.87848    | 2.8066     | 5.7606     |  68.6 |  2.19
Output  | 0.011778   | 0.046129   | 0.047641   |   3.3 |  0.04
Modify  | 12.433     | 12.452     | 12.496     |   0.3 |  9.70
Other   |            | 0.0841     |            |       |  0.07

Nlocal:    64 ave 70 max 47 min
Histogram: 1 0 0 1 1 2 4 2 8 5
Nghost:    2346.58 ave 2373 max 2323 min
Histogram: 1 0 2 6 6 4 1 2 1 1
Neighs:    24825.8 ave 27427 max 17623 min
Histogram: 1 0 0 2 0 1 5 3 6 6

Total # of neighbors = 595818
Ave neighs/atom = 387.902
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"

undump		1
undump		2

variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200

variable	n_system equal	${n_trial}
variable	n_system equal	1536
variable	E_system equal 	${E_trial}
variable	E_system equal 	-155887.229868508
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	vol_GC equal	(vol-${volAvoid})			#Volume available to GCMC atoms (to be used in prob. calculation)
variable	vol_GC equal	(vol-0)			
variable	pr_system equal ${pr_trial}
variable	pr_system equal -593.18962829983
variable	n_MC equal	v_n_system-v_inonMC		#displacable atoms
variable	n_GCMC equal	v_n_system-v_iMC		#deletable atoms
variable	flgCoord equal	0
print 		"${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}" append ener_comp
0  0  -155887.229868508  -221348.391993746  -5579.93685670298  0  0  21492.6551321668  0  0  0  0  0  49548.4438497499  -1.17253986750256e-08  0  3.63797241973688e-08
print 		"${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}" append Thermo
0  0  -155887.229868508  1348.44642047836  -154538.78344803  30096.4744337948  294.707381115637  -593.18962829983  2358.07245777923  -2838.05474625492  -1299.5865964238  30.5776  30.5776  32.1891  2.37800255774645
variable	imc delete
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		"First run  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}" append status.log
First run  1536  -155887.229868508  30096.4744337948  30096.4744337948  -593.18962829983
print		"--------------------------------------------------------------------------------------" append status.log
--------------------------------------------------------------------------------------
print		"imc  pass  n_system  E_system  E_trial  vol_system  vol_GC  pr_system  prob_MC  iMCflag  n_MC  n_GCMC  iblock  prob1  prob2  atomid  status" append status.log
imc  pass  n_system  E_system  E_trial  vol_system  vol_GC  pr_system  prob_MC  iMCflag  n_MC  n_GCMC  iblock  prob1  prob2  atomid  status
write_restart	refile



#Ensemble pick
if		"${iEnsmble}==0" then "variable iMCpick equal 3"
variable iMCpick equal 3
if		"${iEnsmble}==1" then "variable iMCpick equal 4"
if		"${iEnsmble}==2" then "variable iMCpick equal 1"
if		"${iEnsmble}==3" then "variable iMCflag equal 3"



#GCMC loop
variable	imc loop 	0 ${nmciter}
variable	imc loop 	0 1000000
variable	pass loop 	0 ${nmciter}
variable	pass loop 	0 1000000
variable	MDcheck equal 	"v_imc%v_iMDfreq"
label		imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 1, 0
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0270690321922302
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0270690321922302)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0270690321922302, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:0; n_GCMC:0
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 0
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 0
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock3
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Volume block (NPT)
print 		"iMCflag at vol block: ${iMCflag}"
iMCflag at vol block: 0
if 		"(${iMCflag} == 3)" then 		"print 'in vol block'" 		"variable	iblock equal 4" 		"clear" 		"read_restart	refile" 		"variable	vfactor equal (1+(2*${rn_01}-1)*${vfactIn})" 		"change_box	all x scale ${vfactor} y scale ${vfactor} z scale ${vfactor} remap" 		"print 		'vfactor is ${vfactor}'" 		"jump		SELF run_control"

label		iblock4
print	 	"iblock:${iblock}"
iblock:0
if 		"${iblock}==4" 	then 		"variable	prob1 equal	(exp((${n_system}*ln(${vfactor}*${vfactor}*${vfactor}))-(${beta}*(${E_trial}-${E_system}))-(${beta}*${Pressure}*0.143941*(${vol_GC}*(1-${vfactor}*${vfactor}*${vfactor})))))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if	 	"(${iblock}==4) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  vol pass  ${vfactor}*${vfactor}*${vfactor}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==4)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  vol fail  ${vfactor}*${vfactor}*${vfactor}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#iMDfreq Reax run
label		MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 2, 0
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.552509307861328
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.552509307861328)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.552509307861328, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:0; n_GCMC:0
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 1
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock3
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Volume block (NPT)
print 		"iMCflag at vol block: ${iMCflag}"
iMCflag at vol block: 1
if 		"(${iMCflag} == 3)" then 		"print 'in vol block'" 		"variable	iblock equal 4" 		"clear" 		"read_restart	refile" 		"variable	vfactor equal (1+(2*${rn_01}-1)*${vfactIn})" 		"change_box	all x scale ${vfactor} y scale ${vfactor} z scale ${vfactor} remap" 		"print 		'vfactor is ${vfactor}'" 		"jump		SELF run_control"

label		iblock4
print	 	"iblock:${iblock}"
iblock:0
if 		"${iblock}==4" 	then 		"variable	prob1 equal	(exp((${n_system}*ln(${vfactor}*${vfactor}*${vfactor}))-(${beta}*(${E_trial}-${E_system}))-(${beta}*${Pressure}*0.143941*(${vol_GC}*(1-${vfactor}*${vfactor}*${vfactor})))))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if	 	"(${iblock}==4) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  vol pass  ${vfactor}*${vfactor}*${vfactor}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==4)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  vol fail  ${vfactor}*${vfactor}*${vfactor}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#iMDfreq Reax run
label		MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 3, 0
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.593216121196747
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.593216121196747)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.593216121196747, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:0; n_GCMC:0
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 1
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock3
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Volume block (NPT)
print 		"iMCflag at vol block: ${iMCflag}"
iMCflag at vol block: 1
if 		"(${iMCflag} == 3)" then 		"print 'in vol block'" 		"variable	iblock equal 4" 		"clear" 		"read_restart	refile" 		"variable	vfactor equal (1+(2*${rn_01}-1)*${vfactIn})" 		"change_box	all x scale ${vfactor} y scale ${vfactor} z scale ${vfactor} remap" 		"print 		'vfactor is ${vfactor}'" 		"jump		SELF run_control"

label		iblock4
print	 	"iblock:${iblock}"
iblock:0
if 		"${iblock}==4" 	then 		"variable	prob1 equal	(exp((${n_system}*ln(${vfactor}*${vfactor}*${vfactor}))-(${beta}*(${E_trial}-${E_system}))-(${beta}*${Pressure}*0.143941*(${vol_GC}*(1-${vfactor}*${vfactor}*${vfactor})))))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if	 	"(${iblock}==4) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  vol pass  ${vfactor}*${vfactor}*${vfactor}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==4)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  vol fail  ${vfactor}*${vfactor}*${vfactor}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#iMDfreq Reax run
label		MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 4, 0
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.824336409568787
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.824336409568787)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.824336409568787, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:0; n_GCMC:0
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1536 atoms
  read_restart CPU = 0.00084281 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 20.7554909294 ${ry} ${rz} units box
create_atoms	2 single 20.7554909294 17.5174175396 ${rz} units box
create_atoms	2 single 20.7554909294 17.5174175396 7.24632073679 units box
Created 1 atoms
  create_atoms CPU = 0.00018692 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1537
print 		'ncreated is ${ncreated}'
ncreated is 1537
group		created id ${ncreated}
group		created id 1537
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.900953888893127-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.900953888893127-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.900953888893127-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.476537525653839-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.476537525653839-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.476537525653839-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.164832890033722-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.164832890033722-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.164832890033722-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00832629282426928 ${rvy} ${rvz}
velocity	created set 0.00832629282426928 -0.000487226679175853 ${rvz}
velocity	created set 0.00832629282426928 -0.000487226679175853 -0.00696015073041764
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.22 | 72.53 | 72.86 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10000            0   -155949.41    1349.4253   -154599.99    30096.474     294.7293    -538.6074    2298.8426   -2743.5085   -1171.1564      30.5776      30.5776      32.1891    2.3783855   -221408.91 
   10200           50   -155953.97     1373.216   -154580.75    30096.474    299.92546   -242.91925    2643.8918   -318.17681   -3054.4728      30.5776      30.5776      32.1891    2.3783855   -221450.26 
Loop time of 2.6081 on 24 procs for 200 steps with 1537 atoms

Performance: 1.656 ns/day, 14.489 hours/ns, 76.684 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.1855     | 2.2672     | 2.3278     |   2.2 | 86.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017786   | 0.078291   | 0.16004    |  11.9 |  3.00
Output  | 0.0011292  | 0.0045409  | 0.0046899  |   1.1 |  0.17
Modify  | 0.25591    | 0.25626    | 0.25968    |   0.1 |  9.83
Other   |            | 0.001802   |            |       |  0.07

Nlocal:    64.0417 ave 70 max 48 min
Histogram: 1 0 0 1 1 1 4 6 6 4
Nghost:    2353.33 ave 2369 max 2331 min
Histogram: 1 0 1 5 2 1 6 3 2 3
Neighs:    24867 ave 27824 max 18028 min
Histogram: 1 0 1 1 0 1 6 6 5 3

Total # of neighbors = 596808
Ave neighs/atom = 388.294
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1536+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1536+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1536+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1536+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155953.969005944-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1536+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155953.969005944--155887.229868508-${mu}))
variable	prob1 equal	(30096.4744337948/((1536+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155953.969005944--155887.229868508--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.28598153591156
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155953.969005944; E_system:-155887.229868508;prob1:914072801.524043; prob2:0.28598153591156

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1537
variable	E_system equal ${E_trial}
variable	E_system equal -155953.969005944
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -242.919250167631
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
4  1  -155953.969005944  -221450.258097662  -5604.12143017233  0  0  21551.3649461299  0  0  0  0  0  49615.8612103541  -12.9361218168834  0  -53.8795127771341
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
4  1  -155953.969005944  1373.21599451358  -154580.753011431  30096.4744337948  299.925461456844  -242.919250167631  2643.89182918978  -318.176807567758  -3054.47277212492  30.5776  30.5776  32.1891  2.37838551956732
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
4  1  1537  -155953.969005944  -155953.969005944  30096.4744337948  30096.4744337948  -242.919250167631  0.824336409568787  2  1  1  3  914072801.524043  0.28598153591156  add pass  1537  20.7554909294  17.5174175396  7.24632073679 0.00832629282426928  -0.000487226679175853  -0.00696015073041764
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -155953.969005944, total atoms are 1537
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
4  1  1537  -155953.969005944  30096.4744337948  30096.4744337948  -242.919250167631  914072801.524043  0.28598153591156
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 5, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.576930642127991
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.576930642127991)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.576930642127991, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.226415157318115*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.226415157318115*1)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1537
variable	lastatom equal ${n_system}
variable	lastatom equal 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000895977 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1537]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1537]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1537]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1537]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1537]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1537]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1537]
variable	tx equal ${lastx}
variable	tx equal 21.3425580729579
variable	ty equal ${lasty}
variable	ty equal 18.1189579172582
variable	tz equal ${lastz}
variable	tz equal 7.04001918684007
variable	tvx equal ${lastvx}
variable	tvx equal -0.023312738058676
variable	tvy equal ${lastvy}
variable	tvy equal 0.00640200172881756
variable	tvz equal ${lastvz}
variable	tvz equal 0.0135687780664125
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1537]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1537]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1537]
variable	dx equal (${tx}-${delx})
variable	dx equal (21.3425580729579-${delx})
variable	dx equal (21.3425580729579-21.3425580729579)
variable	dy equal (${ty}-${dely})
variable	dy equal (18.1189579172582-${dely})
variable	dy equal (18.1189579172582-18.1189579172582)
variable	dz equal (${tz}-${delz})
variable	dz equal (7.04001918684007-${delz})
variable	dz equal (7.04001918684007-7.04001918684007)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1537 21.3425580729579 18.1189579172582 7.04001918684007; Last coords: 21.3425580729579 18.1189579172582 7.04001918684007
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.023312738058676 0.00640200172881756 0.0135687780664125 Last type: 2
group		del id ${lastatom}
group		del id 1537
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1536
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1537
0 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 0 ${dy} ${dz}
displace_atoms	delDisp move 0 0 ${dz}
displace_atoms	delDisp move 0 0 0
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx -0.023312738058676 vy ${tvy} vz ${tvz}
set		atom 1537 vx -0.023312738058676 vy 0.00640200172881756 vz ${tvz}
set		atom 1537 vx -0.023312738058676 vy 0.00640200172881756 vz 0.0135687780664125
  0 settings made for vx
  0 settings made for vy
  0 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1537 type ${ttyp}
set		atom 1537 type 2
  0 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.17 | 72.47 | 72.88 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10200            0   -155874.43    1366.8408   -154507.58    30096.474    298.72754   -338.57824    2503.9913   -395.75069   -3123.9753      30.5776      30.5776      32.1891    2.3780026   -221406.01 
   10400           50   -155828.35    1349.9186   -154478.43    30096.474    295.02912    128.16148     429.3389   -1291.7958    1246.9413      30.5776      30.5776      32.1891    2.3780026   -221427.06 
Loop time of 2.61664 on 24 procs for 200 steps with 1536 atoms

Performance: 1.651 ns/day, 14.537 hours/ns, 76.434 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2086     | 2.2842     | 2.336      |   1.9 | 87.29
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01785    | 0.069647   | 0.14519    |  10.8 |  2.66
Output  | 0.0011561  | 0.0045773  | 0.0047278  |   1.1 |  0.17
Modify  | 0.256      | 0.25637    | 0.25984    |   0.1 |  9.80
Other   |            | 0.001874   |            |       |  0.07

Nlocal:    64 ave 70 max 48 min
Histogram: 1 0 0 0 2 2 2 6 5 6
Nghost:    2350.67 ave 2382 max 2331 min
Histogram: 2 1 6 6 4 2 0 2 0 1
Neighs:    24828.7 ave 27831 max 17998 min
Histogram: 1 0 0 2 1 1 6 3 8 2

Total # of neighbors = 595888
Ave neighs/atom = 387.948
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155828.34754113-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155828.34754113--155953.969005944+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155828.34754113--155953.969005944+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.225047469139099
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155828.34754113; E_system:-155953.969005944;prob1:1.39357416891457e-52; prob2:0.225047469139099

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
5  1  1537  -155953.969005944  -155828.34754113  30096.4744337948  30096.4744337948  -242.919250167631  0.576930642127991  1  1  1  2  1.39357416891457e-52  0.225047469139099  delete fail  1537
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 5
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000771999 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.23 | 72.52 | 72.93 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10200            0   -155953.97     1373.216   -154580.75    30096.474    299.92546    -242.9193    2643.8918   -318.17681   -3054.4729      30.5776      30.5776      32.1891    2.3783855   -221450.26 
   10400           50   -155902.39    1350.1582   -154552.24    30096.474     294.8894    355.89526    802.39204   -1032.6582     1297.952      30.5776      30.5776      32.1891    2.3783855   -221494.98 
Loop time of 2.59782 on 24 procs for 200 steps with 1537 atoms

Performance: 1.663 ns/day, 14.432 hours/ns, 76.988 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.222      | 2.2885     | 2.3173     |   1.6 | 88.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017718   | 0.046703   | 0.11331    |  11.3 |  1.80
Output  | 0.0011439  | 0.0045253  | 0.0046749  |   1.0 |  0.17
Modify  | 0.25568    | 0.25627    | 0.2599     |   0.2 |  9.86
Other   |            | 0.001787   |            |       |  0.07

Nlocal:    64.0417 ave 70 max 48 min
Histogram: 1 0 0 0 2 2 2 6 5 6
Nghost:    2352.62 ave 2384 max 2333 min
Histogram: 2 1 6 7 3 2 0 2 0 1
Neighs:    24861.4 ave 27833 max 18012 min
Histogram: 1 0 0 2 1 1 5 4 7 3

Total # of neighbors = 596673
Ave neighs/atom = 388.206
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1537
variable	E_system equal ${E_trial}
variable	E_system equal -155902.394189273
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 355.895262123451
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
5  1  -155902.394189273  -221494.981538078  -5569.07616609107  0  0  21640.3510941935  0  0  0  0  0  49588.3006092328  -13.1402944971233  0  -53.8478940327656
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
5  1  -155902.394189273  1350.15824541636  -154552.235943856  30096.4744337948  294.889395706246  355.895262123451  802.392037231222  -1032.65822378279  1297.95197292192  30.5776  30.5776  32.1891  2.37838551956732
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
5  1  1537  -155902.394189273  -155902.394189273  30096.4744337948  30096.4744337948  355.895262123451  0.576930642127991  1  1  1  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -155902.394189273, total atoms are 1537
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
5  1  1537  -155902.394189273  30096.4744337948  30096.4744337948  355.895262123451  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 6, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0126343369483948
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0126343369483948)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0126343369483948, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.455340564250946*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.455340564250946*1)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000769854 secs
group		disp id ${nMCmoved}
group		disp id 1537
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 8.73675460578 ${ry} ${rz} units box
displace_atoms	disp move 8.73675460578 10.3176913665 ${rz} units box
displace_atoms	disp move 8.73675460578 10.3176913665 22.1450377113 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.14 | 72.56 | 72.88 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10400            0   -155894.57    1350.1582   -154544.41    30096.474     294.8894    581.99791    1302.0478   -774.98134    1218.9272      30.5776      30.5776      32.1891    2.3783855   -221502.15 
   10600           50   -155886.91    1375.2671   -154511.64    30096.474    300.37344    932.17218    2868.8394    11.225871   -83.548729      30.5776      30.5776      32.1891    2.3783855   -221572.21 
Loop time of 2.61277 on 24 procs for 200 steps with 1537 atoms

Performance: 1.653 ns/day, 14.515 hours/ns, 76.547 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2181     | 2.2834     | 2.3211     |   1.7 | 87.40
Neigh   | 0.0095339  | 0.0097365  | 0.0099239  |   0.1 |  0.37
Comm    | 0.018194   | 0.056051   | 0.12156    |  10.7 |  2.15
Output  | 0.001158   | 0.0045181  | 0.004667   |   1.0 |  0.17
Modify  | 0.25665    | 0.2572     | 0.26093    |   0.2 |  9.84
Other   |            | 0.001814   |            |       |  0.07

Nlocal:    64.0417 ave 71 max 49 min
Histogram: 1 0 0 2 0 2 5 9 1 4
Nghost:    2353.79 ave 2381 max 2331 min
Histogram: 1 0 3 6 4 4 4 1 0 1
Neighs:    24860.7 ave 28236 max 18374 min
Histogram: 1 0 2 0 0 3 7 8 1 2

Total # of neighbors = 596657
Ave neighs/atom = 388.196
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-155886.909892806-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-155886.909892806--155902.394189273))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.888370037078857
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155886.909892806; E_system:-155902.394189273;prob1:5.24714556494822e-12; prob2:0.888370037078857

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
6  1  1537  -155902.394189273  -155886.909892806  30096.4744337948  30096.4744337948  355.895262123451  0.0126343369483948  0  1  1  1  5.24714556494822e-12  0.888370037078857  displace fail  1537  8.73675460578  10.3176913665  22.1450377113
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 7, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.301529884338379
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.301529884338379)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.301529884338379, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.155871212482452*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.155871212482452*1)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000859022 secs
group		disp id ${nMCmoved}
group		disp id 1537
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 6.99292917143 ${ry} ${rz} units box
displace_atoms	disp move 6.99292917143 0.847450602015 ${rz} units box
displace_atoms	disp move 6.99292917143 0.847450602015 3.09170480318 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.16 | 72.57 | 72.9 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10400            0    -155863.1    1350.1582   -154512.94    30096.474     294.8894    863.18385    1513.1099   -528.19644    1604.6381      30.5776      30.5776      32.1891    2.3783855   -221519.68 
   10600           50   -155870.05    1388.7423   -154481.31    30096.474    303.31658    1095.1177    3203.1867   -111.84809    194.01456      30.5776      30.5776      32.1891    2.3783855   -221564.13 
Loop time of 2.61085 on 24 procs for 200 steps with 1537 atoms

Performance: 1.655 ns/day, 14.505 hours/ns, 76.603 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.1982     | 2.2714     | 2.3195     |   1.7 | 87.00
Neigh   | 0.0095191  | 0.0097161  | 0.00984    |   0.1 |  0.37
Comm    | 0.01819    | 0.066527   | 0.1399     |   9.7 |  2.55
Output  | 0.0011761  | 0.0045946  | 0.0047481  |   1.1 |  0.18
Modify  | 0.2561     | 0.25658    | 0.26036    |   0.2 |  9.83
Other   |            | 0.001986   |            |       |  0.08

Nlocal:    64.0417 ave 72 max 48 min
Histogram: 1 0 0 2 0 2 6 8 3 2
Nghost:    2353.54 ave 2382 max 2329 min
Histogram: 1 0 3 6 5 4 2 2 0 1
Neighs:    24856.7 ave 28550 max 18013 min
Histogram: 1 0 0 2 0 3 6 8 3 1

Total # of neighbors = 596561
Ave neighs/atom = 388.133
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-155870.053451749-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-155870.053451749--155902.394189273))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.30255138874054
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155870.053451749; E_system:-155902.394189273;prob1:2.75587519795183e-24; prob2:0.30255138874054

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
7  1  1537  -155902.394189273  -155870.053451749  30096.4744337948  30096.4744337948  355.895262123451  0.301529884338379  0  1  1  1  2.75587519795183e-24  0.30255138874054  displace fail  1537  6.99292917143  0.847450602015  3.09170480318
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 8, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.630171418190002
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.630171418190002)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.630171418190002, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.187917947769165*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.187917947769165*1)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1537
variable	lastatom equal ${n_system}
variable	lastatom equal 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000911951 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1537]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1537]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1537]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1537]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1537]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1537]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1537]
variable	tx equal ${lastx}
variable	tx equal 20.7789902183284
variable	ty equal ${lasty}
variable	ty equal 18.4363535620608
variable	tz equal ${lastz}
variable	tz equal 7.35709431886619
variable	tvx equal ${lastvx}
variable	tvx equal 0.0109572548563685
variable	tvy equal ${lastvy}
variable	tvy equal 0.00343482084999761
variable	tvz equal ${lastvz}
variable	tvz equal -0.00339095808782905
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1537]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1537]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1537]
variable	dx equal (${tx}-${delx})
variable	dx equal (20.7789902183284-${delx})
variable	dx equal (20.7789902183284-20.7789902183284)
variable	dy equal (${ty}-${dely})
variable	dy equal (18.4363535620608-${dely})
variable	dy equal (18.4363535620608-18.4363535620608)
variable	dz equal (${tz}-${delz})
variable	dz equal (7.35709431886619-${delz})
variable	dz equal (7.35709431886619-7.35709431886619)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1537 20.7789902183284 18.4363535620608 7.35709431886619; Last coords: 20.7789902183284 18.4363535620608 7.35709431886619
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0109572548563685 0.00343482084999761 -0.00339095808782905 Last type: 2
group		del id ${lastatom}
group		del id 1537
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1536
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1537
0 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 0 ${dy} ${dz}
displace_atoms	delDisp move 0 0 ${dz}
displace_atoms	delDisp move 0 0 0
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx 0.0109572548563685 vy ${tvy} vz ${tvz}
set		atom 1537 vx 0.0109572548563685 vy 0.00343482084999761 vz ${tvz}
set		atom 1537 vx 0.0109572548563685 vy 0.00343482084999761 vz -0.00339095808782905
  0 settings made for vx
  0 settings made for vy
  0 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1537 type ${ttyp}
set		atom 1537 type 2
  0 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.11 | 72.53 | 72.85 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10400            0   -155824.76    1348.9691   -154475.79    30096.474    294.82162    493.15117    1198.5703   -942.13649    1223.0197      30.5776      30.5776      32.1891    2.3780026   -221440.88 
   10600           50   -155817.37    1375.4927   -154441.88    30096.474    300.61844    954.56094    2797.8998    128.22473   -62.441754      30.5776      30.5776      32.1891    2.3780026   -221495.48 
Loop time of 2.60533 on 24 procs for 200 steps with 1536 atoms

Performance: 1.658 ns/day, 14.474 hours/ns, 76.766 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.1983     | 2.2754     | 2.3262     |   1.7 | 87.34
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017604   | 0.068627   | 0.14573    |  10.0 |  2.63
Output  | 0.001132   | 0.0045283  | 0.0046771  |   1.1 |  0.17
Modify  | 0.25418    | 0.25487    | 0.25865    |   0.2 |  9.78
Other   |            | 0.001913   |            |       |  0.07

Nlocal:    64 ave 70 max 48 min
Histogram: 1 0 0 0 3 0 5 4 5 6
Nghost:    2353.25 ave 2377 max 2328 min
Histogram: 1 0 2 2 7 5 4 0 2 1
Neighs:    24822.8 ave 27428 max 18019 min
Histogram: 1 0 0 2 1 0 3 7 5 5

Total # of neighbors = 595747
Ave neighs/atom = 387.856
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155817.373291213-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155817.373291213--155902.394189273+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155817.373291213--155902.394189273+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.837088346481323
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155817.373291213; E_system:-155902.394189273;prob1:5.26055781964869e-23; prob2:0.837088346481323

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
8  1  1537  -155902.394189273  -155817.373291213  30096.4744337948  30096.4744337948  355.895262123451  0.630171418190002  1  1  1  2  5.26055781964869e-23  0.837088346481323  delete fail  1537
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 9, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.517517805099487
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.517517805099487)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.517517805099487, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.800408840179443*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.800408840179443*1)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1537
variable	lastatom equal ${n_system}
variable	lastatom equal 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000766993 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1537]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1537]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1537]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1537]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1537]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1537]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1537]
variable	tx equal ${lastx}
variable	tx equal 20.7789902183284
variable	ty equal ${lasty}
variable	ty equal 18.4363535620608
variable	tz equal ${lastz}
variable	tz equal 7.35709431886619
variable	tvx equal ${lastvx}
variable	tvx equal 0.0109572548563685
variable	tvy equal ${lastvy}
variable	tvy equal 0.00343482084999761
variable	tvz equal ${lastvz}
variable	tvz equal -0.00339095808782905
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1537]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1537]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1537]
variable	dx equal (${tx}-${delx})
variable	dx equal (20.7789902183284-${delx})
variable	dx equal (20.7789902183284-20.7789902183284)
variable	dy equal (${ty}-${dely})
variable	dy equal (18.4363535620608-${dely})
variable	dy equal (18.4363535620608-18.4363535620608)
variable	dz equal (${tz}-${delz})
variable	dz equal (7.35709431886619-${delz})
variable	dz equal (7.35709431886619-7.35709431886619)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1537 20.7789902183284 18.4363535620608 7.35709431886619; Last coords: 20.7789902183284 18.4363535620608 7.35709431886619
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0109572548563685 0.00343482084999761 -0.00339095808782905 Last type: 2
group		del id ${lastatom}
group		del id 1537
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1536
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1537
0 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 0 ${dy} ${dz}
displace_atoms	delDisp move 0 0 ${dz}
displace_atoms	delDisp move 0 0 0
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx 0.0109572548563685 vy ${tvy} vz ${tvz}
set		atom 1537 vx 0.0109572548563685 vy 0.00343482084999761 vz ${tvz}
set		atom 1537 vx 0.0109572548563685 vy 0.00343482084999761 vz -0.00339095808782905
  0 settings made for vx
  0 settings made for vy
  0 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1537 type ${ttyp}
set		atom 1537 type 2
  0 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.11 | 72.53 | 72.85 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10400            0   -155824.76    1348.9691   -154475.79    30096.474    294.82162    493.15117    1198.5703   -942.13649    1223.0197      30.5776      30.5776      32.1891    2.3780026   -221440.88 
   10600           50   -155817.37    1375.4927   -154441.88    30096.474    300.61844    954.56094    2797.8998    128.22473   -62.441754      30.5776      30.5776      32.1891    2.3780026   -221495.48 
Loop time of 2.59329 on 24 procs for 200 steps with 1536 atoms

Performance: 1.666 ns/day, 14.407 hours/ns, 77.122 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2052     | 2.2756     | 2.3137     |   1.5 | 87.75
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017828   | 0.055878   | 0.12631    |   9.3 |  2.15
Output  | 0.0012159  | 0.0046295  | 0.0047801  |   1.0 |  0.18
Modify  | 0.25496    | 0.25536    | 0.25877    |   0.1 |  9.85
Other   |            | 0.001835   |            |       |  0.07

Nlocal:    64 ave 70 max 48 min
Histogram: 1 0 0 0 3 0 5 4 5 6
Nghost:    2353.25 ave 2377 max 2328 min
Histogram: 1 0 2 2 7 5 4 0 2 1
Neighs:    24822.8 ave 27428 max 18019 min
Histogram: 1 0 0 2 1 0 3 7 5 5

Total # of neighbors = 595747
Ave neighs/atom = 387.856
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155817.373291213-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155817.373291213--155902.394189273+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155817.373291213--155902.394189273+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.138675570487976
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155817.373291213; E_system:-155902.394189273;prob1:5.26055781964869e-23; prob2:0.138675570487976

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
9  1  1537  -155902.394189273  -155817.373291213  30096.4744337948  30096.4744337948  355.895262123451  0.517517805099487  1  1  1  2  5.26055781964869e-23  0.138675570487976  delete fail  1537
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 10, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.819174647331238
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.819174647331238)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.819174647331238, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.00074482 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 6.52255752798 ${ry} ${rz} units box
create_atoms	2 single 6.52255752798 10.6500869408 ${rz} units box
create_atoms	2 single 6.52255752798 10.6500869408 7.7581497535 units box
Created 1 atoms
  create_atoms CPU = 6.60419e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1538
print 		'ncreated is ${ncreated}'
ncreated is 1538
group		created id ${ncreated}
group		created id 1538
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.560218751430511-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.560218751430511-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.560218751430511-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.983171343803406-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.983171343803406-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.983171343803406-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.604769825935364-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.604769825935364-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.604769825935364-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00125051526325504 ${rvy} ${rvz}
velocity	created set 0.00125051526325504 0.0100336377928864 ${rvz}
velocity	created set 0.00125051526325504 0.0100336377928864 0.00217567225072627
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.21 | 72.62 | 72.95 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10400            0   -155952.89    1351.0455   -154601.85    30096.474     294.8912    635.86136    1071.3706   -708.44852     1544.662      30.5776      30.5776      32.1891    2.3787685   -221562.15 
   10600           50   -155952.87    1383.7443   -154569.13    30096.474    302.02833    288.74631    1727.1486   -598.10403   -262.80561      30.5776      30.5776      32.1891    2.3787685   -221618.59 
Loop time of 2.60923 on 24 procs for 200 steps with 1538 atoms

Performance: 1.656 ns/day, 14.496 hours/ns, 76.651 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2119     | 2.2822     | 2.3202     |   1.6 | 87.47
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017985   | 0.055977   | 0.12639    |  10.2 |  2.15
Output  | 0.001152   | 0.0045315  | 0.0046802  |   1.0 |  0.17
Modify  | 0.2642     | 0.2646     | 0.26808    |   0.1 | 10.14
Other   |            | 0.001875   |            |       |  0.07

Nlocal:    64.0833 ave 70 max 48 min
Histogram: 1 0 0 0 3 0 5 4 5 6
Nghost:    2357.17 ave 2381 max 2332 min
Histogram: 1 0 2 2 7 5 3 1 2 1
Neighs:    24886.3 ave 27430 max 18039 min
Histogram: 1 0 0 2 1 0 3 7 5 5

Total # of neighbors = 597272
Ave neighs/atom = 388.343
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155952.871644085-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155952.871644085--155902.394189273-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155952.871644085--155902.394189273--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.495520949363708
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155952.871644085; E_system:-155902.394189273;prob1:0.00130108993686576; prob2:0.495520949363708

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
10  1  1537  -155902.394189273  -155952.871644085  30096.4744337948  30096.4744337948  355.895262123451  0.819174647331238  2  1  1  3  0.00130108993686576  0.495520949363708  add fail  1538  6.52255752798  10.6500869408  7.7581497535 0.00125051526325504  0.0100336377928864  0.00217567225072627
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 10
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000871897 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.16 | 72.58 | 72.9 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10400            0   -155902.39    1350.1582   -154552.24    30096.474     294.8894    355.89524      802.392   -1032.6583     1297.952      30.5776      30.5776      32.1891    2.3783855   -221494.98 
   10600           50   -155891.19    1372.7374   -154518.45    30096.474    299.82094    829.58639    2276.4073   -11.559733    223.91166      30.5776      30.5776      32.1891    2.3783855   -221542.39 
Loop time of 2.61967 on 24 procs for 200 steps with 1537 atoms

Performance: 1.649 ns/day, 14.554 hours/ns, 76.345 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2085     | 2.2953     | 2.3387     |   1.8 | 87.62
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017913   | 0.061389   | 0.14823    |  10.9 |  2.34
Output  | 0.0011389  | 0.0045151  | 0.0046639  |   1.0 |  0.17
Modify  | 0.25627    | 0.25664    | 0.26019    |   0.1 |  9.80
Other   |            | 0.001825   |            |       |  0.07

Nlocal:    64.0417 ave 70 max 48 min
Histogram: 1 0 0 0 3 0 5 4 5 6
Nghost:    2355.21 ave 2379 max 2330 min
Histogram: 1 0 2 2 6 6 2 2 2 1
Neighs:    24855.6 ave 27430 max 18031 min
Histogram: 1 0 0 2 1 0 3 7 5 5

Total # of neighbors = 596535
Ave neighs/atom = 388.116
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1537
variable	E_system equal ${E_trial}
variable	E_system equal -155891.191614696
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 829.586393514393
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
10  1  -155891.191614696  -221542.385663036  -5649.07314238621  0  0  21688.7520925543  0  0  0  0  0  49678.4303882939  -13.1111701342932  0  -53.8041199879068
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
10  1  -155891.191614696  1372.73743369526  -154518.454181001  30096.4744337948  299.820938515919  829.586393514393  2276.40725803847  -11.5597330197285  223.911655524434  30.5776  30.5776  32.1891  2.37838551956732
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
10  1  1537  -155891.191614696  -155891.191614696  30096.4744337948  30096.4744337948  829.586393514393  0.819174647331238  2  1  1  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -155891.191614696, total atoms are 1537
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
10  1  1537  -155891.191614696  30096.4744337948  30096.4744337948  829.586393514393  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 11, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.403858125209808
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.403858125209808)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.403858125209808, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.982848942279816*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.982848942279816*1)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1537
variable	lastatom equal ${n_system}
variable	lastatom equal 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000748873 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1537]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1537]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1537]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1537]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1537]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1537]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1537]
variable	tx equal ${lastx}
variable	tx equal 21.3880096961169
variable	ty equal ${lasty}
variable	ty equal 18.5633769473257
variable	tz equal ${lastz}
variable	tz equal 7.13575313422582
variable	tvx equal ${lastvx}
variable	tvx equal -0.00203154980775567
variable	tvy equal ${lastvy}
variable	tvy equal 0.000850655716047217
variable	tvz equal ${lastvz}
variable	tvz equal 0.00192408436967223
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1537]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1537]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1537]
variable	dx equal (${tx}-${delx})
variable	dx equal (21.3880096961169-${delx})
variable	dx equal (21.3880096961169-21.3880096961169)
variable	dy equal (${ty}-${dely})
variable	dy equal (18.5633769473257-${dely})
variable	dy equal (18.5633769473257-18.5633769473257)
variable	dz equal (${tz}-${delz})
variable	dz equal (7.13575313422582-${delz})
variable	dz equal (7.13575313422582-7.13575313422582)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1537 21.3880096961169 18.5633769473257 7.13575313422582; Last coords: 21.3880096961169 18.5633769473257 7.13575313422582
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00203154980775567 0.000850655716047217 0.00192408436967223 Last type: 2
group		del id ${lastatom}
group		del id 1537
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1536
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1537
0 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 0 ${dy} ${dz}
displace_atoms	delDisp move 0 0 ${dz}
displace_atoms	delDisp move 0 0 0
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx -0.00203154980775567 vy ${tvy} vz ${tvz}
set		atom 1537 vx -0.00203154980775567 vy 0.000850655716047217 vz ${tvz}
set		atom 1537 vx -0.00203154980775567 vy 0.000850655716047217 vz 0.00192408436967223
  0 settings made for vx
  0 settings made for vy
  0 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1537 type ${ttyp}
set		atom 1537 type 2
  0 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.21 | 72.49 | 72.73 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10600            0   -155813.59    1372.6665   -154440.92    30096.474    300.00076    803.73533    2231.3578    -3.175154    183.02333      30.5776      30.5776      32.1891    2.3780026   -221494.29 
   10800           50   -155821.25    1405.1052   -154416.15    30096.474    307.09033   -871.80693    85.137791   -1843.0823   -857.47628      30.5776      30.5776      32.1891    2.3780026   -221317.15 
Loop time of 2.59126 on 24 procs for 200 steps with 1536 atoms

Performance: 1.667 ns/day, 14.396 hours/ns, 77.182 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2158     | 2.2796     | 2.3116     |   1.3 | 87.97
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017967   | 0.049949   | 0.11371    |   9.1 |  1.93
Output  | 0.001127   | 0.0045248  | 0.004674   |   1.1 |  0.17
Modify  | 0.25481    | 0.25535    | 0.25886    |   0.1 |  9.85
Other   |            | 0.001838   |            |       |  0.07

Nlocal:    64 ave 70 max 49 min
Histogram: 1 0 0 2 0 1 5 6 4 5
Nghost:    2351.83 ave 2379 max 2331 min
Histogram: 1 1 5 4 4 4 3 1 0 1
Neighs:    24826.8 ave 27819 max 18373 min
Histogram: 1 0 0 2 0 3 4 7 5 2

Total # of neighbors = 595843
Ave neighs/atom = 387.919
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155821.252271876-${E_system}+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155821.252271876--155891.191614696+${mu}))
variable	prob1 equal	(1537*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155821.252271876--155891.191614696+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.129523575305939
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155821.252271876; E_system:-155891.191614696;prob1:5.10173345340789e-12; prob2:0.129523575305939

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
11  1  1537  -155891.191614696  -155821.252271876  30096.4744337948  30096.4744337948  829.586393514393  0.403858125209808  1  1  1  2  5.10173345340789e-12  0.129523575305939  delete fail  1537
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 12, 1
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.832381367683411
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.832381367683411)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.832381367683411, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:1; n_GCMC:1
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1537 atoms
  read_restart CPU = 0.000745058 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 5.76394801898 ${ry} ${rz} units box
create_atoms	2 single 5.76394801898 27.5955275755 ${rz} units box
create_atoms	2 single 5.76394801898 27.5955275755 17.1664787953 units box
Created 1 atoms
  create_atoms CPU = 5.31673e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1538
print 		'ncreated is ${ncreated}'
ncreated is 1538
group		created id ${ncreated}
group		created id 1538
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.624304234981537-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.624304234981537-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.624304234981537-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.191054463386536-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.191054463386536-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.191054463386536-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.275852978229523-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.275852978229523-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.275852978229523-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00258132789935086 ${rvy} ${rvz}
velocity	created set 0.00258132789935086 -0.00641562802070829 ${rvz}
velocity	created set 0.00258132789935086 -0.00641562802070829 -0.0046546842184297
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.28 | 72.58 | 72.82 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10600            0   -155947.99    1373.3138   -154574.68    30096.474    299.75168    979.92876    2508.9353    15.471792    415.37918      30.5776      30.5776      32.1891    2.3787685   -221623.04 
   10800           50   -155959.07     1408.313   -154550.75    30096.474     307.3909   -231.83427    1094.8033   -1501.5872   -288.71895      30.5776      30.5776      32.1891    2.3787685   -221453.08 
Loop time of 2.72512 on 24 procs for 200 steps with 1538 atoms

Performance: 1.585 ns/day, 15.140 hours/ns, 73.391 timesteps/s
97.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2145     | 2.2915     | 2.4386     |   3.6 | 84.09
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017773   | 0.16494    | 0.24192    |  13.3 |  6.05
Output  | 0.001153   | 0.0045536  | 0.004704   |   1.1 |  0.17
Modify  | 0.2618     | 0.26224    | 0.26579    |   0.1 |  9.62
Other   |            | 0.001878   |            |       |  0.07

Nlocal:    64.0833 ave 70 max 49 min
Histogram: 1 0 0 2 0 1 5 6 4 5
Nghost:    2355.25 ave 2383 max 2334 min
Histogram: 1 1 3 6 4 4 3 1 0 1
Neighs:    24890.9 ave 27852 max 18390 min
Histogram: 1 0 0 2 0 3 4 6 5 3

Total # of neighbors = 597381
Ave neighs/atom = 388.414
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155959.067874567-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155959.067874567--155891.191614696-${mu}))
variable	prob1 equal	(30096.4744337948/((1537+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-155959.067874567--155891.191614696--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.896998345851898
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155959.067874567; E_system:-155891.191614696;prob1:6152829706.28639; prob2:0.896998345851898

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1538
variable	E_system equal ${E_trial}
variable	E_system equal -155959.067874567
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -231.834271359298
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
12  2  -155959.067874567  -221453.080653464  -5610.06986166867  0  0  21593.8031646704  0  0  0  0  0  49644.4731431668  -26.8842208964305  0  -107.309446375181
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
12  2  -155959.067874567  1408.31295340869  -154550.754921159  30096.4744337948  307.390898625545  -231.834271359298  1094.8033356666  -1501.58719954995  -288.718950194548  30.5776  30.5776  32.1891  2.37876848138818
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
12  2  1538  -155959.067874567  -155959.067874567  30096.4744337948  30096.4744337948  -231.834271359298  0.832381367683411  2  2  2  3  6152829706.28639  0.896998345851898  add pass  1538  5.76394801898  27.5955275755  17.1664787953 0.00258132789935086  -0.00641562802070829  -0.0046546842184297
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -155959.067874567, total atoms are 1538
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
12  2  1538  -155959.067874567  30096.4744337948  30096.4744337948  -231.834271359298  6152829706.28639  0.896998345851898
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 13, 2
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.814430713653564
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.814430713653564)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.814430713653564, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:2; n_GCMC:2
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1538 atoms
  read_restart CPU = 0.000908852 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 10.9869989291 ${ry} ${rz} units box
create_atoms	2 single 10.9869989291 19.9391471498 ${rz} units box
create_atoms	2 single 10.9869989291 19.9391471498 31.9614700354 units box
Created 1 atoms
  create_atoms CPU = 5.00679e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1539
print 		'ncreated is ${ncreated}'
ncreated is 1539
group		created id ${ncreated}
group		created id 1539
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.329149305820465-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.329149305820465-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.329149305820465-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.906518161296844-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.906518161296844-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.906518161296844-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.336302876472473-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.336302876472473-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.336302876472473-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00354792146522281 ${rvy} ${rvz}
velocity	created set -0.00354792146522281 0.00844184167582237 ${rvz}
velocity	created set -0.00354792146522281 0.00844184167582237 -0.00339936891183033
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.26 | 72.51 | 72.85 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   10800            0   -156032.54    1409.1043   -154623.44    30096.474    307.36366   -229.11972    1130.7311   -1485.2876   -332.80268      30.5776      30.5776      32.1891    2.3791514    -221502.9 
   11000           50   -156023.94     1404.814   -154619.12    30096.474    306.42781    3414.2951    4380.3479    1240.6853    4621.8523      30.5776      30.5776      32.1891    2.3791514   -221561.59 
Loop time of 2.59512 on 24 procs for 200 steps with 1539 atoms

Performance: 1.665 ns/day, 14.417 hours/ns, 77.068 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2057     | 2.2802     | 2.3122     |   1.5 | 87.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018044   | 0.050166   | 0.12466    |  10.4 |  1.93
Output  | 0.0011199  | 0.0045152  | 0.0046649  |   1.1 |  0.17
Modify  | 0.25787    | 0.2584     | 0.26192    |   0.1 |  9.96
Other   |            | 0.001839   |            |       |  0.07

Nlocal:    64.125 ave 71 max 48 min
Histogram: 1 0 0 0 2 2 5 6 5 3
Nghost:    2352.04 ave 2382 max 2328 min
Histogram: 1 1 4 4 4 7 0 1 1 1
Neighs:    24931.4 ave 28310 max 18009 min
Histogram: 1 0 0 2 0 3 6 4 7 1

Total # of neighbors = 598354
Ave neighs/atom = 388.794
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156023.937551528-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156023.937551528--155959.067874567-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156023.937551528--155959.067874567--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.369635105133057
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156023.937551528; E_system:-155959.067874567;prob1:39677309.9084303; prob2:0.369635105133057

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1539
variable	E_system equal ${E_trial}
variable	E_system equal -156023.937551528
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3414.29513921744
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
13  3  -156023.937551528  -221561.588568421  -5479.39078486926  0  0  21581.9233185173  0  0  0  0  0  49636.5693174753  -40.6203119271887  0  -160.830522304062
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
13  3  -156023.937551528  1404.81397549604  -154619.123576032  30096.4744337948  306.427813138891  3414.29513921744  4380.34788628099  1240.68526191896  4621.85226945237  30.5776  30.5776  32.1891  2.37915144320905
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
13  3  1539  -156023.937551528  -156023.937551528  30096.4744337948  30096.4744337948  3414.29513921744  0.814430713653564  2  3  3  3  39677309.9084303  0.369635105133057  add pass  1539  10.9869989291  19.9391471498  31.9614700354 -0.00354792146522281  0.00844184167582237  -0.00339936891183033
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156023.937551528, total atoms are 1539
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
13  3  1539  -156023.937551528  30096.4744337948  30096.4744337948  3414.29513921744  39677309.9084303  0.369635105133057
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 14, 3
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.230814278125763
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.230814278125763)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.230814278125763, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.269686639308929*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.269686639308929*3)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000895023 secs
group		disp id ${nMCmoved}
group		disp id 1537
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 7.08075500946 ${ry} ${rz} units box
displace_atoms	disp move 7.08075500946 -5.70046952416 ${rz} units box
displace_atoms	disp move 7.08075500946 -5.70046952416 -5.93592115422 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.11 | 72.41 | 72.88 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11000            0   -155993.13     1404.814   -154588.31    30096.474    306.42781    3717.6135     4794.935    1630.7091    4727.1965      30.5776      30.5776      32.1891    2.3791514   -221597.32 
   11200           50   -156018.42    1413.2889   -154605.13    30096.474    308.27641    2991.0047    4093.8509    2080.7205    2798.4428      30.5776      30.5776      32.1891    2.3791514   -221565.77 
Loop time of 2.58511 on 24 procs for 200 steps with 1539 atoms

Performance: 1.671 ns/day, 14.362 hours/ns, 77.366 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.1859     | 2.2634     | 2.3042     |   1.8 | 87.55
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01785    | 0.058736   | 0.13617    |  11.4 |  2.27
Output  | 0.001153   | 0.004573   | 0.004724   |   1.1 |  0.18
Modify  | 0.25624    | 0.25658    | 0.2601     |   0.1 |  9.93
Other   |            | 0.001861   |            |       |  0.07

Nlocal:    64.125 ave 71 max 48 min
Histogram: 1 0 0 0 3 0 8 4 3 5
Nghost:    2347.79 ave 2371 max 2327 min
Histogram: 1 2 1 5 4 5 3 0 0 3
Neighs:    24928.6 ave 28323 max 18012 min
Histogram: 1 0 0 1 2 2 6 5 6 1

Total # of neighbors = 598287
Ave neighs/atom = 388.75
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156018.416431127-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156018.416431127--156023.937551528))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.490486204624176
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156018.416431127; E_system:-156023.937551528;prob1:9.50488569746627e-05; prob2:0.490486204624176

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
14  3  1539  -156023.937551528  -156018.416431127  30096.4744337948  30096.4744337948  3414.29513921744  0.230814278125763  0  3  3  1  9.50488569746627e-05  0.490486204624176  displace fail  1537  7.08075500946  -5.70046952416  -5.93592115422
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 15, 3
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.319210767745972
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.319210767745972)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.319210767745972, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.0409663319587708*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.0409663319587708*3)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000895023 secs
group		disp id ${nMCmoved}
group		disp id 1537
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -11.360537478 ${ry} ${rz} units box
displace_atoms	disp move -11.360537478 -3.41702493411 ${rz} units box
displace_atoms	disp move -11.360537478 -3.41702493411 -2.25193415194 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.11 | 72.43 | 72.91 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11000            0   -156002.66     1404.814   -154597.85    30096.474    306.42781     3545.543     4424.445    1549.7154    4662.4685      30.5776      30.5776      32.1891    2.3791514    -221586.7 
   11200           50   -156027.39     1412.812   -154614.57    30096.474    308.17241    3235.9204    4559.2451    2229.0543    2919.4617      30.5776      30.5776      32.1891    2.3791514    -221589.1 
Loop time of 2.58118 on 24 procs for 200 steps with 1539 atoms

Performance: 1.674 ns/day, 14.340 hours/ns, 77.484 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.1891     | 2.2671     | 2.3004     |   1.7 | 87.83
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017791   | 0.051106   | 0.12909    |  11.5 |  1.98
Output  | 0.001127   | 0.004571   | 0.0047228  |   1.1 |  0.18
Modify  | 0.25618    | 0.25656    | 0.26015    |   0.2 |  9.94
Other   |            | 0.001848   |            |       |  0.07

Nlocal:    64.125 ave 71 max 48 min
Histogram: 1 0 0 0 3 0 8 4 4 4
Nghost:    2348.29 ave 2372 max 2327 min
Histogram: 1 2 1 5 5 3 4 0 0 3
Neighs:    24930.2 ave 28330 max 18012 min
Histogram: 1 0 0 1 2 2 6 5 6 1

Total # of neighbors = 598324
Ave neighs/atom = 388.775
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156027.38685818-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156027.38685818--156023.937551528))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.366016209125519
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156027.38685818; E_system:-156023.937551528;prob1:325.662665179636; prob2:0.366016209125519

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1539
variable	E_system equal ${E_trial}
variable	E_system equal -156027.38685818
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3235.92035546611
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
15  3  -156027.38685818  -221589.102202124  -5576.96384106813  0  0  21514.9244269979  0  0  0  0  0  49825.5277084007  -40.7377817545341  0  -161.035168632966
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
15  3  -156027.38685818  1412.81204818402  -154614.574809996  30096.4744337948  308.172408484505  3235.92035546611  4559.24506517478  2229.05427385125  2919.4617273723  30.5776  30.5776  32.1891  2.37915144320905
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
15  4  1539  -156027.38685818  -156027.38685818  30096.4744337948  30096.4744337948  3235.92035546611  0.319210767745972  0  3  3  1  325.662665179636  0.366016209125519  displace pass  1537  -11.360537478  -3.41702493411  -2.25193415194
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156027.38685818, total atoms are 1539
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
15  4  1539  -156027.38685818  30096.4744337948  30096.4744337948  3235.92035546611  325.662665179636  0.366016209125519
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 15
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000852108 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.2 | 72.54 | 73.01 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11200            0   -156027.39     1412.812   -154614.57    30096.474    308.17241    3235.9203     4559.245    2229.0543    2919.4615      30.5776      30.5776      32.1891    2.3791514    -221589.1 
   11400           50   -156084.03    1435.7818   -154648.25    30096.474    313.18272    5086.7737    7053.3621    6813.9075    1393.0514      30.5776      30.5776      32.1891    2.3791514   -221417.19 
Loop time of 2.59099 on 24 procs for 200 steps with 1539 atoms

Performance: 1.667 ns/day, 14.394 hours/ns, 77.190 timesteps/s
99.1% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2161     | 2.2779     | 2.3085     |   1.5 | 87.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017925   | 0.048581   | 0.11035    |  10.1 |  1.87
Output  | 0.001123   | 0.0045191  | 0.004668   |   1.1 |  0.17
Modify  | 0.25768    | 0.25817    | 0.26172    |   0.1 |  9.96
Other   |            | 0.001832   |            |       |  0.07

Nlocal:    64.125 ave 70 max 50 min
Histogram: 1 0 0 2 1 2 1 6 6 5
Nghost:    2353.04 ave 2382 max 2330 min
Histogram: 1 4 2 4 3 5 1 2 0 2
Neighs:    24925.2 ave 27909 max 18704 min
Histogram: 1 0 1 1 2 1 5 4 8 1

Total # of neighbors = 598205
Ave neighs/atom = 388.697
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1539
variable	E_system equal ${E_trial}
variable	E_system equal -156084.034016271
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 5086.77366895965
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
15  3  -156084.034016271  -221417.18653095  -5613.64213085308  0  0  21420.0445295216  0  0  0  0  0  49728.5213370509  -40.675909570279  0  -161.095311471288
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
15  3  -156084.034016271  1435.78176031038  -154648.252255961  30096.4744337948  313.18272214744  5086.77366895965  7053.36205067486  6813.90754623673  1393.05140996736  30.5776  30.5776  32.1891  2.37915144320905
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
15  4  1539  -156084.034016271  -156084.034016271  30096.4744337948  30096.4744337948  5086.77366895965  0.319210767745972  0  3  3  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156084.034016271, total atoms are 1539
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
15  4  1539  -156084.034016271  30096.4744337948  30096.4744337948  5086.77366895965  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 16, 4
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.608787655830383
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.608787655830383)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.608787655830383, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.0538861751556396*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.0538861751556396*3)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1537
variable	lastatom equal ${n_system}
variable	lastatom equal 1539
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000777006 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1539]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1539]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1539]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1539]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1539]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1539]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1539]
variable	tx equal ${lastx}
variable	tx equal 11.1844399280946
variable	ty equal ${lasty}
variable	ty equal 20.0117058728133
variable	tz equal ${lastz}
variable	tz equal 0.496098388384088
variable	tvx equal ${lastvx}
variable	tvx equal -0.00226994105187134
variable	tvy equal ${lastvy}
variable	tvy equal 0.00490896773108888
variable	tvz equal ${lastvz}
variable	tvz equal -0.0126241544193869
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1537]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1537]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1537]
variable	dx equal (${tx}-${delx})
variable	dx equal (11.1844399280946-${delx})
variable	dx equal (11.1844399280946-9.39208765381911)
variable	dy equal (${ty}-${dely})
variable	dy equal (20.0117058728133-${dely})
variable	dy equal (20.0117058728133-14.537125977709)
variable	dz equal (${tz}-${delz})
variable	dz equal (0.496098388384088-${delz})
variable	dz equal (0.496098388384088-5.31724866013643)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1537 9.39208765381911 14.537125977709 5.31724866013643; Last coords: 11.1844399280946 20.0117058728133 0.496098388384088
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00226994105187134 0.00490896773108888 -0.0126241544193869 Last type: 2
group		del id ${lastatom}
group		del id 1539
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1538
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1537
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 1.79235227427549 ${dy} ${dz}
displace_atoms	delDisp move 1.79235227427549 5.4745798951043 ${dz}
displace_atoms	delDisp move 1.79235227427549 5.4745798951043 -4.82115027175234
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1537 vx -0.00226994105187134 vy ${tvy} vz ${tvz}
set		atom 1537 vx -0.00226994105187134 vy 0.00490896773108888 vz ${tvz}
set		atom 1537 vx -0.00226994105187134 vy 0.00490896773108888 vz -0.0126241544193869
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1537 type ${ttyp}
set		atom 1537 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.21 | 72.6 | 73.02 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11400            0   -156013.48    1432.2664   -154581.22    30096.474    312.61918     5000.295    7026.4575    6620.4067    1354.0207      30.5776      30.5776      32.1891    2.3787685   -221348.99 
   11600           50   -155979.21    1355.4876   -154623.72    30096.474    295.86078    2121.4584    4058.4015    1390.8569    915.11696      30.5776      30.5776      32.1891    2.3787685   -221319.56 
Loop time of 2.60394 on 24 procs for 200 steps with 1538 atoms

Performance: 1.659 ns/day, 14.466 hours/ns, 76.807 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2156     | 2.2834     | 2.3225     |   1.6 | 87.69
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018064   | 0.057326   | 0.12506    |  10.1 |  2.20
Output  | 0.001122   | 0.0045048  | 0.0046539  |   1.1 |  0.17
Modify  | 0.25636    | 0.2568     | 0.26034    |   0.1 |  9.86
Other   |            | 0.001944   |            |       |  0.07

Nlocal:    64.0833 ave 71 max 50 min
Histogram: 1 0 0 3 1 2 2 6 6 3
Nghost:    2355.92 ave 2384 max 2331 min
Histogram: 1 0 5 2 7 4 2 1 0 2
Neighs:    24900.8 ave 27880 max 18709 min
Histogram: 1 0 1 2 0 2 4 6 6 2

Total # of neighbors = 597619
Ave neighs/atom = 388.569
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155979.209838098-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155979.209838098--156084.034016271+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-155979.209838098--156084.034016271+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.65721732378006
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-155979.209838098; E_system:-156084.034016271;prob1:1.97335441511539e-37; prob2:0.65721732378006

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
16  4  1539  -156084.034016271  -155979.209838098  30096.4744337948  30096.4744337948  5086.77366895965  0.608787655830383  1  3  3  2  1.97335441511539e-37  0.65721732378006  delete fail  1537
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 17, 4
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.973115980625153
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.973115980625153)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.973115980625153, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000770092 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 8.43414632638 ${ry} ${rz} units box
create_atoms	2 single 8.43414632638 12.6501264513 ${rz} units box
create_atoms	2 single 8.43414632638 12.6501264513 30.3306978457 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1540
print 		'ncreated is ${ncreated}'
ncreated is 1540
group		created id ${ncreated}
group		created id 1540
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.266008377075195-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.266008377075195-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.266008377075195-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.209151923656464-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.209151923656464-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.209151923656464-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0739347338676453-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0739347338676453-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.0739347338676453-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00485911927747192 ${rvy} ${rvz}
velocity	created set -0.00485911927747192 -0.00603981235272966 ${rvz}
velocity	created set -0.00485911927747192 -0.00603981235272966 -0.00884776096787975
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.27 | 72.68 | 73.13 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11400            0   -156144.36    1436.9295   -154707.43    30096.474    313.22942    5229.5684    7112.6285    7030.7901    1545.2867      30.5776      30.5776      32.1891    2.3795344   -221475.61 
   11600           50   -156117.15    1365.1184   -154752.03    30096.474    297.57565    2723.1841    4928.2667    2097.4753    1143.8103      30.5776      30.5776      32.1891    2.3795344   -221463.95 
Loop time of 2.60431 on 24 procs for 200 steps with 1540 atoms

Performance: 1.659 ns/day, 14.468 hours/ns, 76.796 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2196     | 2.2806     | 2.3233     |   1.5 | 87.57
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017673   | 0.060383   | 0.12135    |   9.2 |  2.32
Output  | 0.001128   | 0.0045614  | 0.0047131  |   1.1 |  0.18
Modify  | 0.25648    | 0.25692    | 0.26035    |   0.1 |  9.87
Other   |            | 0.001866   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 50 min
Histogram: 1 0 0 3 1 2 1 7 6 3
Nghost:    2358.83 ave 2388 max 2333 min
Histogram: 1 0 4 3 5 6 2 0 1 2
Neighs:    24967.6 ave 27912 max 18716 min
Histogram: 1 0 1 2 0 3 1 7 6 3

Total # of neighbors = 599222
Ave neighs/atom = 389.105
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156117.151200496-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156117.151200496--156084.034016271-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156117.151200496--156084.034016271--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.00628715753555298
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156117.151200496; E_system:-156084.034016271;prob1:2.93121137958488e-16; prob2:0.00628715753555298

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
17  4  1539  -156084.034016271  -156117.151200496  30096.4744337948  30096.4744337948  5086.77366895965  0.973115980625153  2  3  3  3  2.93121137958488e-16  0.00628715753555298  add fail  1540  8.43414632638  12.6501264513  30.3306978457 -0.00485911927747192  -0.00603981235272966  -0.00884776096787975
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 18, 4
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.172289192676544
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.172289192676544)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.172289192676544, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.967823505401611*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.967823505401611*3)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1539
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000887156 secs
group		disp id ${nMCmoved}
group		disp id 1539
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 3.54353719338 ${ry} ${rz} units box
displace_atoms	disp move 3.54353719338 3.9201330616 ${rz} units box
displace_atoms	disp move 3.54353719338 3.9201330616 4.57577515394 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.24 | 72.61 | 73 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11400            0   -156058.45    1435.7818   -154622.66    30096.474    313.18272    5348.2446    7443.2774    7080.0243    1521.4322      30.5776      30.5776      32.1891    2.3791514   -221448.09 
   11600           50   -156027.65    1361.3586   -154666.29    30096.474    296.94903    2437.3622    4317.4433    1880.3803     1114.263      30.5776      30.5776      32.1891    2.3791514   -221404.77 
Loop time of 2.59594 on 24 procs for 200 steps with 1539 atoms

Performance: 1.664 ns/day, 14.422 hours/ns, 77.043 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2345     | 2.2826     | 2.3142     |   1.3 | 87.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017764   | 0.049436   | 0.097638   |   8.9 |  1.90
Output  | 0.001128   | 0.0045176  | 0.004667   |   1.1 |  0.17
Modify  | 0.25716    | 0.25753    | 0.26108    |   0.1 |  9.92
Other   |            | 0.001898   |            |       |  0.07

Nlocal:    64.125 ave 71 max 50 min
Histogram: 1 0 0 3 1 2 2 6 6 3
Nghost:    2356.38 ave 2383 max 2332 min
Histogram: 1 0 6 1 5 5 3 1 0 2
Neighs:    24934.9 ave 27867 max 18725 min
Histogram: 1 0 1 1 1 2 3 6 7 2

Total # of neighbors = 598437
Ave neighs/atom = 388.848
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156027.652842554-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156027.652842554--156084.034016271))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.512764573097229
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156027.652842554; E_system:-156084.034016271;prob1:8.45597452471936e-42; prob2:0.512764573097229

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
18  4  1539  -156084.034016271  -156027.652842554  30096.4744337948  30096.4744337948  5086.77366895965  0.172289192676544  0  3  3  1  8.45597452471936e-42  0.512764573097229  displace fail  1539  3.54353719338  3.9201330616  4.57577515394
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 19, 4
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.960480690002441
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.960480690002441)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.960480690002441, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000856876 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 22.4889415429 ${ry} ${rz} units box
create_atoms	2 single 22.4889415429 14.5530847414 ${rz} units box
create_atoms	2 single 22.4889415429 14.5530847414 14.6975662236 units box
Created 1 atoms
  create_atoms CPU = 4.50611e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1540
print 		'ncreated is ${ncreated}'
ncreated is 1540
group		created id ${ncreated}
group		created id 1540
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.852652549743652-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.852652549743652-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.852652549743652-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.740915596485138-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.740915596485138-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.740915596485138-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.490040004253387-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.490040004253387-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.490040004253387-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00732325705206838 ${rvy} ${rvz}
velocity	created set 0.00732325705206838 0.00500290396934754 ${rvz}
velocity	created set 0.00732325705206838 0.00500290396934754 -0.000206831367426594
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.29 | 72.68 | 73.1 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11400            0   -156144.81    1436.4346   -154708.38    30096.474    313.12153    5165.3966    7115.5408    6971.1428    1409.5061      30.5776      30.5776      32.1891    2.3795344   -221475.85 
   11600           50    -156119.9    1367.1874   -154752.71    30096.474    298.02668    2552.9597    4626.9543    2111.1748    920.75002      30.5776      30.5776      32.1891    2.3795344   -221474.44 
Loop time of 2.59822 on 24 procs for 200 steps with 1540 atoms

Performance: 1.663 ns/day, 14.435 hours/ns, 76.976 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2163     | 2.2782     | 2.318      |   1.4 | 87.68
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017772   | 0.057377   | 0.11942    |   8.6 |  2.21
Output  | 0.0011249  | 0.0045685  | 0.0047202  |   1.1 |  0.18
Modify  | 0.25562    | 0.25621    | 0.25959    |   0.1 |  9.86
Other   |            | 0.001868   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 50 min
Histogram: 1 0 0 3 1 2 1 7 6 3
Nghost:    2358.83 ave 2387 max 2334 min
Histogram: 1 0 5 2 7 4 2 1 0 2
Neighs:    24965.3 ave 27892 max 18749 min
Histogram: 1 0 1 1 1 2 3 7 6 2

Total # of neighbors = 599168
Ave neighs/atom = 389.07
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156119.896650387-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156119.896650387--156084.034016271-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156119.896650387--156084.034016271--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.379713594913483
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156119.896650387; E_system:-156084.034016271;prob1:2.93133906481542e-14; prob2:0.379713594913483

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
19  4  1539  -156084.034016271  -156119.896650387  30096.4744337948  30096.4744337948  5086.77366895965  0.960480690002441  2  3  3  3  2.93133906481542e-14  0.379713594913483  add fail  1540  22.4889415429  14.5530847414  14.6975662236 0.00732325705206838  0.00500290396934754  -0.000206831367426594
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 20, 4
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.154512405395508
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.154512405395508)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.154512405395508, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.124651074409485*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.124651074409485*3)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.00087595 secs
group		disp id ${nMCmoved}
group		disp id 1537
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 19.9335094092 ${ry} ${rz} units box
displace_atoms	disp move 19.9335094092 -5.65790802802 ${rz} units box
displace_atoms	disp move 19.9335094092 -5.65790802802 13.0854069586 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.26 | 72.63 | 73.05 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11400            0   -156077.69    1435.7818   -154641.91    30096.474    313.18272    5081.5827    6995.6209    6649.8593    1599.2678      30.5776      30.5776      32.1891    2.3791514   -221385.18 
   11600           50   -156043.42    1357.4107   -154686.01    30096.474    296.08788     2591.951    4971.4518    1596.9031    1207.4981      30.5776      30.5776      32.1891    2.3791514   -221323.51 
Loop time of 2.6284 on 24 procs for 200 steps with 1539 atoms

Performance: 1.644 ns/day, 14.602 hours/ns, 76.092 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2149     | 2.2798     | 2.3394     |   1.5 | 86.74
Neigh   | 0.0095022  | 0.0097174  | 0.0099118  |   0.1 |  0.37
Comm    | 0.017857   | 0.077262   | 0.14242    |   8.3 |  2.94
Output  | 0.001122   | 0.0045419  | 0.004693   |   1.1 |  0.17
Modify  | 0.25463    | 0.25513    | 0.25858    |   0.1 |  9.71
Other   |            | 0.001904   |            |       |  0.07

Nlocal:    64.125 ave 70 max 48 min
Histogram: 1 0 0 0 2 1 4 7 3 6
Nghost:    2355.67 ave 2379 max 2334 min
Histogram: 1 1 6 2 2 3 4 3 1 1
Neighs:    24929.7 ave 27613 max 18033 min
Histogram: 1 0 0 2 0 1 4 8 3 5

Total # of neighbors = 598313
Ave neighs/atom = 388.767
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156043.416847693-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156043.416847693--156084.034016271))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.476218223571777
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156043.416847693; E_system:-156084.034016271;prob1:2.57634554132209e-30; prob2:0.476218223571777

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
20  4  1539  -156084.034016271  -156043.416847693  30096.4744337948  30096.4744337948  5086.77366895965  0.154512405395508  0  3  3  1  2.57634554132209e-30  0.476218223571777  displace fail  1537  19.9335094092  -5.65790802802  13.0854069586
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 20
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000868082 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.24 | 72.64 | 73.08 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11400            0   -156084.03    1435.7818   -154648.25    30096.474    313.18272    5086.7735    7053.3618    6813.9076    1393.0511      30.5776      30.5776      32.1891    2.3791514   -221417.19 
   11600           50   -156051.55    1360.0559   -154691.49    30096.474    296.66487    2426.5616     4378.803    1903.7169    997.16491      30.5776      30.5776      32.1891    2.3791514   -221394.62 
Loop time of 2.61494 on 24 procs for 200 steps with 1539 atoms

Performance: 1.652 ns/day, 14.527 hours/ns, 76.484 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2097     | 2.2776     | 2.3346     |   1.7 | 87.10
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018034   | 0.074641   | 0.14274    |   9.5 |  2.85
Output  | 0.0011299  | 0.00456    | 0.0047109  |   1.1 |  0.17
Modify  | 0.2556     | 0.25617    | 0.2593     |   0.1 |  9.80
Other   |            | 0.00192    |            |       |  0.07

Nlocal:    64.125 ave 71 max 50 min
Histogram: 1 0 0 3 1 2 1 7 6 3
Nghost:    2357.38 ave 2386 max 2332 min
Histogram: 1 0 5 2 5 6 2 1 0 2
Neighs:    24934.1 ave 27892 max 18716 min
Histogram: 1 0 1 2 0 3 2 6 7 2

Total # of neighbors = 598419
Ave neighs/atom = 388.836
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1539
variable	E_system equal ${E_trial}
variable	E_system equal -156051.546200397
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2426.56160244514
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
20  3  -156051.546200397  -221394.624131668  -5551.74031524277  0  0  21347.3093388712  0  0  0  0  0  49749.0684373123  -40.593500003003  0  -160.966029666371
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
20  3  -156051.546200397  1360.05589860361  -154691.490301793  30096.4744337948  296.664869530924  2426.56160244514  4378.80296947807  1903.71692898337  997.164908873965  30.5776  30.5776  32.1891  2.37915144320905
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
20  4  1539  -156051.546200397  -156051.546200397  30096.4744337948  30096.4744337948  2426.56160244514  0.154512405395508  0  3  3  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156051.546200397, total atoms are 1539
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
20  4  1539  -156051.546200397  30096.4744337948  30096.4744337948  2426.56160244514  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 21, 4
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.36145031452179
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.36145031452179)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.36145031452179, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.574874222278595*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.574874222278595*3)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1538
variable	lastatom equal ${n_system}
variable	lastatom equal 1539
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000725031 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1539]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1539]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1539]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1539]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1539]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1539]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1539]
variable	tx equal ${lastx}
variable	tx equal 11.2058417144764
variable	ty equal ${lasty}
variable	ty equal 20.0727347647272
variable	tz equal ${lastz}
variable	tz equal 31.9458995986124
variable	tvx equal ${lastvx}
variable	tvx equal -0.00327184999875093
variable	tvy equal ${lastvy}
variable	tvy equal 0.00473631608576116
variable	tvz equal ${lastvz}
variable	tvz equal -0.00682623612647353
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1538]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1538]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1538]
variable	dx equal (${tx}-${delx})
variable	dx equal (11.2058417144764-${delx})
variable	dx equal (11.2058417144764-5.56127908603834)
variable	dy equal (${ty}-${dely})
variable	dy equal (20.0727347647272-${dely})
variable	dy equal (20.0727347647272-27.4420208014675)
variable	dz equal (${tz}-${delz})
variable	dz equal (31.9458995986124-${delz})
variable	dz equal (31.9458995986124-17.0618717556635)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1538 5.56127908603834 27.4420208014675 17.0618717556635; Last coords: 11.2058417144764 20.0727347647272 31.9458995986124
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00327184999875093 0.00473631608576116 -0.00682623612647353 Last type: 2
group		del id ${lastatom}
group		del id 1539
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1538
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1538
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 5.64456262843806 ${dy} ${dz}
displace_atoms	delDisp move 5.64456262843806 -7.3692860367403 ${dz}
displace_atoms	delDisp move 5.64456262843806 -7.3692860367403 14.8840278429489
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx -0.00327184999875093 vy ${tvy} vz ${tvz}
set		atom 1538 vx -0.00327184999875093 vy 0.00473631608576116 vz ${tvz}
set		atom 1538 vx -0.00327184999875093 vy 0.00473631608576116 vz -0.00682623612647353
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1538 type ${ttyp}
set		atom 1538 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.11 | 72.55 | 72.89 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11600            0   -155985.05    1357.8567   -154627.19    30096.474    296.37787    2294.1159    4230.6924    1797.5726    854.08272      30.5776      30.5776      32.1891    2.3787685   -221318.84 
   11800           50   -156034.56    1374.4396   -154660.12    30096.474    299.99741    2823.0741    2358.5665    1966.1512    4144.5045      30.5776      30.5776      32.1891    2.3787685   -221661.19 
Loop time of 2.60881 on 24 procs for 200 steps with 1538 atoms

Performance: 1.656 ns/day, 14.493 hours/ns, 76.663 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2223     | 2.2799     | 2.3277     |   1.4 | 87.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017802   | 0.065507   | 0.12311    |   8.3 |  2.51
Output  | 0.001183   | 0.0045864  | 0.0047362  |   1.0 |  0.18
Modify  | 0.25646    | 0.25694    | 0.26027    |   0.1 |  9.85
Other   |            | 0.001921   |            |       |  0.07

Nlocal:    64.0833 ave 70 max 48 min
Histogram: 1 0 0 1 1 2 3 7 3 6
Nghost:    2353.88 ave 2381 max 2328 min
Histogram: 1 1 4 3 3 3 6 2 0 1
Neighs:    24902.4 ave 27648 max 18028 min
Histogram: 1 0 0 2 0 2 1 9 4 5

Total # of neighbors = 597657
Ave neighs/atom = 388.594
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156034.561394124-${E_system}+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156034.561394124--156051.546200397+${mu}))
variable	prob1 equal	(1539*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156034.561394124--156051.546200397+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.222319781780243
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156034.561394124; E_system:-156051.546200397;prob1:1.92692696695074e+27; prob2:0.222319781780243

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1538
variable	E_system equal ${E_trial}
variable	E_system equal -156034.561394124
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2823.07407910805
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
21  2  -156034.561394124  -221661.19443661  -5547.17098358166  0  0  21588.8483924882  0  0  0  0  0  49719.010184196  -26.3370482115058  0  -107.717502405611
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
21  2  -156034.561394124  1374.43964673225  -154660.121747392  30096.4744337948  299.997409732691  2823.07407910805  2358.56649518689  1966.15123390115  4144.5045082361  30.5776  30.5776  32.1891  2.37876848138818
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log
21  5  1538  -156034.561394124  -156034.561394124  30096.4744337948  30096.4744337948  2823.07407910805  0.36145031452179  1  2  2  2  1.92692696695074e+27  0.222319781780243  delete  pass  1538
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156034.561394124, total atoms are 1538
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
21  5  1538  -156034.561394124  30096.4744337948  30096.4744337948  2823.07407910805  1.92692696695074e+27  0.222319781780243
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 22, 5
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.996922731399536
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.996922731399536)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.996922731399536, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:2; n_GCMC:2
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1538 atoms
  read_restart CPU = 0.000755072 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 9.62570336686 ${ry} ${rz} units box
create_atoms	2 single 9.62570336686 15.5353236198 ${rz} units box
create_atoms	2 single 9.62570336686 15.5353236198 28.1658952359 units box
Created 1 atoms
  create_atoms CPU = 4.50611e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1539
print 		'ncreated is ${ncreated}'
ncreated is 1539
group		created id ${ncreated}
group		created id 1539
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0506033301353455-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0506033301353455-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.0506033301353455-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0724364519119263-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0724364519119263-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.0724364519119263-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.390742242336273-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.390742242336273-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.390742242336273-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00933226580710868 ${rvy} ${rvz}
velocity	created set -0.00933226580710868 -0.00887887460623621 ${rvz}
velocity	created set -0.00933226580710868 -0.00887887460623621 -0.00226886958533459
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.16 | 72.59 | 73.08 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11800            0   -156067.82    1375.8586   -154691.96    30096.474    300.11188    3207.7786    2622.0594    2659.6784    4341.5979      30.5776      30.5776      32.1891    2.3791514   -221751.79 
   12000           50   -156084.45    1364.7577   -154719.69    30096.474    297.69047     1139.764     1381.597   -742.81772    2780.5128      30.5776      30.5776      32.1891    2.3791514   -221709.07 
Loop time of 2.59873 on 24 procs for 200 steps with 1539 atoms

Performance: 1.662 ns/day, 14.437 hours/ns, 76.961 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2046     | 2.2709     | 2.3158     |   1.6 | 87.39
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017751   | 0.062461   | 0.12889    |   9.5 |  2.40
Output  | 0.001163   | 0.0045803  | 0.0047309  |   1.1 |  0.18
Modify  | 0.25836    | 0.25883    | 0.26221    |   0.1 |  9.96
Other   |            | 0.001932   |            |       |  0.07

Nlocal:    64.125 ave 70 max 48 min
Histogram: 1 0 0 1 1 0 4 6 6 5
Nghost:    2355.5 ave 2381 max 2330 min
Histogram: 1 2 4 1 5 3 5 0 0 3
Neighs:    24939.1 ave 27673 max 18002 min
Histogram: 1 0 0 2 0 2 2 10 3 4

Total # of neighbors = 598539
Ave neighs/atom = 388.914
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156084.446976132-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156084.446976132--156034.561394124-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156084.446976132--156034.561394124--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.293479442596436
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156084.446976132; E_system:-156034.561394124;prob1:0.000481786476475624; prob2:0.293479442596436

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
22  5  1538  -156034.561394124  -156084.446976132  30096.4744337948  30096.4744337948  2823.07407910805  0.996922731399536  2  2  2  3  0.000481786476475624  0.293479442596436  add fail  1539  9.62570336686  15.5353236198  28.1658952359 -0.00933226580710868  -0.00887887460623621  -0.00226886958533459
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 23, 5
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.822633266448975
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.822633266448975)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.822633266448975, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:2; n_GCMC:2
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1538 atoms
  read_restart CPU = 0.000826836 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 6.28736223849 ${ry} ${rz} units box
create_atoms	2 single 6.28736223849 29.4790554733 ${rz} units box
create_atoms	2 single 6.28736223849 29.4790554733 31.0062752777 units box
Created 1 atoms
  create_atoms CPU = 4.88758e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1539
print 		'ncreated is ${ncreated}'
ncreated is 1539
group		created id ${ncreated}
group		created id 1539
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.51393073797226-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.51393073797226-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.51393073797226-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.237226486206055-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.237226486206055-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.237226486206055-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.193450391292572-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.193450391292572-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.193450391292572-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.000289288635996048 ${rvy} ${rvz}
velocity	created set 0.000289288635996048 -0.00545681007945962 ${rvz}
velocity	created set 0.000289288635996048 -0.00545681007945962 -0.00636587367766759
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.17 | 72.59 | 73.08 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   11800            0   -156085.75    1375.0235   -154710.72    30096.474     299.9297    2974.4192    2506.0535    2306.6241    4110.5801      30.5776      30.5776      32.1891    2.3791514   -221751.65 
   12000           50   -156097.99    1359.4026   -154738.59    30096.474    296.52237    1179.0232    1323.6549   -684.83264    2898.2472      30.5776      30.5776      32.1891    2.3791514   -221773.86 
Loop time of 2.61427 on 24 procs for 200 steps with 1539 atoms

Performance: 1.652 ns/day, 14.524 hours/ns, 76.503 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2009     | 2.2749     | 2.3307     |   1.7 | 87.02
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018089   | 0.073986   | 0.14802    |   9.3 |  2.83
Output  | 0.0011969  | 0.0045763  | 0.0047328  |   1.0 |  0.18
Modify  | 0.25809    | 0.25874    | 0.26223    |   0.1 |  9.90
Other   |            | 0.002111   |            |       |  0.08

Nlocal:    64.125 ave 70 max 48 min
Histogram: 1 0 0 1 1 0 4 6 6 5
Nghost:    2355.62 ave 2380 max 2329 min
Histogram: 1 1 4 1 5 3 3 3 0 3
Neighs:    24939.7 ave 27932 max 18002 min
Histogram: 1 0 1 1 0 2 3 9 4 3

Total # of neighbors = 598552
Ave neighs/atom = 388.923
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156097.99368958-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156097.99368958--156034.561394124-${mu}))
variable	prob1 equal	(30096.4744337948/((1538+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156097.99368958--156034.561394124--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.956433653831482
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156097.99368958; E_system:-156034.561394124;prob1:3559847.80174682; prob2:0.956433653831482

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1539
variable	E_system equal ${E_trial}
variable	E_system equal -156097.99368958
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1179.02315762732
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
23  3  -156097.99368958  -221773.856691392  -5529.51336155615  0  0  21681.8802693989  0  0  0  0  0  49725.2980151546  -40.7144545197045  0  -161.087466666303
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
23  3  -156097.99368958  1359.40262908077  -154738.5910605  30096.4744337948  296.522373830593  1179.02315762732  1323.65486259326  -684.832636370231  2898.24724665893  30.5776  30.5776  32.1891  2.37915144320905
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
23  6  1539  -156097.99368958  -156097.99368958  30096.4744337948  30096.4744337948  1179.02315762732  0.822633266448975  2  3  3  3  3559847.80174682  0.956433653831482  add pass  1539  6.28736223849  29.4790554733  31.0062752777 0.000289288635996048  -0.00545681007945962  -0.00636587367766759
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156097.99368958, total atoms are 1539
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
23  6  1539  -156097.99368958  30096.4744337948  30096.4744337948  1179.02315762732  3559847.80174682  0.956433653831482
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 24, 6
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.72781229019165
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.72781229019165)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.72781229019165, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000949144 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 26.7138111764 ${ry} ${rz} units box
create_atoms	2 single 26.7138111764 29.7901218314 ${rz} units box
create_atoms	2 single 26.7138111764 29.7901218314 0.958976166167 units box
Created 1 atoms
  create_atoms CPU = 5.31673e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1540
print 		'ncreated is ${ncreated}'
ncreated is 1540
group		created id ${ncreated}
group		created id 1540
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.301078855991364-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.301078855991364-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.301078855991364-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.464025259017944-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.464025259017944-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.464025259017944-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.127896308898926-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.127896308898926-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.127896308898926-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00413083833287377 ${rvy} ${rvz}
velocity	created set -0.00413083833287377 -0.000747059040930462 ${rvz}
velocity	created set -0.00413083833287377 -0.000747059040930462 -0.00772718354634742
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.32 | 72.59 | 72.76 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12000            0   -156153.04    1360.0441      -154793    30096.474    296.46953    1413.4876    1668.8058   -429.22127    3000.8782      30.5776      30.5776      32.1891    2.3795344   -221850.54 
   12200           50   -156196.19    1388.8866    -154807.3    30096.474    302.75678   -970.19697   -498.51586    -1525.978   -886.09704      30.5776      30.5776      32.1891    2.3795344   -221654.11 
Loop time of 2.61587 on 24 procs for 200 steps with 1540 atoms

Performance: 1.651 ns/day, 14.533 hours/ns, 76.456 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.204      | 2.2846     | 2.3335     |   1.9 | 87.33
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017853   | 0.066758   | 0.14743    |  11.4 |  2.55
Output  | 0.001173   | 0.0045796  | 0.00473    |   1.0 |  0.18
Modify  | 0.25761    | 0.25813    | 0.26144    |   0.1 |  9.87
Other   |            | 0.001857   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 48 min
Histogram: 1 0 1 0 2 0 6 8 2 4
Nghost:    2355.25 ave 2375 max 2337 min
Histogram: 1 1 2 7 1 7 2 1 0 2
Neighs:    24960.2 ave 28356 max 18007 min
Histogram: 1 0 1 0 2 1 6 7 4 2

Total # of neighbors = 599045
Ave neighs/atom = 388.99
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156196.185305455-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156196.185305455--156097.99368958-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156196.185305455--156097.99368958--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.399523079395294
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156196.185305455; E_system:-156097.99368958;prob1:7.46089648849009e+31; prob2:0.399523079395294

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1540
variable	E_system equal ${E_trial}
variable	E_system equal -156196.185305455
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -970.196967560692
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
24  4  -156196.185305455  -221654.110552546  -5480.78696746931  0  0  21499.8551958648  0  0  0  0  0  49708.2567922364  -54.8551349847026  0  -214.544638555752
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
24  4  -156196.185305455  1388.88664751457  -154807.29865794  30096.4744337948  302.756782413413  -970.196967560692  -498.515863994154  -1525.97800141284  -886.097037275079  30.5776  30.5776  32.1891  2.37953440502992
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
24  7  1540  -156196.185305455  -156196.185305455  30096.4744337948  30096.4744337948  -970.196967560692  0.72781229019165  2  4  4  3  7.46089648849009e+31  0.399523079395294  add pass  1540  26.7138111764  29.7901218314  0.958976166167 -0.00413083833287377  -0.000747059040930462  -0.00772718354634742
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156196.185305455, total atoms are 1540
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
24  7  1540  -156196.185305455  30096.4744337948  30096.4744337948  -970.196967560692  7.46089648849009e+31  0.399523079395294
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 25, 7
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.744405627250671
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.744405627250671)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.744405627250671, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:4; n_GCMC:4
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000994921 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 26.309532261 ${ry} ${rz} units box
create_atoms	2 single 26.309532261 6.44923515498 ${rz} units box
create_atoms	2 single 26.309532261 6.44923515498 4.78059198908 units box
Created 1 atoms
  create_atoms CPU = 4.88758e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1541
print 		'ncreated is ${ncreated}'
ncreated is 1541
group		created id ${ncreated}
group		created id 1541
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.966667950153351-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.966667950153351-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.966667950153351-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.783025324344635-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.783025324344635-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.783025324344635-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.692546427249908-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.692546427249908-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.692546427249908-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00969092484775474 ${rvy} ${rvz}
velocity	created set 0.00969092484775474 0.00587736343868048 ${rvz}
velocity	created set 0.00969092484775474 0.00587736343868048 0.00399845962331325
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.24 | 72.66 | 73.06 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12200            0   -156256.02    1390.0848   -154865.93    30096.474    302.82119   -780.09436   -266.78487   -1277.7428   -795.75541      30.5776      30.5776      32.1891    2.3799174   -221714.47 
   12400           50   -156223.13    1348.4746   -154874.66    30096.474    293.75668    2536.9979    2818.0454    3076.0105    1716.9378      30.5776      30.5776      32.1891    2.3799174   -222007.94 
Loop time of 2.63528 on 24 procs for 200 steps with 1541 atoms

Performance: 1.639 ns/day, 14.640 hours/ns, 75.893 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2218     | 2.2961     | 2.3427     |   1.9 | 87.13
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018013   | 0.064417   | 0.13872    |  11.3 |  2.44
Output  | 0.0011351  | 0.004575   | 0.0047271  |   1.1 |  0.17
Modify  | 0.2678     | 0.26828    | 0.27163    |   0.1 | 10.18
Other   |            | 0.0019     |            |       |  0.07

Nlocal:    64.2083 ave 71 max 47 min
Histogram: 1 0 0 1 0 3 1 12 2 4
Nghost:    2358 ave 2386 max 2330 min
Histogram: 1 1 1 5 4 6 2 3 0 1
Neighs:    25002.1 ave 28348 max 17694 min
Histogram: 1 0 1 0 1 2 6 6 5 2

Total # of neighbors = 600050
Ave neighs/atom = 389.39
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156223.134785457-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156223.134785457--156196.185305455-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156223.134785457--156196.185305455--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.108484268188477
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156223.134785457; E_system:-156196.185305455;prob1:9.41207843166455e-21; prob2:0.108484268188477

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
25  7  1540  -156196.185305455  -156223.134785457  30096.4744337948  30096.4744337948  -970.196967560692  0.744405627250671  2  4  4  3  9.41207843166455e-21  0.108484268188477  add fail  1541  26.309532261  6.44923515498  4.78059198908 0.00969092484775474  0.00587736343868048  0.00399845962331325
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 25
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000903845 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.2 | 72.63 | 73.04 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12200            0   -156196.19    1388.8866    -154807.3    30096.474    302.75678   -970.19686   -498.51569   -1525.9779   -886.09703      30.5776      30.5776      32.1891    2.3795344   -221654.11 
   12400           50   -156147.03    1332.8027   -154814.23    30096.474    290.53132    2337.5686    2182.5688    3161.2816    1668.8554      30.5776      30.5776      32.1891    2.3795344   -221917.92 
Loop time of 2.63643 on 24 procs for 200 steps with 1540 atoms

Performance: 1.639 ns/day, 14.647 hours/ns, 75.860 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2206     | 2.2989     | 2.3526     |   2.0 | 87.20
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017967   | 0.071567   | 0.14995    |  11.4 |  2.71
Output  | 0.0011358  | 0.0045356  | 0.0046849  |   1.1 |  0.17
Modify  | 0.2592     | 0.25955    | 0.2629     |   0.1 |  9.84
Other   |            | 0.001904   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 47 min
Histogram: 1 0 0 1 0 3 2 11 2 4
Nghost:    2356.54 ave 2385 max 2328 min
Histogram: 1 1 2 4 4 6 2 3 0 1
Neighs:    24971.4 ave 28347 max 17656 min
Histogram: 1 0 1 0 1 2 6 6 5 2

Total # of neighbors = 599313
Ave neighs/atom = 389.164
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1540
variable	E_system equal ${E_trial}
variable	E_system equal -156147.031559984
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2337.56858775284
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
25  4  -156147.031559984  -221917.921900196  -5522.98029964088  0  0  21748.8240703619  0  0  0  0  0  49814.3272555372  -54.7682996630977  0  -214.512386382698
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
25  4  -156147.031559984  1332.80273988842  -154814.228820095  30096.4744337948  290.531318623082  2337.56858775284  2182.56876921965  3161.28158249752  1668.85541154137  30.5776  30.5776  32.1891  2.37953440502992
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
25  7  1540  -156147.031559984  -156147.031559984  30096.4744337948  30096.4744337948  2337.56858775284  0.744405627250671  2  4  4  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156147.031559984, total atoms are 1540
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
25  7  1540  -156147.031559984  30096.4744337948  30096.4744337948  2337.56858775284  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 26, 7
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.562353730201721
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.562353730201721)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.562353730201721, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:4; n_GCMC:4
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.845002055168152*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.845002055168152*4)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1540
variable	lastatom equal ${n_system}
variable	lastatom equal 1540
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000738144 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1540]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1540]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1540]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1540]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1540]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1540]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1540]
variable	tx equal ${lastx}
variable	tx equal 27.6939160915261
variable	ty equal ${lasty}
variable	ty equal 29.2644609169725
variable	tz equal ${lastz}
variable	tz equal 1.28902879797084
variable	tvx equal ${lastvx}
variable	tvx equal -0.0124633762417398
variable	tvy equal ${lastvy}
variable	tvy equal 0.0183670728209999
variable	tvz equal ${lastvz}
variable	tvz equal 0.00289366035020546
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1540]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1540]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1540]
variable	dx equal (${tx}-${delx})
variable	dx equal (27.6939160915261-${delx})
variable	dx equal (27.6939160915261-27.6939160915261)
variable	dy equal (${ty}-${dely})
variable	dy equal (29.2644609169725-${dely})
variable	dy equal (29.2644609169725-29.2644609169725)
variable	dz equal (${tz}-${delz})
variable	dz equal (1.28902879797084-${delz})
variable	dz equal (1.28902879797084-1.28902879797084)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1540 27.6939160915261 29.2644609169725 1.28902879797084; Last coords: 27.6939160915261 29.2644609169725 1.28902879797084
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0124633762417398 0.0183670728209999 0.00289366035020546 Last type: 2
group		del id ${lastatom}
group		del id 1540
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1539
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1540
0 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 0 ${dy} ${dz}
displace_atoms	delDisp move 0 0 ${dz}
displace_atoms	delDisp move 0 0 0
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1540 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1540 vx -0.0124633762417398 vy ${tvy} vz ${tvz}
set		atom 1540 vx -0.0124633762417398 vy 0.0183670728209999 vz ${tvz}
set		atom 1540 vx -0.0124633762417398 vy 0.0183670728209999 vz 0.00289366035020546
  0 settings made for vx
  0 settings made for vy
  0 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1540 type ${ttyp}
set		atom 1540 type 2
  0 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.23 | 72.57 | 73.09 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12400            0   -156078.24    1328.6466   -154749.59    30096.474    289.81366    2286.1951    2133.8857    3033.1437    1691.5558      30.5776      30.5776      32.1891    2.3791514   -221849.09 
   12600           50   -156108.36    1365.9053   -154742.46    30096.474    297.94079    4456.0301    6127.7931    4172.5222     3067.775      30.5776      30.5776      32.1891    2.3791514   -221584.77 
Loop time of 2.61057 on 24 procs for 200 steps with 1539 atoms

Performance: 1.655 ns/day, 14.503 hours/ns, 76.612 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2146     | 2.2867     | 2.3274     |   1.9 | 87.59
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017841   | 0.058613   | 0.13051    |  11.7 |  2.25
Output  | 0.0012152  | 0.0046105  | 0.00476    |   1.0 |  0.18
Modify  | 0.25809    | 0.25869    | 0.26234    |   0.2 |  9.91
Other   |            | 0.001951   |            |       |  0.07

Nlocal:    64.125 ave 72 max 47 min
Histogram: 1 0 0 1 3 0 6 4 7 2
Nghost:    2354.71 ave 2380 max 2326 min
Histogram: 1 0 4 1 4 6 2 3 0 3
Neighs:    24934.1 ave 28646 max 17627 min
Histogram: 1 0 0 1 3 1 4 9 4 1

Total # of neighbors = 598418
Ave neighs/atom = 388.836
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1540*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1540*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1540*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1540*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1540*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156108.362022634-${E_system}+${mu}))
variable	prob1 equal	(1540*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156108.362022634--156147.031559984+${mu}))
variable	prob1 equal	(1540*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156108.362022634--156147.031559984+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.471340417861938
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156108.362022634; E_system:-156147.031559984;prob1:307713954356.926; prob2:0.471340417861938

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1539
variable	E_system equal ${E_trial}
variable	E_system equal -156108.362022634
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 4456.03006673151
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
26  3  -156108.362022634  -221584.773827676  -5519.08188418485  0  0  21438.4126243307  0  0  0  0  0  49759.0053109341  -40.9428155446769  0  -160.981430493357
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
26  3  -156108.362022634  1365.90533225529  -154742.456690379  30096.4744337948  297.940788758132  4456.03006673151  6127.79308283442  4172.52215563697  3067.77496172314  30.5776  30.5776  32.1891  2.37915144320905
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log
26  8  1539  -156108.362022634  -156108.362022634  30096.4744337948  30096.4744337948  4456.03006673151  0.562353730201721  1  3  3  2  307713954356.926  0.471340417861938  delete  pass  1540
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156108.362022634, total atoms are 1539
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
26  8  1539  -156108.362022634  30096.4744337948  30096.4744337948  4456.03006673151  307713954356.926  0.471340417861938
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 27, 8
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.676845133304596
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.676845133304596)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.676845133304596, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:3; n_GCMC:3
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1539 atoms
  read_restart CPU = 0.000746965 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 21.5490009836 ${ry} ${rz} units box
create_atoms	2 single 21.5490009836 16.7200952195 ${rz} units box
create_atoms	2 single 21.5490009836 16.7200952195 25.739413143 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1540
print 		'ncreated is ${ncreated}'
ncreated is 1540
group		created id ${ncreated}
group		created id 1540
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.253833591938019-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.253833591938019-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.253833591938019-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0634508728981018-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0634508728981018-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.0634508728981018-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.362380564212799-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.362380564212799-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.362380564212799-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00511194342741228 ${rvy} ${rvz}
velocity	created set -0.00511194342741228 -0.00906547103075587 ${rvz}
velocity	created set -0.00511194342741228 -0.00906547103075587 -0.00285783416102589
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.35 | 72.67 | 73.01 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12600            0   -156165.38    1366.8715   -154798.51    30096.474    297.95781    4689.1252    6429.2366    4350.9367    3287.2023      30.5776      30.5776      32.1891    2.3795344   -221635.53 
   12800           50   -156184.82    1401.5195    -154783.3    30096.474    305.51057    1228.3099    2793.6169    -623.6179    1514.9306      30.5776      30.5776      32.1891    2.3795344   -221751.98 
Loop time of 2.61164 on 24 procs for 200 steps with 1540 atoms

Performance: 1.654 ns/day, 14.509 hours/ns, 76.580 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2196     | 2.284      | 2.3203     |   1.5 | 87.45
Neigh   | 0.0094981  | 0.0097672  | 0.010118   |   0.1 |  0.37
Comm    | 0.017945   | 0.054237   | 0.11844    |   9.8 |  2.08
Output  | 0.0011251  | 0.0045518  | 0.004703   |   1.1 |  0.17
Modify  | 0.25633    | 0.25714    | 0.26071    |   0.2 |  9.85
Other   |            | 0.001955   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 49 min
Histogram: 1 0 0 1 3 2 1 9 4 3
Nghost:    2359.38 ave 2384 max 2340 min
Histogram: 2 1 5 1 6 2 4 2 0 1
Neighs:    24964.1 ave 28310 max 18365 min
Histogram: 1 0 0 2 2 2 5 5 6 1

Total # of neighbors = 599139
Ave neighs/atom = 389.051
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156184.817928642-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156184.817928642--156108.362022634-${mu}))
variable	prob1 equal	(30096.4744337948/((1539+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156184.817928642--156108.362022634--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.88873279094696
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156184.817928642; E_system:-156108.362022634;prob1:1.09308408011407e+16; prob2:0.88873279094696

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1540
variable	E_system equal ${E_trial}
variable	E_system equal -156184.817928642
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1228.30986892456
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
27  4  -156184.817928642  -221751.983458465  -5502.9060143914  0  0  21586.095468842  0  0  0  0  0  49752.804881147  -54.3940124474433  0  -214.434793326704
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
27  4  -156184.817928642  1401.51954884666  -154783.298379795  30096.4744337948  305.510568380536  1228.30986892456  2793.6169454784  -623.617897521361  1514.93055881663  30.5776  30.5776  32.1891  2.37953440502992
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
27  9  1540  -156184.817928642  -156184.817928642  30096.4744337948  30096.4744337948  1228.30986892456  0.676845133304596  2  4  4  3  1.09308408011407e+16  0.88873279094696  add pass  1540  21.5490009836  16.7200952195  25.739413143 -0.00511194342741228  -0.00906547103075587  -0.00285783416102589
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156184.817928642, total atoms are 1540
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
27  9  1540  -156184.817928642  30096.4744337948  30096.4744337948  1228.30986892456  1.09308408011407e+16  0.88873279094696
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 28, 9
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.246821403503418
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.246821403503418)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.246821403503418, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:4; n_GCMC:4
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.876927435398102*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.876927435398102*4)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1540
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000861168 secs
group		disp id ${nMCmoved}
group		disp id 1540
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1540 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1540 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1540 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -18.8245788508 ${ry} ${rz} units box
displace_atoms	disp move -18.8245788508 0.797662852676 ${rz} units box
displace_atoms	disp move -18.8245788508 0.797662852676 -17.6217063087 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.42 | 72.67 | 73.01 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12800            0   -156168.26    1401.5195   -154766.74    30096.474    305.51057    1357.4997    2863.2198   -396.76919    1606.0484      30.5776      30.5776      32.1891    2.3795344   -221755.58 
   13000           50   -156118.49    1367.7642   -154750.73    30096.474     298.1524   -84.191751    1381.2123   -1413.0721   -220.71547      30.5776      30.5776      32.1891    2.3795344   -221446.03 
Loop time of 2.60813 on 24 procs for 200 steps with 1540 atoms

Performance: 1.656 ns/day, 14.490 hours/ns, 76.683 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2248     | 2.2793     | 2.3149     |   1.3 | 87.39
Neigh   | 0.009454   | 0.0096997  | 0.0098898  |   0.1 |  0.37
Comm    | 0.018154   | 0.053713   | 0.10814    |   8.6 |  2.06
Output  | 0.0011392  | 0.0045574  | 0.0047081  |   1.1 |  0.17
Modify  | 0.25845    | 0.25891    | 0.26241    |   0.1 |  9.93
Other   |            | 0.001934   |            |       |  0.07

Nlocal:    64.1667 ave 72 max 49 min
Histogram: 1 0 1 1 0 3 9 3 4 2
Nghost:    2351.29 ave 2376 max 2327 min
Histogram: 1 2 0 4 7 4 2 1 1 2
Neighs:    24960.9 ave 28670 max 18405 min
Histogram: 1 1 0 1 0 4 8 4 4 1

Total # of neighbors = 599061
Ave neighs/atom = 389.001
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156118.490409579-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156118.490409579--156184.817928642))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.48863559961319
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156118.490409579; E_system:-156184.817928642;prob1:4.80176394129544e-49; prob2:0.48863559961319

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
28  9  1540  -156184.817928642  -156118.490409579  30096.4744337948  30096.4744337948  1228.30986892456  0.246821403503418  0  4  4  1  4.80176394129544e-49  0.48863559961319  displace fail  1540  -18.8245788508  0.797662852676  -17.6217063087
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 29, 9
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.962564885616302
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.962564885616302)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.962564885616302, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:4; n_GCMC:4
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000853062 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 6.48130725856 ${ry} ${rz} units box
create_atoms	2 single 6.48130725856 21.6699693065 ${rz} units box
create_atoms	2 single 6.48130725856 21.6699693065 1.28317561211 units box
Created 1 atoms
  create_atoms CPU = 5.29289e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1541
print 		'ncreated is ${ncreated}'
ncreated is 1541
group		created id ${ncreated}
group		created id 1541
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.847969889640808-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.847969889640808-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.847969889640808-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.105183839797974-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.105183839797974-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.105183839797974-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.19603168964386-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.19603168964386-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.19603168964386-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00722601594706143 ${rvy} ${rvz}
velocity	created set 0.00722601594706143 -0.00819883545878741 ${rvz}
velocity	created set 0.00722601594706143 -0.00819883545878741 -0.00631226989295569
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.47 | 72.73 | 73.06 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12800            0   -156247.33    1402.8407   -154844.49    30096.474        305.6    1190.3419    2927.0538   -641.57459    1285.5464      30.5776      30.5776      32.1891    2.3799174   -221798.48 
   13000           50   -156190.23    1361.8864   -154828.35    30096.474    296.67836   -455.81564    1273.5317   -1449.4671   -1191.5116      30.5776      30.5776      32.1891    2.3799174   -221536.92 
Loop time of 2.61698 on 24 procs for 200 steps with 1541 atoms

Performance: 1.651 ns/day, 14.539 hours/ns, 76.424 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2281     | 2.2914     | 2.3233     |   1.5 | 87.56
Neigh   | 0.0094712  | 0.0097292  | 0.0099041  |   0.1 |  0.37
Comm    | 0.018296   | 0.050146   | 0.11346    |  10.4 |  1.92
Output  | 0.0011659  | 0.0046044  | 0.004755   |   1.1 |  0.18
Modify  | 0.25875    | 0.25922    | 0.26274    |   0.1 |  9.91
Other   |            | 0.001901   |            |       |  0.07

Nlocal:    64.2083 ave 72 max 49 min
Histogram: 1 1 0 1 0 3 7 5 3 3
Nghost:    2354.42 ave 2381 max 2330 min
Histogram: 1 2 1 5 5 5 2 0 1 2
Neighs:    24991.7 ave 28746 max 18399 min
Histogram: 1 1 0 1 1 3 8 4 3 2

Total # of neighbors = 599801
Ave neighs/atom = 389.228
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156190.233689032-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156190.233689032--156184.817928642-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156190.233689032--156184.817928642--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.751580476760864
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156190.233689032; E_system:-156184.817928642;prob1:1.93506230166852e-36; prob2:0.751580476760864

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
29  9  1540  -156184.817928642  -156190.233689032  30096.4744337948  30096.4744337948  1228.30986892456  0.962564885616302  2  4  4  3  1.93506230166852e-36  0.751580476760864  add fail  1541  6.48130725856  21.6699693065  1.28317561211 0.00722601594706143  -0.00819883545878741  -0.00631226989295569
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 30, 9
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.180456876754761
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.180456876754761)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.180456876754761, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:4; n_GCMC:4
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.383437633514404*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.383437633514404*4)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1538
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000838995 secs
group		disp id ${nMCmoved}
group		disp id 1538
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 19.1145646272 ${ry} ${rz} units box
displace_atoms	disp move 19.1145646272 -1.48378527558 ${rz} units box
displace_atoms	disp move 19.1145646272 -1.48378527558 26.0669527072 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.42 | 72.66 | 72.99 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12800            0    -156162.6    1401.5195   -154761.08    30096.474    305.51057    1498.7377    2984.9197   -294.16897    1805.4624      30.5776      30.5776      32.1891    2.3795344   -221754.65 
   13000           50   -156113.67    1370.0441   -154743.63    30096.474    298.64939   -958.52275    620.25799      -2480.8   -1015.0263      30.5776      30.5776      32.1891    2.3795344   -221426.49 
Loop time of 2.60746 on 24 procs for 200 steps with 1540 atoms

Performance: 1.657 ns/day, 14.486 hours/ns, 76.703 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2174     | 2.2897     | 2.3263     |   1.6 | 87.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017779   | 0.054424   | 0.12671    |  10.6 |  2.09
Output  | 0.001122   | 0.0045525  | 0.004704   |   1.1 |  0.17
Modify  | 0.25648    | 0.25691    | 0.26048    |   0.1 |  9.85
Other   |            | 0.001875   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 50 min
Histogram: 1 0 0 2 2 2 4 4 5 4
Nghost:    2358.5 ave 2380 max 2338 min
Histogram: 1 1 5 2 3 3 4 4 0 1
Neighs:    24966.5 ave 28297 max 18753 min
Histogram: 1 0 2 0 2 2 5 7 3 2

Total # of neighbors = 599196
Ave neighs/atom = 389.088
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156113.674744594-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156113.674744594--156184.817928642))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.309149026870728
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156113.674744594; E_system:-156184.817928642;prob1:1.49025763561177e-52; prob2:0.309149026870728

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
30  9  1540  -156184.817928642  -156113.674744594  30096.4744337948  30096.4744337948  1228.30986892456  0.180456876754761  0  4  4  1  1.49025763561177e-52  0.309149026870728  displace fail  1538  19.1145646272  -1.48378527558  26.0669527072
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 30
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.00084281 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.43 | 72.68 | 73.01 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   12800            0   -156184.82    1401.5195    -154783.3    30096.474    305.51057    1228.3098     2793.617   -623.61808    1514.9305      30.5776      30.5776      32.1891    2.3795344   -221751.98 
   13000           50   -156124.35    1359.4386   -154764.91    30096.474    296.33753   -437.51986    1360.7173   -1691.5204   -981.75646      30.5776      30.5776      32.1891    2.3795344   -221463.08 
Loop time of 2.60492 on 24 procs for 200 steps with 1540 atoms

Performance: 1.658 ns/day, 14.472 hours/ns, 76.778 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2332     | 2.2889     | 2.3215     |   1.4 | 87.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018065   | 0.050515   | 0.1063     |   9.1 |  1.94
Output  | 0.0011411  | 0.0046016  | 0.0047531  |   1.1 |  0.18
Modify  | 0.25873    | 0.25908    | 0.26246    |   0.1 |  9.95
Other   |            | 0.001869   |            |       |  0.07

Nlocal:    64.1667 ave 71 max 50 min
Histogram: 1 0 0 2 2 2 4 4 5 4
Nghost:    2359.17 ave 2382 max 2338 min
Histogram: 1 1 4 3 3 4 3 4 0 1
Neighs:    24965.6 ave 28317 max 18753 min
Histogram: 1 0 2 0 2 2 5 7 4 1

Total # of neighbors = 599175
Ave neighs/atom = 389.075
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1540
variable	E_system equal ${E_trial}
variable	E_system equal -156124.348384295
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -437.519855821206
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
30  4  -156124.348384295  -221463.077548007  -5470.54093785426  0  0  21463.3956141274  0  0  0  0  0  49615.1334684851  -54.9197269909681  0  -214.339254055659
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
30  4  -156124.348384295  1359.43855373614  -154764.909830559  30096.4744337948  296.337532767288  -437.519855821206  1360.7173175264  -1691.52042349025  -981.756461499766  30.5776  30.5776  32.1891  2.37953440502992
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
30  9  1540  -156124.348384295  -156124.348384295  30096.4744337948  30096.4744337948  -437.519855821206  0.180456876754761  0  4  4  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156124.348384295, total atoms are 1540
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
30  9  1540  -156124.348384295  30096.4744337948  30096.4744337948  -437.519855821206  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 31, 9
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.86167186498642
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.86167186498642)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.86167186498642, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:4; n_GCMC:4
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1540 atoms
  read_restart CPU = 0.000804901 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 4.39427943371 ${ry} ${rz} units box
create_atoms	2 single 4.39427943371 14.4945451042 ${rz} units box
create_atoms	2 single 4.39427943371 14.4945451042 21.8419162814 units box
Created 1 atoms
  create_atoms CPU = 4.60148e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1541
print 		'ncreated is ${ncreated}'
ncreated is 1541
group		created id ${ncreated}
group		created id 1541
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0373152494430542-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0373152494430542-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.0373152494430542-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.97035425901413-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.97035425901413-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.97035425901413-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0767637491226196-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0767637491226196-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.0767637491226196-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00960820888680288 ${rvy} ${rvz}
velocity	created set -0.00960820888680288 0.00976747551321973 ${rvz}
velocity	created set -0.00960820888680288 0.00976747551321973 -0.00878901304182205
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.19 | 72.49 | 73.05 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13000            0    -156188.4    1361.6364   -154826.76    30096.474    296.62389   -352.00952    1443.9085   -1700.9809   -798.95608      30.5776      30.5776      32.1891    2.3799174   -221536.97 
   13200           50   -156203.31    1402.8403   -154800.47    30096.474     305.5999    2313.1192    3161.1245    2457.1825    1321.0505      30.5776      30.5776      32.1891    2.3799174   -221870.84 
Loop time of 2.60015 on 24 procs for 200 steps with 1541 atoms

Performance: 1.661 ns/day, 14.445 hours/ns, 76.919 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2269     | 2.2826     | 2.3164     |   1.6 | 87.79
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01781    | 0.051603   | 0.10752    |  10.4 |  1.98
Output  | 0.001137   | 0.0045893  | 0.0047481  |   1.1 |  0.18
Modify  | 0.25893    | 0.25941    | 0.26293    |   0.1 |  9.98
Other   |            | 0.001905   |            |       |  0.07

Nlocal:    64.2083 ave 73 max 50 min
Histogram: 1 1 0 1 2 3 6 8 1 1
Nghost:    2350.71 ave 2381 max 2323 min
Histogram: 1 0 3 5 5 3 4 0 1 2
Neighs:    24993.2 ave 29111 max 18695 min
Histogram: 1 1 0 1 2 5 5 7 1 1

Total # of neighbors = 599836
Ave neighs/atom = 389.251
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156203.307003849-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156203.307003849--156124.348384295-${mu}))
variable	prob1 equal	(30096.4744337948/((1540+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156203.307003849--156124.348384295--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.615959525108337
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156203.307003849; E_system:-156124.348384295;prob1:7.2704416896529e+17; prob2:0.615959525108337

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1541
variable	E_system equal ${E_trial}
variable	E_system equal -156203.307003849
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2313.11918539618
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
31  5  -156203.307003849  -221870.840888107  -5475.28841241152  0  0  21659.4139407336  0  0  0  0  0  49819.6959605903  -68.2721164677394  0  -268.015488186942
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
31  5  -156203.307003849  1402.84029655647  -154800.466707292  30096.4744337948  305.599901444307  2313.11918539618  3161.12449037613  2457.18252653715  1321.05053927527  30.5776  30.5776  32.1891  2.37991736685079
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
31  10  1541  -156203.307003849  -156203.307003849  30096.4744337948  30096.4744337948  2313.11918539618  0.86167186498642  2  5  5  3  7.2704416896529e+17  0.615959525108337  add pass  1541  4.39427943371  14.4945451042  21.8419162814 -0.00960820888680288  0.00976747551321973  -0.00878901304182205
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156203.307003849, total atoms are 1541
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
31  10  1541  -156203.307003849  30096.4744337948  30096.4744337948  2313.11918539618  7.2704416896529e+17  0.615959525108337
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 32, 10
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.645606398582458
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.645606398582458)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.645606398582458, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:5; n_GCMC:5
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.266513109207153*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.266513109207153*5)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1538
variable	lastatom equal ${n_system}
variable	lastatom equal 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1541 atoms
  read_restart CPU = 0.000910997 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1541]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1541]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1541]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1541]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1541]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1541]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1541]
variable	tx equal ${lastx}
variable	tx equal 4.49825687089556
variable	ty equal ${lasty}
variable	ty equal 14.8831742015302
variable	tz equal ${lastz}
variable	tz equal 21.4395352721946
variable	tvx equal ${lastvx}
variable	tvx equal 0.0228037376052462
variable	tvy equal ${lastvy}
variable	tvy equal 0.00601737948882828
variable	tvz equal ${lastvz}
variable	tvz equal 0.0146335507680459
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1538]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1538]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1538]
variable	dx equal (${tx}-${delx})
variable	dx equal (4.49825687089556-${delx})
variable	dx equal (4.49825687089556-11.4237429171704)
variable	dy equal (${ty}-${dely})
variable	dy equal (14.8831742015302-${dely})
variable	dy equal (14.8831742015302-20.0218379883096)
variable	dz equal (${tz}-${delz})
variable	dz equal (21.4395352721946-${delz})
variable	dz equal (21.4395352721946-0.213372429284405)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1538 11.4237429171704 20.0218379883096 0.213372429284405; Last coords: 4.49825687089556 14.8831742015302 21.4395352721946
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0228037376052462 0.00601737948882828 0.0146335507680459 Last type: 2
group		del id ${lastatom}
group		del id 1541
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1540
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1538
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -6.92548604627484 ${dy} ${dz}
displace_atoms	delDisp move -6.92548604627484 -5.1386637867794 ${dz}
displace_atoms	delDisp move -6.92548604627484 -5.1386637867794 21.2261628429102
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx 0.0228037376052462 vy ${tvy} vz ${tvz}
set		atom 1538 vx 0.0228037376052462 vy 0.00601737948882828 vz ${tvz}
set		atom 1538 vx 0.0228037376052462 vy 0.00601737948882828 vz 0.0146335507680459
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1538 type ${ttyp}
set		atom 1538 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.19 | 72.57 | 73.11 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13200            0   -156124.38    1402.7111   -154721.67    30096.474    305.77031    2465.0407    3432.8023    2565.4864    1396.8335      30.5776      30.5776      32.1891    2.3795344   -221817.04 
   13400           50   -156084.75    1377.3333   -154707.42    30096.474    300.23832    1305.4159    2061.7207   -57.479887    1912.0067      30.5776      30.5776      32.1891    2.3795344   -221696.85 
Loop time of 2.61831 on 24 procs for 200 steps with 1540 atoms

Performance: 1.650 ns/day, 14.546 hours/ns, 76.385 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2295     | 2.2878     | 2.3243     |   1.6 | 87.38
Neigh   | 0.0094991  | 0.0097572  | 0.0099621  |   0.1 |  0.37
Comm    | 0.018103   | 0.054598   | 0.11308    |  10.2 |  2.09
Output  | 0.0011299  | 0.0045736  | 0.0047259  |   1.1 |  0.17
Modify  | 0.25921    | 0.25964    | 0.26322    |   0.2 |  9.92
Other   |            | 0.001924   |            |       |  0.07

Nlocal:    64.1667 ave 72 max 48 min
Histogram: 1 0 1 1 1 1 5 9 1 4
Nghost:    2354.21 ave 2380 max 2319 min
Histogram: 1 1 2 2 0 4 5 6 2 1
Neighs:    24964 ave 28747 max 17982 min
Histogram: 1 0 2 0 1 1 9 6 3 1

Total # of neighbors = 599136
Ave neighs/atom = 389.049
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156084.749774764-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156084.749774764--156203.307003849+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156084.749774764--156203.307003849+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.616621851921082
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156084.749774764; E_system:-156203.307003849;prob1:1.95635762761187e-47; prob2:0.616621851921082

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
32  10  1541  -156203.307003849  -156084.749774764  30096.4744337948  30096.4744337948  2313.11918539618  0.645606398582458  1  5  5  2  1.95635762761187e-47  0.616621851921082  delete fail  1538
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 33, 10
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.450398564338684
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.450398564338684)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.450398564338684, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:5; n_GCMC:5
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.242178738117218*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.242178738117218*5)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1538
variable	lastatom equal ${n_system}
variable	lastatom equal 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1541 atoms
  read_restart CPU = 0.000769138 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1541]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1541]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1541]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1541]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1541]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1541]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1541]
variable	tx equal ${lastx}
variable	tx equal 4.49825687089556
variable	ty equal ${lasty}
variable	ty equal 14.8831742015302
variable	tz equal ${lastz}
variable	tz equal 21.4395352721946
variable	tvx equal ${lastvx}
variable	tvx equal 0.0228037376052462
variable	tvy equal ${lastvy}
variable	tvy equal 0.00601737948882828
variable	tvz equal ${lastvz}
variable	tvz equal 0.0146335507680459
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1538]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1538]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1538]
variable	dx equal (${tx}-${delx})
variable	dx equal (4.49825687089556-${delx})
variable	dx equal (4.49825687089556-11.4237429171704)
variable	dy equal (${ty}-${dely})
variable	dy equal (14.8831742015302-${dely})
variable	dy equal (14.8831742015302-20.0218379883096)
variable	dz equal (${tz}-${delz})
variable	dz equal (21.4395352721946-${delz})
variable	dz equal (21.4395352721946-0.213372429284405)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1538 11.4237429171704 20.0218379883096 0.213372429284405; Last coords: 4.49825687089556 14.8831742015302 21.4395352721946
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0228037376052462 0.00601737948882828 0.0146335507680459 Last type: 2
group		del id ${lastatom}
group		del id 1541
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1540
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1538
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -6.92548604627484 ${dy} ${dz}
displace_atoms	delDisp move -6.92548604627484 -5.1386637867794 ${dz}
displace_atoms	delDisp move -6.92548604627484 -5.1386637867794 21.2261628429102
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx 0.0228037376052462 vy ${tvy} vz ${tvz}
set		atom 1538 vx 0.0228037376052462 vy 0.00601737948882828 vz ${tvz}
set		atom 1538 vx 0.0228037376052462 vy 0.00601737948882828 vz 0.0146335507680459
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1538 type ${ttyp}
set		atom 1538 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.19 | 72.57 | 73.11 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13200            0   -156124.38    1402.7111   -154721.67    30096.474    305.77031    2465.0407    3432.8023    2565.4864    1396.8335      30.5776      30.5776      32.1891    2.3795344   -221817.04 
   13400           50   -156084.75    1377.3333   -154707.42    30096.474    300.23832    1305.4159    2061.7207   -57.479887    1912.0067      30.5776      30.5776      32.1891    2.3795344   -221696.85 
Loop time of 2.62955 on 24 procs for 200 steps with 1540 atoms

Performance: 1.643 ns/day, 14.609 hours/ns, 76.059 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.234      | 2.294      | 2.3359     |   1.6 | 87.24
Neigh   | 0.0094838  | 0.009745   | 0.0099471  |   0.1 |  0.37
Comm    | 0.018224   | 0.06015    | 0.12029    |   9.6 |  2.29
Output  | 0.0011392  | 0.0045975  | 0.004751   |   1.1 |  0.17
Modify  | 0.25866    | 0.25906    | 0.26271    |   0.2 |  9.85
Other   |            | 0.001976   |            |       |  0.08

Nlocal:    64.1667 ave 72 max 48 min
Histogram: 1 0 1 1 1 1 5 9 1 4
Nghost:    2354.21 ave 2380 max 2319 min
Histogram: 1 1 2 2 0 4 5 6 2 1
Neighs:    24964 ave 28747 max 17982 min
Histogram: 1 0 2 0 1 1 9 6 3 1

Total # of neighbors = 599136
Ave neighs/atom = 389.049
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156084.749774764-${E_system}+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156084.749774764--156203.307003849+${mu}))
variable	prob1 equal	(1541*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156084.749774764--156203.307003849+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.759040534496307
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156084.749774764; E_system:-156203.307003849;prob1:1.95635762761187e-47; prob2:0.759040534496307

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
33  10  1541  -156203.307003849  -156084.749774764  30096.4744337948  30096.4744337948  2313.11918539618  0.450398564338684  1  5  5  2  1.95635762761187e-47  0.759040534496307  delete fail  1538
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 34, 10
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.737183332443237
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.737183332443237)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.737183332443237, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:5; n_GCMC:5
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1541 atoms
  read_restart CPU = 0.000784159 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 14.8424375828 ${ry} ${rz} units box
create_atoms	2 single 14.8424375828 21.3314078287 ${rz} units box
create_atoms	2 single 14.8424375828 21.3314078287 20.5795539542 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1542
print 		'ncreated is ${ncreated}'
ncreated is 1542
group		created id ${ncreated}
group		created id 1542
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.964394211769104-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.964394211769104-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.964394211769104-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.745733916759491-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.745733916759491-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.745733916759491-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.171049952507019-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.171049952507019-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.171049952507019-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00964370791803426 ${rvy} ${rvz}
velocity	created set 0.00964370791803426 0.00510296222202125 ${rvz}
velocity	created set 0.00964370791803426 0.00510296222202125 -0.00683104590292152
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.25 | 72.65 | 73.25 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13200            0   -156261.82    1404.2148   -154857.61    30096.474    305.70081    2396.8468    3230.2522    2457.0311     1503.257      30.5776      30.5776      32.1891    2.3803003   -221927.27 
   13400           50   -156237.59    1391.4242   -154846.17    30096.474    302.91628    1581.8288    2179.8388    124.27008    2441.3776      30.5776      30.5776      32.1891    2.3803003    -221852.9 
Loop time of 2.62113 on 24 procs for 200 steps with 1542 atoms

Performance: 1.648 ns/day, 14.562 hours/ns, 76.303 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2413     | 2.2938     | 2.3284     |   1.4 | 87.51
Neigh   | 0.009511   | 0.0097373  | 0.0099199  |   0.1 |  0.37
Comm    | 0.017945   | 0.052809   | 0.10538    |   9.5 |  2.01
Output  | 0.0011361  | 0.0045474  | 0.004698   |   1.1 |  0.17
Modify  | 0.2579     | 0.25837    | 0.26217    |   0.2 |  9.86
Other   |            | 0.001906   |            |       |  0.07

Nlocal:    64.25 ave 72 max 49 min
Histogram: 1 0 0 3 0 1 8 6 2 3
Nghost:    2358.33 ave 2387 max 2320 min
Histogram: 1 0 2 2 2 4 7 3 2 1
Neighs:    25035.4 ave 28861 max 18339 min
Histogram: 1 0 1 2 0 2 9 5 3 1

Total # of neighbors = 600849
Ave neighs/atom = 389.656
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156237.592304456-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156237.592304456--156203.307003849-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156237.592304456--156203.307003849--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.966233372688293
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156237.592304456; E_system:-156203.307003849;prob1:2.07701046858857e-15; prob2:0.966233372688293

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
34  10  1541  -156203.307003849  -156237.592304456  30096.4744337948  30096.4744337948  2313.11918539618  0.737183332443237  2  5  5  3  2.07701046858857e-15  0.966233372688293  add fail  1542  14.8424375828  21.3314078287  20.5795539542 0.00964370791803426  0.00510296222202125  -0.00683104590292152
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 35, 10
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.686879217624664
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.686879217624664)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.686879217624664, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:5; n_GCMC:5
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1541 atoms
  read_restart CPU = 0.000907898 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 4.34203030027 ${ry} ${rz} units box
create_atoms	2 single 4.34203030027 24.5256129817 ${rz} units box
create_atoms	2 single 4.34203030027 24.5256129817 12.3334155864 units box
Created 1 atoms
  create_atoms CPU = 4.88758e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1542
print 		'ncreated is ${ncreated}'
ncreated is 1542
group		created id ${ncreated}
group		created id 1542
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.845944762229919-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.845944762229919-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.845944762229919-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.304180383682251-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.304180383682251-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.304180383682251-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0974708199501038-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0974708199501038-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.0974708199501038-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00718396172512567 ${rvy} ${rvz}
velocity	created set 0.00718396172512567 -0.00406643135623066 ${rvz}
velocity	created set 0.00718396172512567 -0.00406643135623066 -0.00835900565189878
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.24 | 72.66 | 73.25 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13200            0   -156260.06    1403.9851   -154856.07    30096.474    305.65082     2508.392    3471.4637    2745.2524    1308.4599      30.5776      30.5776      32.1891    2.3803003   -221924.93 
   13400           50   -156230.84    1388.0742   -154842.77    30096.474    302.18697     1224.081    1766.9519    137.12031    1768.1707      30.5776      30.5776      32.1891    2.3803003   -221826.28 
Loop time of 2.62617 on 24 procs for 200 steps with 1542 atoms

Performance: 1.645 ns/day, 14.590 hours/ns, 76.157 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2424     | 2.2934     | 2.335      |   1.5 | 87.33
Neigh   | 0.009516   | 0.0097517  | 0.009944   |   0.1 |  0.37
Comm    | 0.017987   | 0.059518   | 0.11065    |   9.6 |  2.27
Output  | 0.001128   | 0.0045747  | 0.0047271  |   1.1 |  0.17
Modify  | 0.25661    | 0.25705    | 0.26043    |   0.1 |  9.79
Other   |            | 0.001888   |            |       |  0.07

Nlocal:    64.25 ave 72 max 48 min
Histogram: 1 0 1 1 1 1 4 10 1 4
Nghost:    2357.62 ave 2386 max 2321 min
Histogram: 1 1 2 1 2 5 6 2 3 1
Neighs:    25030.4 ave 28816 max 17987 min
Histogram: 1 0 2 0 1 2 7 7 3 1

Total # of neighbors = 600730
Ave neighs/atom = 389.578
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156230.844179162-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156230.844179162--156203.307003849-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156230.844179162--156203.307003849--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.957632184028625
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156230.844179162; E_system:-156203.307003849;prob1:2.52075704650271e-20; prob2:0.957632184028625

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
35  10  1541  -156203.307003849  -156230.844179162  30096.4744337948  30096.4744337948  2313.11918539618  0.686879217624664  2  5  5  3  2.52075704650271e-20  0.957632184028625  add fail  1542  4.34203030027  24.5256129817  12.3334155864 0.00718396172512567  -0.00406643135623066  -0.00835900565189878
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 35
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1541 atoms
  read_restart CPU = 0.000895023 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.21 | 72.62 | 73.2 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13200            0   -156203.31    1402.8403   -154800.47    30096.474     305.5999    2313.1194    3161.1247    2457.1827    1321.0507      30.5776      30.5776      32.1891    2.3799174   -221870.84 
   13400           50   -156163.71    1377.9143    -154785.8    30096.474    300.16992    1221.2638    1807.1338    141.00218    1715.6554      30.5776      30.5776      32.1891    2.3799174   -221776.09 
Loop time of 2.74232 on 24 procs for 200 steps with 1541 atoms

Performance: 1.575 ns/day, 15.235 hours/ns, 72.931 timesteps/s
97.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.23       | 2.31       | 2.4422     |   2.8 | 84.24
Neigh   | 0.0096259  | 0.010115   | 0.012982   |   0.7 |  0.37
Comm    | 0.018264   | 0.1505     | 0.23068    |  10.8 |  5.49
Output  | 0.001159   | 0.0045634  | 0.004714   |   1.1 |  0.17
Modify  | 0.26201    | 0.26522    | 0.2689     |   0.2 |  9.67
Other   |            | 0.001886   |            |       |  0.07

Nlocal:    64.2083 ave 72 max 48 min
Histogram: 1 0 1 1 1 1 4 10 1 4
Nghost:    2356.17 ave 2384 max 2320 min
Histogram: 1 1 2 2 0 6 6 4 1 1
Neighs:    24998 ave 28814 max 17982 min
Histogram: 1 0 2 0 1 2 8 6 3 1

Total # of neighbors = 599953
Ave neighs/atom = 389.327
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1541
variable	E_system equal ${E_trial}
variable	E_system equal -156163.714832877
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1221.26380085
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
35  5  -156163.714832877  -221776.089990885  -5415.35193217357  0  0  21501.4060588535  0  0  0  0  0  49862.7359910742  -68.6751390743943  0  -267.739820672036
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
35  5  -156163.714832877  1377.91425841287  -154785.800574464  30096.4744337948  300.1699214111  1221.26380085  1807.13384281521  141.002179998809  1715.65537973597  30.5776  30.5776  32.1891  2.37991736685079
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
35  10  1541  -156163.714832877  -156163.714832877  30096.4744337948  30096.4744337948  1221.26380085  0.686879217624664  2  5  5  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156163.714832877, total atoms are 1541
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
35  10  1541  -156163.714832877  30096.4744337948  30096.4744337948  1221.26380085  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 36, 10
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.679435908794403
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.679435908794403)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.679435908794403, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:5; n_GCMC:5
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1541 atoms
  read_restart CPU = 0.000798941 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 17.7076022938 ${ry} ${rz} units box
create_atoms	2 single 17.7076022938 6.62947871998 ${rz} units box
create_atoms	2 single 17.7076022938 6.62947871998 10.1905086774 units box
Created 1 atoms
  create_atoms CPU = 4.81606e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1542
print 		'ncreated is ${ncreated}'
ncreated is 1542
group		created id ${ncreated}
group		created id 1542
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.344330966472626-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.344330966472626-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.344330966472626-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.255256354808807-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.255256354808807-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.255256354808807-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.720927000045776-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.720927000045776-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.720927000045776-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00323265590564054 ${rvy} ${rvz}
velocity	created set -0.00323265590564054 -0.005082398034264 ${rvz}
velocity	created set -0.00323265590564054 -0.005082398034264 0.00458781656974724
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.16 | 72.63 | 73.07 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13400            0   -156231.97    1378.3898   -154853.58    30096.474    300.07866    1472.2086    2224.7228     297.5028    1894.4003      30.5776      30.5776      32.1891    2.3803003      -221824 
   13600           50   -156247.84     1395.583   -154852.25    30096.474    303.82167    2815.7473    4207.0855    1560.0981    2680.0583      30.5776      30.5776      32.1891    2.3803003      -221767 
Loop time of 2.7659 on 24 procs for 200 steps with 1542 atoms

Performance: 1.562 ns/day, 15.366 hours/ns, 72.309 timesteps/s
97.1% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2418     | 2.3137     | 2.4751     |   4.4 | 83.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017606   | 0.17924    | 0.25112    |  15.8 |  6.48
Output  | 0.0011241  | 0.0045254  | 0.0046749  |   1.1 |  0.16
Modify  | 0.26609    | 0.26655    | 0.27021    |   0.2 |  9.64
Other   |            | 0.001886   |            |       |  0.07

Nlocal:    64.25 ave 72 max 49 min
Histogram: 1 0 0 2 1 2 7 5 4 2
Nghost:    2356.58 ave 2382 max 2322 min
Histogram: 1 0 2 3 2 3 4 5 2 2
Neighs:    25034.5 ave 28811 max 18379 min
Histogram: 1 0 1 1 1 3 7 5 4 1

Total # of neighbors = 600829
Ave neighs/atom = 389.643
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156247.835711395-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156247.835711395--156163.714832877-${mu}))
variable	prob1 equal	(30096.4744337948/((1541+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156247.835711395--156163.714832877--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.620662987232208
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156247.835711395; E_system:-156163.714832877;prob1:4.18703901088322e+21; prob2:0.620662987232208

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1542
variable	E_system equal ${E_trial}
variable	E_system equal -156247.835711395
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2815.74730723638
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
36  6  -156247.835711395  -221766.999635468  -5363.17288164228  0  0  21529.8523959457  0  0  0  0  0  49755.1546842806  -80.751975331972  0  -321.918299179378
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
36  6  -156247.835711395  1395.58304761076  -154852.252663784  30096.4744337948  303.821668783913  2815.74730723638  4207.08554768815  1560.0980783243  2680.05829569667  30.5776  30.5776  32.1891  2.38030032867166
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
36  11  1542  -156247.835711395  -156247.835711395  30096.4744337948  30096.4744337948  2815.74730723638  0.679435908794403  2  6  6  3  4.18703901088322e+21  0.620662987232208  add pass  1542  17.7076022938  6.62947871998  10.1905086774 -0.00323265590564054  -0.005082398034264  0.00458781656974724
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156247.835711395, total atoms are 1542
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
36  11  1542  -156247.835711395  30096.4744337948  30096.4744337948  2815.74730723638  4.18703901088322e+21  0.620662987232208
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 37, 11
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.70620983839035
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.70620983839035)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.70620983839035, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:6; n_GCMC:6
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1542 atoms
  read_restart CPU = 0.000959158 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 12.1191790518 ${ry} ${rz} units box
create_atoms	2 single 12.1191790518 22.3062094085 ${rz} units box
create_atoms	2 single 12.1191790518 22.3062094085 25.2046241678 units box
Created 1 atoms
  create_atoms CPU = 5.00679e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1543
print 		'ncreated is ${ncreated}'
ncreated is 1543
group		created id ${ncreated}
group		created id 1543
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.482597827911377-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.482597827911377-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.482597827911377-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.277767777442932-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.277767777442932-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.277767777442932-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.211784482002258-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.211784482002258-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.211784482002258-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.000361377167305196 ${rvy} ${rvz}
velocity	created set -0.000361377167305196 -0.00461492109505774 ${rvz}
velocity	created set -0.000361377167305196 -0.00461492109505774 -0.00598514409218588
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.39 | 72.74 | 73.13 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13600            0   -156322.42    1396.0579   -154926.36    30096.474    303.72795    2891.3281    4295.0752         1642    2736.9092      30.5776      30.5776      32.1891    2.3806833   -221824.99 
   13800           50   -156385.02    1450.0843   -154934.93    30096.474    315.48198    1370.0638    2821.0381   -296.48917    1585.6425      30.5776      30.5776      32.1891    2.3806833   -221792.02 
Loop time of 2.62084 on 24 procs for 200 steps with 1543 atoms

Performance: 1.648 ns/day, 14.560 hours/ns, 76.311 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2344     | 2.2991     | 2.3362     |   1.7 | 87.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01755    | 0.054912   | 0.11965    |  11.2 |  2.10
Output  | 0.0011179  | 0.0045757  | 0.0047281  |   1.1 |  0.17
Modify  | 0.25975    | 0.2603     | 0.26414    |   0.2 |  9.93
Other   |            | 0.001953   |            |       |  0.07

Nlocal:    64.2917 ave 72 max 48 min
Histogram: 1 0 1 1 1 2 5 8 0 5
Nghost:    2360.58 ave 2390 max 2335 min
Histogram: 1 0 5 5 3 4 2 2 1 1
Neighs:    25062.5 ave 28838 max 18002 min
Histogram: 1 0 1 1 1 0 10 5 3 2

Total # of neighbors = 601499
Ave neighs/atom = 389.824
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1542+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1542+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1542+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1542+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156385.017681933-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1542+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156385.017681933--156247.835711395-${mu}))
variable	prob1 equal	(30096.4744337948/((1542+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156385.017681933--156247.835711395--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.100320339202881
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156385.017681933; E_system:-156247.835711395;prob1:1.88726224005422e+60; prob2:0.100320339202881

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1543
variable	E_system equal ${E_trial}
variable	E_system equal -156385.017681933
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1370.06382890418
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
37  7  -156385.017681933  -221792.01805079  -5412.45680918257  0  0  21430.8573837655  0  0  0  0  0  49858.4647178256  -94.2187433666991  0  -375.646180185518
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
37  7  -156385.017681933  1450.08425087039  -154934.933431063  30096.4744337948  315.481981746422  1370.06382890418  2821.0381142223  -296.489165004026  1585.64253749426  30.5776  30.5776  32.1891  2.38068329049253
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
37  12  1543  -156385.017681933  -156385.017681933  30096.4744337948  30096.4744337948  1370.06382890418  0.70620983839035  2  7  7  3  1.88726224005422e+60  0.100320339202881  add pass  1543  12.1191790518  22.3062094085  25.2046241678 -0.000361377167305196  -0.00461492109505774  -0.00598514409218588
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156385.017681933, total atoms are 1543
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
37  12  1543  -156385.017681933  30096.4744337948  30096.4744337948  1370.06382890418  1.88726224005422e+60  0.100320339202881
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 38, 12
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.392445206642151
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.392445206642151)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.392445206642151, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:7; n_GCMC:7
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.143766462802887*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.143766462802887*7)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1538
variable	lastatom equal ${n_system}
variable	lastatom equal 1543
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1543 atoms
  read_restart CPU = 0.000886202 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1543]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1543]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1543]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1543]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1543]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1543]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1543]
variable	tx equal ${lastx}
variable	tx equal 12.4080408746572
variable	ty equal ${lasty}
variable	ty equal 21.7635936693453
variable	tz equal ${lastz}
variable	tz equal 24.7973911175488
variable	tvx equal ${lastvx}
variable	tvx equal 0.0107713529343118
variable	tvy equal ${lastvy}
variable	tvy equal -0.00845907361763374
variable	tvz equal ${lastvz}
variable	tvz equal 0.00559838915831127
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1538]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1538]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1538]
variable	dx equal (${tx}-${delx})
variable	dx equal (12.4080408746572-${delx})
variable	dx equal (12.4080408746572-11.2050385662022)
variable	dy equal (${ty}-${dely})
variable	dy equal (21.7635936693453-${dely})
variable	dy equal (21.7635936693453-20.2146593442279)
variable	dz equal (${tz}-${delz})
variable	dz equal (24.7973911175488-${delz})
variable	dz equal (24.7973911175488-0.230158657899043)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1538 11.2050385662022 20.2146593442279 0.230158657899043; Last coords: 12.4080408746572 21.7635936693453 24.7973911175488
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0107713529343118 -0.00845907361763374 0.00559838915831127 Last type: 2
group		del id ${lastatom}
group		del id 1543
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1542
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1538
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 1.203002308455 ${dy} ${dz}
displace_atoms	delDisp move 1.203002308455 1.5489343251174 ${dz}
displace_atoms	delDisp move 1.203002308455 1.5489343251174 24.5672324596498
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1538 vx 0.0107713529343118 vy ${tvy} vz ${tvz}
set		atom 1538 vx 0.0107713529343118 vy -0.00845907361763374 vz ${tvz}
set		atom 1538 vx 0.0107713529343118 vy -0.00845907361763374 vz 0.00559838915831127
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1538 type ${ttyp}
set		atom 1538 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.39 | 72.65 | 72.99 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13800            0   -156305.72    1449.3281   -154856.39    30096.474    315.52209    1640.7429    3274.1299   -69.234465    1717.3333      30.5776      30.5776      32.1891    2.3803003   -221744.66 
   14000           50   -156251.12    1370.9924   -154880.13    30096.474    298.46822    964.59914    4309.8855   -188.54629   -1227.5418      30.5776      30.5776      32.1891    2.3803003   -221607.26 
Loop time of 2.6122 on 24 procs for 200 steps with 1542 atoms

Performance: 1.654 ns/day, 14.512 hours/ns, 76.564 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2312     | 2.2901     | 2.3286     |   1.4 | 87.67
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018052   | 0.05627    | 0.11527    |   8.7 |  2.15
Output  | 0.0011652  | 0.0045708  | 0.0047221  |   1.1 |  0.17
Modify  | 0.25857    | 0.25927    | 0.2625     |   0.1 |  9.93
Other   |            | 0.001949   |            |       |  0.07

Nlocal:    64.25 ave 72 max 50 min
Histogram: 1 1 0 0 1 5 5 5 4 2
Nghost:    2357.75 ave 2385 max 2334 min
Histogram: 1 2 3 4 3 3 4 2 1 1
Neighs:    25032.1 ave 28766 max 18716 min
Histogram: 1 1 0 1 0 5 6 5 4 1

Total # of neighbors = 600771
Ave neighs/atom = 389.605
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1543*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1543*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1543*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1543*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1543*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156251.124509977-${E_system}+${mu}))
variable	prob1 equal	(1543*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156251.124509977--156385.017681933+${mu}))
variable	prob1 equal	(1543*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156251.124509977--156385.017681933+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.876201629638672
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156251.124509977; E_system:-156385.017681933;prob1:1.31828105000713e-58; prob2:0.876201629638672

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
38  12  1543  -156385.017681933  -156251.124509977  30096.4744337948  30096.4744337948  1370.06382890418  0.392445206642151  1  7  7  2  1.31828105000713e-58  0.876201629638672  delete fail  1538
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 39, 12
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.878546714782715
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.878546714782715)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.878546714782715, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:7; n_GCMC:7
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1543 atoms
  read_restart CPU = 0.000757933 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 22.8673151159 ${ry} ${rz} units box
create_atoms	2 single 22.8673151159 2.48386797259 ${rz} units box
create_atoms	2 single 22.8673151159 2.48386797259 7.28421365999 units box
Created 1 atoms
  create_atoms CPU = 5.79357e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1544
print 		'ncreated is ${ncreated}'
ncreated is 1544
group		created id ${ncreated}
group		created id 1544
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.726791024208069-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.726791024208069-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.726791024208069-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.319385886192322-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.319385886192322-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.319385886192322-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.681521892547607-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.681521892547607-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.681521892547607-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00470959012939179 ${rvy} ${rvz}
velocity	created set 0.00470959012939179 -0.0037506706916103 ${rvz}
velocity	created set 0.00470959012939179 -0.0037506706916103 0.00376952181593574
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.46 | 72.74 | 73.12 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13800            0   -156459.65    1450.5028   -155009.14    30096.474    315.36852    1403.8802    2865.6114   -271.08868    1617.1178      30.5776      30.5776      32.1891    2.3810663   -221830.94 
   14000           50   -156410.52    1377.3457   -155033.17    30096.474    299.46269    848.99648    4040.3173    -510.3031   -983.02477      30.5776      30.5776      32.1891    2.3810663   -221695.53 
Loop time of 2.64042 on 24 procs for 200 steps with 1544 atoms

Performance: 1.636 ns/day, 14.669 hours/ns, 75.746 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2497     | 2.3045     | 2.3556     |   1.5 | 87.28
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017845   | 0.068997   | 0.12382    |   8.7 |  2.61
Output  | 0.0011981  | 0.0046391  | 0.0047939  |   1.1 |  0.18
Modify  | 0.25978    | 0.26033    | 0.26379    |   0.1 |  9.86
Other   |            | 0.001971   |            |       |  0.07

Nlocal:    64.3333 ave 72 max 50 min
Histogram: 1 1 0 0 1 5 5 5 4 2
Nghost:    2361.17 ave 2390 max 2337 min
Histogram: 1 2 2 8 1 3 3 2 1 1
Neighs:    25096.4 ave 28828 max 18766 min
Histogram: 1 1 0 1 0 5 7 5 2 2

Total # of neighbors = 602314
Ave neighs/atom = 390.1
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156410.519254804-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156410.519254804--156385.017681933-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156410.519254804--156385.017681933--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.711439251899719
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156410.519254804; E_system:-156385.017681933;prob1:8.28061000517724e-22; prob2:0.711439251899719

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
39  12  1543  -156385.017681933  -156410.519254804  30096.4744337948  30096.4744337948  1370.06382890418  0.878546714782715  2  7  7  3  8.28061000517724e-22  0.711439251899719  add fail  1544  22.8673151159  2.48386797259  7.28421365999 0.00470959012939179  -0.0037506706916103  0.00376952181593574
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 40, 12
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.86266428232193
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.86266428232193)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.86266428232193, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:7; n_GCMC:7
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1543 atoms
  read_restart CPU = 0.000834942 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 26.3321789128 ${ry} ${rz} units box
create_atoms	2 single 26.3321789128 13.5195816731 ${rz} units box
create_atoms	2 single 26.3321789128 13.5195816731 19.4479541275 units box
Created 1 atoms
  create_atoms CPU = 6.29425e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1544
print 		'ncreated is ${ncreated}'
ncreated is 1544
group		created id ${ncreated}
group		created id 1544
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.261681199073792-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.261681199073792-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.261681199073792-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.82728111743927-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.82728111743927-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.82728111743927-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.356517016887665-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.356517016887665-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.356517016887665-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00494897836636086 ${rvy} ${rvz}
velocity	created set -0.00494897836636086 0.0067963885502549 ${rvz}
velocity	created set -0.00494897836636086 0.0067963885502549 -0.00297959781856966
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.46 | 72.74 | 73.11 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13800            0   -156453.03    1450.7442   -155002.28    30096.474    315.42101    1386.6811    2876.7761   -344.32736    1627.5948      30.5776      30.5776      32.1891    2.3810663   -221846.79 
   14000           50   -156403.47    1377.2961   -155026.17    30096.474    299.45192     358.0683    3245.5292   -816.35041   -1354.9739      30.5776      30.5776      32.1891    2.3810663   -221738.65 
Loop time of 2.65207 on 24 procs for 200 steps with 1544 atoms

Performance: 1.629 ns/day, 14.734 hours/ns, 75.413 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2524     | 2.3095     | 2.3675     |   1.6 | 87.08
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017999   | 0.075941   | 0.13336    |   9.0 |  2.86
Output  | 0.001184   | 0.0046492  | 0.004806   |   1.1 |  0.18
Modify  | 0.25942    | 0.25994    | 0.26346    |   0.1 |  9.80
Other   |            | 0.002018   |            |       |  0.08

Nlocal:    64.3333 ave 72 max 50 min
Histogram: 1 1 0 0 1 5 4 6 4 2
Nghost:    2361.17 ave 2390 max 2337 min
Histogram: 1 2 3 7 1 3 3 2 1 1
Neighs:    25095.5 ave 28829 max 18736 min
Histogram: 1 1 0 1 1 4 6 5 4 1

Total # of neighbors = 602292
Ave neighs/atom = 390.085
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156403.469768332-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156403.469768332--156385.017681933-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156403.469768332--156385.017681933--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.228240728378296
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156403.469768332; E_system:-156385.017681933;prob1:6.06202263546143e-27; prob2:0.228240728378296

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
40  12  1543  -156385.017681933  -156403.469768332  30096.4744337948  30096.4744337948  1370.06382890418  0.86266428232193  2  7  7  3  6.06202263546143e-27  0.228240728378296  add fail  1544  26.3321789128  13.5195816731  19.4479541275 -0.00494897836636086  0.0067963885502549  -0.00297959781856966
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 40
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1543 atoms
  read_restart CPU = 0.000908852 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.42 | 72.7 | 73.09 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   13800            0   -156385.02    1450.0843   -154934.93    30096.474    315.48198    1370.0639    2821.0382   -296.48897    1585.6426      30.5776      30.5776      32.1891    2.3806833   -221792.02 
   14000           50   -156330.48    1372.0235   -154958.46    30096.474    298.49899    887.06294    4086.8616   -450.02866   -975.64415      30.5776      30.5776      32.1891    2.3806833   -221669.96 
Loop time of 2.61533 on 24 procs for 200 steps with 1543 atoms

Performance: 1.652 ns/day, 14.530 hours/ns, 76.472 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2438     | 2.2992     | 2.3321     |   1.4 | 87.91
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017746   | 0.050715   | 0.10605    |   9.5 |  1.94
Output  | 0.0011551  | 0.0045646  | 0.0047162  |   1.1 |  0.17
Modify  | 0.25862    | 0.25895    | 0.26251    |   0.1 |  9.90
Other   |            | 0.00188    |            |       |  0.07

Nlocal:    64.2917 ave 72 max 50 min
Histogram: 1 1 0 0 1 5 5 5 4 2
Nghost:    2359.71 ave 2389 max 2335 min
Histogram: 1 2 3 6 2 4 2 2 1 1
Neighs:    25065.6 ave 28827 max 18716 min
Histogram: 1 1 0 1 1 4 7 5 3 1

Total # of neighbors = 601574
Ave neighs/atom = 389.873
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1543
variable	E_system equal ${E_trial}
variable	E_system equal -156330.479767021
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 887.062941589134
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
40  7  -156330.479767021  -221669.955068826  -5368.7802164261  0  0  21538.2288581693  0  0  0  0  0  49639.5619184356  -93.5880241331696  0  -375.947234241244
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
40  7  -156330.479767021  1372.02348007397  -154958.456286947  30096.4744337948  298.498991514836  887.062941589134  4086.86163381098  -450.028663693128  -975.644145350448  30.5776  30.5776  32.1891  2.38068329049253
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
40  12  1543  -156330.479767021  -156330.479767021  30096.4744337948  30096.4744337948  887.062941589134  0.86266428232193  2  7  7  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156330.479767021, total atoms are 1543
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
40  12  1543  -156330.479767021  30096.4744337948  30096.4744337948  887.062941589134  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 41, 12
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.872333407402039
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.872333407402039)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.872333407402039, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:7; n_GCMC:7
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1543 atoms
  read_restart CPU = 0.000753164 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 12.1420719027 ${ry} ${rz} units box
create_atoms	2 single 12.1420719027 5.30643080552 ${rz} units box
create_atoms	2 single 12.1420719027 5.30643080552 4.51569513524 units box
Created 1 atoms
  create_atoms CPU = 4.50611e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1544
print 		'ncreated is ${ncreated}'
ncreated is 1544
group		created id ${ncreated}
group		created id 1544
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.896889746189117-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.896889746189117-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.896889746189117-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.11672455072403-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.11672455072403-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.11672455072403-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.595357537269592-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.595357537269592-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.595357537269592-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00824189598171309 ${rvy} ${rvz}
velocity	created set 0.00824189598171309 -0.00795917862733516 ${rvz}
velocity	created set 0.00824189598171309 -0.00795917862733516 0.0019802146837873
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.32 | 72.69 | 73.16 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   14000            0   -156372.33    1373.1449   -154999.18    30096.474    298.54936    1201.3728    4367.6577   -119.65517   -643.88414      30.5776      30.5776      32.1891    2.3810663   -221744.44 
   14200           50   -156408.92     1383.866   -155025.05    30096.474    300.88033    2165.1054    4270.6118    2013.4754    211.22911      30.5776      30.5776      32.1891    2.3810663    -221924.5 
Loop time of 2.62904 on 24 procs for 200 steps with 1544 atoms

Performance: 1.643 ns/day, 14.606 hours/ns, 76.073 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2429     | 2.3014     | 2.3363     |   1.5 | 87.54
Neigh   | 0.0096149  | 0.0097888  | 0.0099559  |   0.1 |  0.37
Comm    | 0.017663   | 0.052491   | 0.11102    |  10.2 |  2.00
Output  | 0.001138   | 0.0045998  | 0.0047519  |   1.1 |  0.17
Modify  | 0.25845    | 0.25886    | 0.26249    |   0.2 |  9.85
Other   |            | 0.001903   |            |       |  0.07

Nlocal:    64.3333 ave 72 max 48 min
Histogram: 1 0 0 2 1 2 2 12 1 3
Nghost:    2363.25 ave 2396 max 2339 min
Histogram: 1 2 5 3 6 4 0 1 1 1
Neighs:    25094.5 ave 28712 max 18133 min
Histogram: 1 0 1 1 1 2 6 5 5 2

Total # of neighbors = 602268
Ave neighs/atom = 390.07
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156408.919112607-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156408.919112607--156330.479767021-${mu}))
variable	prob1 equal	(30096.4744337948/((1543+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156408.919112607--156330.479767021--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.14857941865921
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156408.919112607; E_system:-156330.479767021;prob1:3.03691662786149e+17; prob2:0.14857941865921

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1544
variable	E_system equal ${E_trial}
variable	E_system equal -156408.919112607
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2165.10544709386
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
41  8  -156408.919112607  -221924.500086774  -5308.5159146468  0  0  21645.83254423  0  0  0  0  0  49714.9128666728  -106.693504458256  0  -429.95501763082
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
41  8  -156408.919112607  1383.86596252407  -155025.053150083  30096.4744337948  300.880332057252  2165.10544709386  4270.61181067201  2013.47541914653  211.22911146305  30.5776  30.5776  32.1891  2.38106625231339
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
41  13  1544  -156408.919112607  -156408.919112607  30096.4744337948  30096.4744337948  2165.10544709386  0.872333407402039  2  8  8  3  3.03691662786149e+17  0.14857941865921  add pass  1544  12.1420719027  5.30643080552  4.51569513524 0.00824189598171309  -0.00795917862733516  0.0019802146837873
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156408.919112607, total atoms are 1544
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
41  13  1544  -156408.919112607  30096.4744337948  30096.4744337948  2165.10544709386  3.03691662786149e+17  0.14857941865921
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 42, 13
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.772429525852203
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.772429525852203)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.772429525852203, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:8; n_GCMC:8
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1544 atoms
  read_restart CPU = 0.000891924 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 16.5767839255 ${ry} ${rz} units box
create_atoms	2 single 16.5767839255 0.125255872961 ${rz} units box
create_atoms	2 single 16.5767839255 0.125255872961 4.5203963066 units box
Created 1 atoms
  create_atoms CPU = 5.48363e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1545
print 		'ncreated is ${ncreated}'
ncreated is 1545
group		created id ${ncreated}
group		created id 1545
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.81872147321701-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.81872147321701-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.81872147321701-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.706392705440521-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.706392705440521-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.706392705440521-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.144134163856506-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.144134163856506-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.144134163856506-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00661863717724079 ${rvy} ${rvz}
velocity	created set 0.00661863717724079 0.00428599434971184 ${rvz}
velocity	created set 0.00661863717724079 0.00428599434971184 -0.00738998483357758
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.6 | 72.86 | 73.16 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   14200            0   -156470.68    1384.8347   -155085.85    30096.474    300.89594     2293.896    4351.0728    2122.3907    408.22453      30.5776      30.5776      32.1891    2.3814492   -221981.75 
   14400           50   -156507.53    1387.5244      -155120    30096.474    301.48036    2823.5953     3162.437    2613.7576    2694.5914      30.5776      30.5776      32.1891    2.3814492   -222105.04 
Loop time of 2.6485 on 24 procs for 200 steps with 1545 atoms

Performance: 1.631 ns/day, 14.714 hours/ns, 75.514 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2421     | 2.3117     | 2.3536     |   1.8 | 87.28
Neigh   | 0.009542   | 0.0098071  | 0.010026   |   0.1 |  0.37
Comm    | 0.017703   | 0.059794   | 0.12931    |  11.4 |  2.26
Output  | 0.0011451  | 0.0046182  | 0.0047719  |   1.1 |  0.17
Modify  | 0.26002    | 0.26063    | 0.26438    |   0.2 |  9.84
Other   |            | 0.001963   |            |       |  0.07

Nlocal:    64.375 ave 72 max 49 min
Histogram: 1 0 1 1 2 0 7 6 3 3
Nghost:    2361.5 ave 2382 max 2335 min
Histogram: 1 0 2 2 5 3 4 3 3 1
Neighs:    25128.8 ave 28748 max 18519 min
Histogram: 1 0 1 1 1 4 6 7 1 2

Total # of neighbors = 603090
Ave neighs/atom = 390.35
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1544+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1544+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1544+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1544+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156507.528535349-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1544+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156507.528535349--156408.919112607-${mu}))
variable	prob1 equal	(30096.4744337948/((1544+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156507.528535349--156408.919112607--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.710344731807709
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156507.528535349; E_system:-156408.919112607;prob1:1.49881925947564e+32; prob2:0.710344731807709

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1545
variable	E_system equal ${E_trial}
variable	E_system equal -156507.528535349
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2823.59532932665
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
42  9  -156507.528535349  -222105.037595552  -5306.73432947903  0  0  21630.1659135537  0  0  0  0  0  49877.9668756933  -120.495436558389  0  -483.393963006543
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
42  9  -156507.528535349  1387.52438947343  -155120.004145875  30096.4744337948  301.480361911735  2823.59532932665  3162.43698727744  2613.7576335555  2694.59136714701  30.5776  30.5776  32.1891  2.38144921413426
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
42  14  1545  -156507.528535349  -156507.528535349  30096.4744337948  30096.4744337948  2823.59532932665  0.772429525852203  2  9  9  3  1.49881925947564e+32  0.710344731807709  add pass  1545  16.5767839255  0.125255872961  4.5203963066 0.00661863717724079  0.00428599434971184  -0.00738998483357758
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156507.528535349, total atoms are 1545
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
42  14  1545  -156507.528535349  30096.4744337948  30096.4744337948  2823.59532932665  1.49881925947564e+32  0.710344731807709
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 43, 14
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.796341240406036
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.796341240406036)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.796341240406036, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:9; n_GCMC:9
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1545 atoms
  read_restart CPU = 0.000856876 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 19.5907852366 ${ry} ${rz} units box
create_atoms	2 single 19.5907852366 27.2561903135 ${rz} units box
create_atoms	2 single 19.5907852366 27.2561903135 0.631224187704 units box
Created 1 atoms
  create_atoms CPU = 4.60148e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1546
print 		'ncreated is ${ncreated}'
ncreated is 1546
group		created id ${ncreated}
group		created id 1546
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.472911536693573-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.472911536693573-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.472911536693573-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.23164314031601-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.23164314031601-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.23164314031601-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.86965149641037-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.86965149641037-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.86965149641037-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.000562524728894457 ${rvy} ${rvz}
velocity	created set -0.000562524728894457 -0.00557275501504319 ${rvz}
velocity	created set -0.000562524728894457 -0.00557275501504319 0.00767626075541681
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.39 | 72.73 | 73.07 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   14400            0   -156561.73    1388.2734   -155173.45    30096.474    301.44786    3052.1622    3374.4759     2800.607    2981.4037      30.5776      30.5776      32.1891    2.3818322    -222173.2 
   14600           50   -156605.98    1404.9753   -155201.01    30096.474     305.0745    3238.3524    8538.6846    2666.1312   -1489.7585      30.5776      30.5776      32.1891    2.3818322   -222249.24 
Loop time of 2.64459 on 24 procs for 200 steps with 1546 atoms

Performance: 1.634 ns/day, 14.692 hours/ns, 75.626 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2669     | 2.3184     | 2.3492     |   1.6 | 87.67
Neigh   | 0.0095038  | 0.0097658  | 0.0099399  |   0.1 |  0.37
Comm    | 0.018156   | 0.048774   | 0.10047    |  11.4 |  1.84
Output  | 0.0012231  | 0.0046698  | 0.004828   |   1.1 |  0.18
Modify  | 0.26043    | 0.26099    | 0.26449    |   0.1 |  9.87
Other   |            | 0.001952   |            |       |  0.07

Nlocal:    64.4167 ave 73 max 49 min
Histogram: 1 0 1 2 0 2 6 9 2 1
Nghost:    2359.29 ave 2387 max 2329 min
Histogram: 1 0 3 4 2 8 1 2 2 1
Neighs:    25167.9 ave 29177 max 18483 min
Histogram: 1 0 1 2 0 3 8 8 0 1

Total # of neighbors = 604029
Ave neighs/atom = 390.704
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1545+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1545+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1545+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1545+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156605.981573833-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1545+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156605.981573833--156507.528535349-${mu}))
variable	prob1 equal	(30096.4744337948/((1545+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156605.981573833--156507.528535349--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.20075136423111
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156605.981573833; E_system:-156507.528535349;prob1:1.15224459965535e+32; prob2:0.20075136423111

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1546
variable	E_system equal ${E_trial}
variable	E_system equal -156605.981573833
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3238.35244235899
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
43  10  -156605.981573833  -222249.236333212  -5201.24444070038  0  0  21751.723523565  0  0  0  0  0  49763.3791211418  -133.534653847651  0  -537.06879078037
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
43  10  -156605.981573833  1404.97531832738  -155201.006255506  30096.4744337948  305.074500831065  3238.35244235899  8538.68464375433  2666.13115654256  -1489.75847321992  30.5776  30.5776  32.1891  2.38183217595513
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
43  15  1546  -156605.981573833  -156605.981573833  30096.4744337948  30096.4744337948  3238.35244235899  0.796341240406036  2  10  10  3  1.15224459965535e+32  0.20075136423111  add pass  1546  19.5907852366  27.2561903135  0.631224187704 -0.000562524728894457  -0.00557275501504319  0.00767626075541681
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156605.981573833, total atoms are 1546
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
43  15  1546  -156605.981573833  30096.4744337948  30096.4744337948  3238.35244235899  1.15224459965535e+32  0.20075136423111
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 44, 15
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.625118553638458
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.625118553638458)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.625118553638458, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:10; n_GCMC:10
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.326796591281891*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.326796591281891*10)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1540
variable	lastatom equal ${n_system}
variable	lastatom equal 1546
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1546 atoms
  read_restart CPU = 0.000861883 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1546]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1546]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1546]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1546]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1546]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1546]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1546]
variable	tx equal ${lastx}
variable	tx equal 19.9228806625361
variable	ty equal ${lasty}
variable	ty equal 28.6570474914152
variable	tz equal ${lastz}
variable	tz equal 0.765303373607485
variable	tvx equal ${lastvx}
variable	tvx equal 0.0213269812062269
variable	tvy equal ${lastvy}
variable	tvy equal 0.02290697033292
variable	tvz equal ${lastvz}
variable	tvz equal 0.0219344498227858
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1540]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1540]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1540]
variable	dx equal (${tx}-${delx})
variable	dx equal (19.9228806625361-${delx})
variable	dx equal (19.9228806625361-21.4069171286571)
variable	dy equal (${ty}-${dely})
variable	dy equal (28.6570474914152-${dely})
variable	dy equal (28.6570474914152-17.157836637452)
variable	dz equal (${tz}-${delz})
variable	dz equal (0.765303373607485-${delz})
variable	dz equal (0.765303373607485-26.2650548179986)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1540 21.4069171286571 17.157836637452 26.2650548179986; Last coords: 19.9228806625361 28.6570474914152 0.765303373607485
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0213269812062269 0.02290697033292 0.0219344498227858 Last type: 2
group		del id ${lastatom}
group		del id 1546
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1545
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1540
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -1.484036466121 ${dy} ${dz}
displace_atoms	delDisp move -1.484036466121 11.4992108539632 ${dz}
displace_atoms	delDisp move -1.484036466121 11.4992108539632 -25.4997514443911
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1540 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1540 vx 0.0213269812062269 vy ${tvy} vz ${tvz}
set		atom 1540 vx 0.0213269812062269 vy 0.02290697033292 vz ${tvz}
set		atom 1540 vx 0.0213269812062269 vy 0.02290697033292 vz 0.0219344498227858
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1540 type ${ttyp}
set		atom 1540 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.26 | 72.7 | 73.16 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   14600            0    -156530.2    1402.4268   -155127.77    30096.474    304.71835    3152.8157    8430.5444    2620.8068   -1592.9043      30.5776      30.5776      32.1891    2.3814492   -222204.56 
   14800           50   -156532.04    1378.6669   -155153.37    30096.474    299.55581    3213.2122    5121.3589   -215.19002    4733.4677      30.5776      30.5776      32.1891    2.3814492   -222070.89 
Loop time of 2.64916 on 24 procs for 200 steps with 1545 atoms

Performance: 1.631 ns/day, 14.718 hours/ns, 75.496 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2464     | 2.3146     | 2.354      |   1.6 | 87.37
Neigh   | 0.009573   | 0.0097905  | 0.009989   |   0.1 |  0.37
Comm    | 0.017973   | 0.057432   | 0.12545    |  10.0 |  2.17
Output  | 0.0011451  | 0.0046201  | 0.0047741  |   1.1 |  0.17
Modify  | 0.26017    | 0.26079    | 0.26443    |   0.2 |  9.84
Other   |            | 0.001938   |            |       |  0.07

Nlocal:    64.375 ave 73 max 49 min
Histogram: 1 0 1 1 1 2 7 8 2 1
Nghost:    2361.5 ave 2393 max 2330 min
Histogram: 1 2 1 1 6 6 3 2 1 1
Neighs:    25138.1 ave 29194 max 18444 min
Histogram: 1 0 1 1 1 4 7 6 2 1

Total # of neighbors = 603314
Ave neighs/atom = 390.494
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1546*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1546*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1546*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1546*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1546*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156532.035003631-${E_system}+${mu}))
variable	prob1 equal	(1546*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156532.035003631--156605.981573833+${mu}))
variable	prob1 equal	(1546*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156532.035003631--156605.981573833+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.306165516376495
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156532.035003631; E_system:-156605.981573833;prob1:6.18085507446385e-15; prob2:0.306165516376495

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
44  15  1546  -156605.981573833  -156532.035003631  30096.4744337948  30096.4744337948  3238.35244235899  0.625118553638458  1  10  10  2  6.18085507446385e-15  0.306165516376495  delete fail  1540
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 45, 15
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.731119275093079
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.731119275093079)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.731119275093079, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:10; n_GCMC:10
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1546 atoms
  read_restart CPU = 0.000731945 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 4.98736337963 ${ry} ${rz} units box
create_atoms	2 single 4.98736337963 15.7381067329 ${rz} units box
create_atoms	2 single 4.98736337963 15.7381067329 3.80883111928 units box
Created 1 atoms
  create_atoms CPU = 5.31673e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1547
print 		'ncreated is ${ncreated}'
ncreated is 1547
group		created id ${ncreated}
group		created id 1547
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.827970325946808-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.827970325946808-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.827970325946808-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.68337619304657-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.68337619304657-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.68337619304657-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.111583769321442-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.111583769321442-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.111583769321442-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00681070079914362 ${rvy} ${rvz}
velocity	created set 0.00681070079914362 0.00380802861027356 ${rvz}
velocity	created set 0.00681070079914362 0.00380802861027356 -0.0080659331756491
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.36 | 72.78 | 73.23 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   14600            0   -156669.62      1406.02    -155263.6    30096.474    305.10386    3350.7479    8615.0002    2866.2197   -1428.9761      30.5776      30.5776      32.1891    2.3822151   -222305.51 
   14800           50   -156679.05    1388.5615   -155290.49    30096.474    301.31541    3814.3844    6288.9162     292.7564    4861.4806      30.5776      30.5776      32.1891    2.3822151   -222194.88 
Loop time of 2.64272 on 24 procs for 200 steps with 1547 atoms

Performance: 1.635 ns/day, 14.682 hours/ns, 75.680 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2557     | 2.3177     | 2.3474     |   1.7 | 87.70
Neigh   | 0.0095942  | 0.0098101  | 0.010032   |   0.1 |  0.37
Comm    | 0.018156   | 0.047662   | 0.10978    |  11.5 |  1.80
Output  | 0.001137   | 0.004617   | 0.00477    |   1.1 |  0.17
Modify  | 0.26053    | 0.26106    | 0.26446    |   0.1 |  9.88
Other   |            | 0.001861   |            |       |  0.07

Nlocal:    64.4583 ave 73 max 49 min
Histogram: 1 0 1 1 1 2 6 9 2 1
Nghost:    2364.42 ave 2396 max 2333 min
Histogram: 1 2 1 1 6 6 3 2 1 1
Neighs:    25204.2 ave 29228 max 18446 min
Histogram: 1 0 1 1 1 4 6 6 3 1

Total # of neighbors = 604902
Ave neighs/atom = 391.016
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1546+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1546+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1546+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1546+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156679.05110132-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1546+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156679.05110132--156605.981573833-${mu}))
variable	prob1 equal	(30096.4744337948/((1546+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156679.05110132--156605.981573833--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.791605770587921
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156679.05110132; E_system:-156605.981573833;prob1:37132842858665; prob2:0.791605770587921

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1547
variable	E_system equal ${E_trial}
variable	E_system equal -156679.05110132
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3814.38440234299
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
45  11  -156679.05110132  -222194.884641036  -5199.91356332198  0  0  21613.1858867926  0  0  0  0  0  49840.7849165309  -147.867726437825  0  -590.355973848166
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
45  11  -156679.05110132  1388.56154383916  -155290.489557481  30096.4744337948  301.315409177435  3814.38440234299  6288.91621822054  292.756395975156  4861.48059283329  30.5776  30.5776  32.1891  2.382215137776
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
45  16  1547  -156679.05110132  -156679.05110132  30096.4744337948  30096.4744337948  3814.38440234299  0.731119275093079  2  11  11  3  37132842858665  0.791605770587921  add pass  1547  4.98736337963  15.7381067329  3.80883111928 0.00681070079914362  0.00380802861027356  -0.0080659331756491
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156679.05110132, total atoms are 1547
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
45  16  1547  -156679.05110132  30096.4744337948  30096.4744337948  3814.38440234299  37132842858665  0.791605770587921
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 45
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000864983 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.25 | 72.77 | 73.28 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   14800            0   -156679.05    1388.5615   -155290.49    30096.474    301.31541    3814.3846    6288.9162    292.75688    4861.4805      30.5776      30.5776      32.1891    2.3822151   -222194.88 
   15000           50   -156668.29    1356.8805   -155311.41    30096.474    294.44067    5404.1142     8451.079    4014.1304    3747.1333      30.5776      30.5776      32.1891    2.3822151    -222247.2 
Loop time of 3.15616 on 24 procs for 200 steps with 1547 atoms

Performance: 1.369 ns/day, 17.534 hours/ns, 63.368 timesteps/s
94.4% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2609     | 2.4262     | 2.8549     |  11.6 | 76.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018802   | 0.44722    | 0.61222    |  27.0 | 14.17
Output  | 0.001164   | 0.0046259  | 0.0047801  |   1.1 |  0.15
Modify  | 0.27556    | 0.27617    | 0.27939    |   0.1 |  8.75
Other   |            | 0.001986   |            |       |  0.06

Nlocal:    64.4583 ave 73 max 49 min
Histogram: 1 0 1 1 1 3 5 8 3 1
Nghost:    2361.92 ave 2391 max 2332 min
Histogram: 1 1 1 5 3 7 2 1 2 1
Neighs:    25204.2 ave 29258 max 18509 min
Histogram: 1 0 1 1 1 4 9 3 3 1

Total # of neighbors = 604900
Ave neighs/atom = 391.015
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1547
variable	E_system equal ${E_trial}
variable	E_system equal -156668.290719555
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 5404.11424545093
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
45  11  -156668.290719555  -222247.204868147  -5265.47730230271  0  0  21697.4080085455  0  0  0  0  0  49884.8146249182  -147.759661262447  0  -590.071521306482
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
45  11  -156668.290719555  1356.88045587412  -155311.410263681  30096.4744337948  294.440668892623  5404.11424545093  8451.07902170941  4014.13044661181  3747.13326803159  30.5776  30.5776  32.1891  2.382215137776
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
45  16  1547  -156668.290719555  -156668.290719555  30096.4744337948  30096.4744337948  5404.11424545093  0.731119275093079  2  11  11  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156668.290719555, total atoms are 1547
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
45  16  1547  -156668.290719555  30096.4744337948  30096.4744337948  5404.11424545093  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 46, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.00847703218460083
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.00847703218460083)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.00847703218460083, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.387844800949097*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.387844800949097*11)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000745058 secs
group		disp id ${nMCmoved}
group		disp id 1541
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 21.1237095073 ${ry} ${rz} units box
displace_atoms	disp move 21.1237095073 -7.67653965093 ${rz} units box
displace_atoms	disp move 21.1237095073 -7.67653965093 -10.1420617839 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.34 | 72.78 | 73.31 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15000            0   -156656.94    1356.8805   -155300.06    30096.474    294.44067    5559.3136    8864.9644    4095.5111    3717.4653      30.5776      30.5776      32.1891    2.3822151   -222183.53 
   15200           50   -156665.97    1355.0105   -155310.96    30096.474    294.03489    3793.2588    5262.6698    3542.7882    2574.3183      30.5776      30.5776      32.1891    2.3822151   -222068.72 
Loop time of 2.63743 on 24 procs for 200 steps with 1547 atoms

Performance: 1.638 ns/day, 14.652 hours/ns, 75.832 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2594     | 2.3136     | 2.3529     |   1.4 | 87.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017809   | 0.056948   | 0.11134    |   9.2 |  2.16
Output  | 0.0011399  | 0.004594   | 0.0047469  |   1.1 |  0.17
Modify  | 0.25981    | 0.26032    | 0.26385    |   0.2 |  9.87
Other   |            | 0.00198    |            |       |  0.08

Nlocal:    64.4583 ave 73 max 49 min
Histogram: 1 0 1 0 1 4 3 12 1 1
Nghost:    2362 ave 2394 max 2330 min
Histogram: 1 0 4 3 4 5 2 2 2 1
Neighs:    25195.9 ave 29277 max 18499 min
Histogram: 1 1 0 1 2 2 6 9 1 1

Total # of neighbors = 604702
Ave neighs/atom = 390.887
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156665.967621133-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156665.967621133--156668.290719555))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.824749410152435
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156665.967621133; E_system:-156668.290719555;prob1:0.0203075611525249; prob2:0.824749410152435

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
46  16  1547  -156668.290719555  -156665.967621133  30096.4744337948  30096.4744337948  5404.11424545093  0.00847703218460083  0  11  11  1  0.0203075611525249  0.824749410152435  displace fail  1541  21.1237095073  -7.67653965093  -10.1420617839
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 47, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0817932486534119
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0817932486534119)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0817932486534119, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.17197984457016*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.17197984457016*11)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1538
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000848055 secs
group		disp id ${nMCmoved}
group		disp id 1538
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -5.60858747597 ${ry} ${rz} units box
displace_atoms	disp move -5.60858747597 1.6828191297 ${rz} units box
displace_atoms	disp move -5.60858747597 1.6828191297 19.1846418835 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.32 | 72.78 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15000            0   -156636.72    1356.8805   -155279.83    30096.474    294.44067    5850.1669    8813.1194    4474.4089    4262.9723      30.5776      30.5776      32.1891    2.3822151   -222287.77 
   15200           50   -156650.01     1356.219   -155293.79    30096.474    294.29714    3660.6359    4359.1074    3760.6647    2862.1356      30.5776      30.5776      32.1891    2.3822151   -222148.25 
Loop time of 2.6459 on 24 procs for 200 steps with 1547 atoms

Performance: 1.633 ns/day, 14.699 hours/ns, 75.589 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2452     | 2.3143     | 2.353      |   1.6 | 87.47
Neigh   | 0.009563   | 0.0098107  | 0.01       |   0.1 |  0.37
Comm    | 0.018047   | 0.056748   | 0.12612    |  10.3 |  2.14
Output  | 0.0011511  | 0.0046356  | 0.0047891  |   1.1 |  0.18
Modify  | 0.25809    | 0.25853    | 0.26209    |   0.1 |  9.77
Other   |            | 0.001898   |            |       |  0.07

Nlocal:    64.4583 ave 71 max 48 min
Histogram: 1 0 0 1 2 2 1 10 2 5
Nghost:    2361.96 ave 2388 max 2339 min
Histogram: 1 0 4 3 8 3 2 1 1 1
Neighs:    25205.3 ave 28507 max 18123 min
Histogram: 1 0 0 2 1 1 4 10 3 2

Total # of neighbors = 604927
Ave neighs/atom = 391.032
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156650.007700136-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156650.007700136--156668.290719555))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.748614847660065
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156650.007700136; E_system:-156668.290719555;prob1:4.79839031388303e-14; prob2:0.748614847660065

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
47  16  1547  -156668.290719555  -156650.007700136  30096.4744337948  30096.4744337948  5404.11424545093  0.0817932486534119  0  11  11  1  4.79839031388303e-14  0.748614847660065  displace fail  1538  -5.60858747597  1.6828191297  19.1846418835
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 48, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.150713562965393
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.150713562965393)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.150713562965393, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.263609051704407*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.263609051704407*11)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1539
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000820875 secs
group		disp id ${nMCmoved}
group		disp id 1539
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 1.00459076001 ${ry} ${rz} units box
displace_atoms	disp move 1.00459076001 -3.09550751793 ${rz} units box
displace_atoms	disp move 1.00459076001 -3.09550751793 -17.2972262936 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.32 | 72.77 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15000            0   -156644.81    1356.8805   -155287.93    30096.474    294.44067    5407.8462     8516.558      4177.74    3529.2407      30.5776      30.5776      32.1891    2.3822151   -222234.03 
   15200           50   -156660.73    1360.6151   -155300.12    30096.474    295.25108     3502.652    4380.9788    3494.7256    2632.2516      30.5776      30.5776      32.1891    2.3822151   -222133.51 
Loop time of 2.64012 on 24 procs for 200 steps with 1547 atoms

Performance: 1.636 ns/day, 14.667 hours/ns, 75.754 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2564     | 2.3156     | 2.3557     |   1.6 | 87.71
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017713   | 0.057963   | 0.11742    |  10.2 |  2.20
Output  | 0.001133   | 0.0046128  | 0.004766   |   1.1 |  0.17
Modify  | 0.25945    | 0.26002    | 0.2637     |   0.2 |  9.85
Other   |            | 0.001923   |            |       |  0.07

Nlocal:    64.4583 ave 72 max 48 min
Histogram: 1 0 1 0 1 3 2 11 3 2
Nghost:    2361.5 ave 2396 max 2330 min
Histogram: 1 2 3 2 5 5 2 1 2 1
Neighs:    25196.5 ave 28856 max 18126 min
Histogram: 1 0 1 0 1 3 6 8 3 1

Total # of neighbors = 604715
Ave neighs/atom = 390.895
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156660.732512928-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156660.732512928--156668.290719555))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.00696378946304321
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156660.732512928; E_system:-156668.290719555;prob1:3.11860411530386e-06; prob2:0.00696378946304321

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
48  16  1547  -156668.290719555  -156660.732512928  30096.4744337948  30096.4744337948  5404.11424545093  0.150713562965393  0  11  11  1  3.11860411530386e-06  0.00696378946304321  displace fail  1539  1.00459076001  -3.09550751793  -17.2972262936
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 49, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.500994265079498
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.500994265079498)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.500994265079498, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.729072690010071*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.729072690010071*11)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1545
variable	lastatom equal ${n_system}
variable	lastatom equal 1547
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000815868 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1547]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1547]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1547]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1547]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1547]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1547]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1547]
variable	tx equal ${lastx}
variable	tx equal 5.0876974990126
variable	ty equal ${lasty}
variable	ty equal 16.3146335343892
variable	tz equal ${lastz}
variable	tz equal 2.78764657996167
variable	tvx equal ${lastvx}
variable	tvx equal 0.00384250989538565
variable	tvy equal ${lastvy}
variable	tvy equal 0.00811435419769452
variable	tvz equal ${lastvz}
variable	tvz equal 0.00594886158485043
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1545]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1545]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1545]
variable	dx equal (${tx}-${delx})
variable	dx equal (5.0876974990126-${delx})
variable	dx equal (5.0876974990126-16.4353741946435)
variable	dy equal (${ty}-${dely})
variable	dy equal (16.3146335343892-${dely})
variable	dy equal (16.3146335343892-1.51013362667657)
variable	dz equal (${tz}-${delz})
variable	dz equal (2.78764657996167-${delz})
variable	dz equal (2.78764657996167-4.00808436146662)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1545 16.4353741946435 1.51013362667657 4.00808436146662; Last coords: 5.0876974990126 16.3146335343892 2.78764657996167
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.00384250989538565 0.00811435419769452 0.00594886158485043 Last type: 2
group		del id ${lastatom}
group		del id 1547
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1546
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1545
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -11.3476766956309 ${dy} ${dz}
displace_atoms	delDisp move -11.3476766956309 14.8044999077126 ${dz}
displace_atoms	delDisp move -11.3476766956309 14.8044999077126 -1.22043778150495
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1545 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1545 vx 0.00384250989538565 vy ${tvy} vz ${tvz}
set		atom 1545 vx 0.00384250989538565 vy 0.00811435419769452 vz ${tvz}
set		atom 1545 vx 0.00384250989538565 vy 0.00811435419769452 vz 0.00594886158485043
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1545 type ${ttyp}
set		atom 1545 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.27 | 72.74 | 73.3 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15000            0   -156590.97    1355.6473   -155235.32    30096.474    294.36349     5390.215    8450.7382     4032.857    3687.0499      30.5776      30.5776      32.1891    2.3818322   -222196.61 
   15200           50    -156591.3    1346.5312   -155244.77    30096.474    292.38402    3118.6703     3696.845    3351.6822    2307.4838      30.5776      30.5776      32.1891    2.3818322   -222095.02 
Loop time of 2.62728 on 24 procs for 200 steps with 1546 atoms

Performance: 1.644 ns/day, 14.596 hours/ns, 76.124 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.247      | 2.3131     | 2.3422     |   1.6 | 88.04
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01798    | 0.047253   | 0.1136     |  11.0 |  1.80
Output  | 0.001138   | 0.0045743  | 0.0047259  |   1.1 |  0.17
Modify  | 0.26008    | 0.26053    | 0.26403    |   0.1 |  9.92
Other   |            | 0.001867   |            |       |  0.07

Nlocal:    64.4167 ave 73 max 48 min
Histogram: 1 0 1 0 1 3 4 10 3 1
Nghost:    2360.38 ave 2395 max 2328 min
Histogram: 1 2 4 1 6 3 3 1 2 1
Neighs:    25164.1 ave 29277 max 18085 min
Histogram: 1 0 1 1 1 3 6 9 1 1

Total # of neighbors = 603938
Ave neighs/atom = 390.646
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156591.298311708-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156591.298311708--156668.290719555+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156591.298311708--156668.290719555+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.614618897438049
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156591.298311708; E_system:-156668.290719555;prob1:3.73665076790346e-17; prob2:0.614618897438049

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
49  16  1547  -156668.290719555  -156591.298311708  30096.4744337948  30096.4744337948  5404.11424545093  0.500994265079498  1  11  11  2  3.73665076790346e-17  0.614618897438049  delete fail  1545
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 50, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.133665859699249
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.133665859699249)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.133665859699249, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.737604141235352*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.737604141235352*11)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1545
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000737906 secs
group		disp id ${nMCmoved}
group		disp id 1545
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 2.76057280805 ${ry} ${rz} units box
displace_atoms	disp move 2.76057280805 1.12487372192 ${rz} units box
displace_atoms	disp move 2.76057280805 1.12487372192 26.3161911586 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.32 | 72.77 | 73.32 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15000            0   -156647.59    1356.8805   -155290.71    30096.474    294.44067    5261.4618    7976.4234    3988.0126    3819.9495      30.5776      30.5776      32.1891    2.3822151   -222256.25 
   15200           50   -156654.39    1351.4634   -155302.92    30096.474    293.26517    3379.2161     4168.638    3663.4993    2305.5112      30.5776      30.5776      32.1891    2.3822151   -222160.41 
Loop time of 2.66306 on 24 procs for 200 steps with 1547 atoms

Performance: 1.622 ns/day, 14.795 hours/ns, 75.102 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2512     | 2.3185     | 2.3684     |   1.8 | 87.06
Neigh   | 0.0095749  | 0.0097941  | 0.010012   |   0.1 |  0.37
Comm    | 0.017779   | 0.067603   | 0.13523    |  10.7 |  2.54
Output  | 0.0011292  | 0.0045995  | 0.0047522  |   1.1 |  0.17
Modify  | 0.26026    | 0.26066    | 0.26424    |   0.2 |  9.79
Other   |            | 0.001878   |            |       |  0.07

Nlocal:    64.4583 ave 71 max 49 min
Histogram: 1 0 0 1 2 2 3 5 5 5
Nghost:    2362.17 ave 2388 max 2339 min
Histogram: 1 1 2 4 7 5 1 0 2 1
Neighs:    25205.2 ave 28529 max 18460 min
Histogram: 1 0 1 1 1 2 5 8 3 2

Total # of neighbors = 604924
Ave neighs/atom = 391.03
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156654.385070811-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156654.385070811--156668.290719555))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.846120417118073
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156654.385070811; E_system:-156668.290719555;prob1:7.4121502619371e-11; prob2:0.846120417118073

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
50  16  1547  -156668.290719555  -156654.385070811  30096.4744337948  30096.4744337948  5404.11424545093  0.133665859699249  0  11  11  1  7.4121502619371e-11  0.846120417118073  displace fail  1545  2.76057280805  1.12487372192  26.3161911586
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 50
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.00085187 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.32 | 72.78 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15000            0   -156668.29    1356.8805   -155311.41    30096.474    294.44067    5404.1139    8451.0786    4014.1304    3747.1328      30.5776      30.5776      32.1891    2.3822151    -222247.2 
   15200           50   -156670.75    1349.4637   -155321.29    30096.474    292.83125     3419.603    4174.8817    3594.1642    2489.7632      30.5776      30.5776      32.1891    2.3822151   -222155.45 
Loop time of 2.64525 on 24 procs for 200 steps with 1547 atoms

Performance: 1.633 ns/day, 14.696 hours/ns, 75.607 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2578     | 2.3175     | 2.3591     |   1.4 | 87.61
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017747   | 0.059174   | 0.1191     |   9.1 |  2.24
Output  | 0.0011301  | 0.0046109  | 0.0047638  |   1.1 |  0.17
Modify  | 0.26161    | 0.26209    | 0.26547    |   0.1 |  9.91
Other   |            | 0.001896   |            |       |  0.07

Nlocal:    64.4583 ave 73 max 48 min
Histogram: 1 0 1 0 1 3 4 10 3 1
Nghost:    2362 ave 2396 max 2329 min
Histogram: 1 1 4 2 5 4 2 2 2 1
Neighs:    25198.1 ave 29298 max 18119 min
Histogram: 1 0 1 1 1 3 6 9 1 1

Total # of neighbors = 604754
Ave neighs/atom = 390.92
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1547
variable	E_system equal ${E_trial}
variable	E_system equal -156670.754583056
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3419.60304142531
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
50  11  -156670.754583056  -222155.450056528  -5158.54764192059  0  0  21535.6170784906  0  0  0  0  0  49846.0752835832  -147.693115114944  0  -590.756131566544
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
50  11  -156670.754583056  1349.46370884164  -155321.290874215  30096.4744337948  292.831247850558  3419.60304142531  4174.8817320562  3594.16421083358  2489.76318138613  30.5776  30.5776  32.1891  2.382215137776
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
50  16  1547  -156670.754583056  -156670.754583056  30096.4744337948  30096.4744337948  3419.60304142531  0.133665859699249  0  11  11  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156670.754583056, total atoms are 1547
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
50  16  1547  -156670.754583056  30096.4744337948  30096.4744337948  3419.60304142531  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 51, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.255491673946381
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.255491673946381)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.255491673946381, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.475050270557404*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.475050270557404*11)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1542
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000776052 secs
group		disp id ${nMCmoved}
group		disp id 1542
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -5.08134627142 ${ry} ${rz} units box
displace_atoms	disp move -5.08134627142 -5.68925355455 ${rz} units box
displace_atoms	disp move -5.08134627142 -5.68925355455 -8.68471849841 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.36 | 72.81 | 73.42 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15200            0   -156664.81    1349.4637   -155315.35    30096.474    292.83125     3447.956    4165.4159    3534.4363    2644.0156      30.5776      30.5776      32.1891    2.3822151   -222182.64 
   15400           50    -156633.5    1320.1376   -155313.36    30096.474    286.46753     3822.821    6778.0022    4377.8097    312.65133      30.5776      30.5776      32.1891    2.3822151   -222223.01 
Loop time of 2.64703 on 24 procs for 200 steps with 1547 atoms

Performance: 1.632 ns/day, 14.706 hours/ns, 75.556 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2496     | 2.3136     | 2.3615     |   1.9 | 87.40
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01771    | 0.065603   | 0.12999    |  11.5 |  2.48
Output  | 0.001122   | 0.0046012  | 0.0047538  |   1.1 |  0.17
Modify  | 0.26066    | 0.2613     | 0.26488    |   0.2 |  9.87
Other   |            | 0.00192    |            |       |  0.07

Nlocal:    64.4583 ave 71 max 49 min
Histogram: 1 0 1 0 3 1 3 4 6 5
Nghost:    2363.58 ave 2394 max 2333 min
Histogram: 1 1 1 4 7 5 2 0 0 3
Neighs:    25209 ave 28589 max 18467 min
Histogram: 1 0 1 2 0 2 5 7 4 2

Total # of neighbors = 605016
Ave neighs/atom = 391.09
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156633.500278075-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156633.500278075--156670.754583056))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.342541813850403
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156633.500278075; E_system:-156670.754583056;prob1:7.25771013453388e-28; prob2:0.342541813850403

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
51  16  1547  -156670.754583056  -156633.500278075  30096.4744337948  30096.4744337948  3419.60304142531  0.255491673946381  0  11  11  1  7.25771013453388e-28  0.342541813850403  displace fail  1542  -5.08134627142  -5.68925355455  -8.68471849841
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 52, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.887385666370392
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.887385666370392)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.887385666370392, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.00086689 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 25.0493511313 ${ry} ${rz} units box
create_atoms	2 single 25.0493511313 26.4618032843 ${rz} units box
create_atoms	2 single 25.0493511313 26.4618032843 3.6539114279 units box
Created 1 atoms
  create_atoms CPU = 5.4121e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1548
print 		'ncreated is ${ncreated}'
ncreated is 1548
group		created id ${ncreated}
group		created id 1548
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.135496973991394-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.135496973991394-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.135496973991394-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.135839581489563-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.135839581489563-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.135839581489563-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.527210712432861-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.527210712432861-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.527210712432861-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00756934653572808 ${rvy} ${rvz}
velocity	created set -0.00756934653572808 -0.00756223187633066 ${rvz}
velocity	created set -0.00756934653572808 -0.00756223187633066 0.00056506337997728
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.41 | 72.85 | 73.44 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15200            0   -156723.47     1350.416   -155373.06    30096.474    292.84846    3579.2505    4299.5983    3869.5739    2568.5792      30.5776      30.5776      32.1891    2.3825981   -222225.92 
   15400           50   -156701.85    1328.6259   -155373.22    30096.474    288.12311    3353.1859    5991.9784    4030.7958    36.783587      30.5776      30.5776      32.1891    2.3825981   -222269.46 
Loop time of 2.67389 on 24 procs for 200 steps with 1548 atoms

Performance: 1.616 ns/day, 14.855 hours/ns, 74.797 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2574     | 2.3194     | 2.3769     |   2.0 | 86.74
Neigh   | 0.009567   | 0.0098249  | 0.010016   |   0.1 |  0.37
Comm    | 0.017892   | 0.075573   | 0.13743    |  10.8 |  2.83
Output  | 0.0011668  | 0.0046248  | 0.004777   |   1.1 |  0.17
Modify  | 0.262      | 0.2625     | 0.26618    |   0.2 |  9.82
Other   |            | 0.002      |            |       |  0.07

Nlocal:    64.5 ave 72 max 48 min
Histogram: 1 0 0 2 1 2 2 9 3 4
Nghost:    2367.17 ave 2399 max 2340 min
Histogram: 1 1 2 6 5 3 3 0 2 1
Neighs:    25233.2 ave 28977 max 18145 min
Histogram: 1 0 0 2 1 3 5 7 3 2

Total # of neighbors = 605597
Ave neighs/atom = 391.213
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156701.848975251-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156701.848975251--156670.754583056-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156701.848975251--156670.754583056--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.69864147901535
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156701.848975251; E_system:-156670.754583056;prob1:9.79993867894337e-18; prob2:0.69864147901535

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
52  16  1547  -156670.754583056  -156701.848975251  30096.4744337948  30096.4744337948  3419.60304142531  0.887385666370392  2  11  11  3  9.79993867894337e-18  0.69864147901535  add fail  1548  25.0493511313  26.4618032843  3.6539114279 -0.00756934653572808  -0.00756223187633066  0.00056506337997728
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 53, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.402271568775177
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.402271568775177)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.402271568775177, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.784618556499481*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.784618556499481*11)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1545
variable	lastatom equal ${n_system}
variable	lastatom equal 1547
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000823975 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1547]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1547]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1547]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1547]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1547]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1547]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1547]
variable	tx equal ${lastx}
variable	tx equal 4.87223213739159
variable	ty equal ${lasty}
variable	ty equal 16.1843027093898
variable	tz equal ${lastz}
variable	tz equal 2.72505530032945
variable	tvx equal ${lastvx}
variable	tvx equal -0.00697908808680962
variable	tvy equal ${lastvy}
variable	tvy equal -0.00599799099930053
variable	tvz equal ${lastvz}
variable	tvz equal -0.00674591736732821
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1545]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1545]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1545]
variable	dx equal (${tx}-${delx})
variable	dx equal (4.87223213739159-${delx})
variable	dx equal (4.87223213739159-16.1187691710422)
variable	dy equal (${ty}-${dely})
variable	dy equal (16.1843027093898-${dely})
variable	dy equal (16.1843027093898-1.21128247923711)
variable	dz equal (${tz}-${delz})
variable	dz equal (2.72505530032945-${delz})
variable	dz equal (2.72505530032945-4.59305901424584)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1545 16.1187691710422 1.21128247923711 4.59305901424584; Last coords: 4.87223213739159 16.1843027093898 2.72505530032945
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00697908808680962 -0.00599799099930053 -0.00674591736732821 Last type: 2
group		del id ${lastatom}
group		del id 1547
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1546
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1545
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -11.2465370336506 ${dy} ${dz}
displace_atoms	delDisp move -11.2465370336506 14.9730202301527 ${dz}
displace_atoms	delDisp move -11.2465370336506 14.9730202301527 -1.86800371391639
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1545 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1545 vx -0.00697908808680962 vy ${tvy} vz ${tvz}
set		atom 1545 vx -0.00697908808680962 vy -0.00599799099930053 vz ${tvz}
set		atom 1545 vx -0.00697908808680962 vy -0.00599799099930053 vz -0.00674591736732821
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1545 type ${ttyp}
set		atom 1545 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.33 | 72.77 | 73.38 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15200            0   -156590.36    1346.8284   -155243.53    30096.474    292.44855    3428.9002    4169.0509    3623.6689    2493.9807      30.5776      30.5776      32.1891    2.3818322   -222110.23 
   15400           50   -156564.75    1323.9659   -155240.79    30096.474    287.48422    3098.8963    6154.6543    3493.0842   -351.04954      30.5776      30.5776      32.1891    2.3818322   -222114.14 
Loop time of 2.6541 on 24 procs for 200 steps with 1546 atoms

Performance: 1.628 ns/day, 14.745 hours/ns, 75.355 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.254      | 2.314      | 2.3671     |   2.0 | 87.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017963   | 0.07079    | 0.13084    |  11.3 |  2.67
Output  | 0.0011389  | 0.0045707  | 0.0047219  |   1.1 |  0.17
Modify  | 0.2623     | 0.26272    | 0.26611    |   0.1 |  9.90
Other   |            | 0.00198    |            |       |  0.07

Nlocal:    64.4167 ave 71 max 50 min
Histogram: 1 0 1 2 1 1 3 5 5 5
Nghost:    2361.96 ave 2392 max 2332 min
Histogram: 1 1 2 3 7 3 4 0 0 3
Neighs:    25174.6 ave 28525 max 18828 min
Histogram: 1 1 0 2 0 3 4 7 4 2

Total # of neighbors = 604191
Ave neighs/atom = 390.809
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156564.75265645-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156564.75265645--156670.754583056+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156564.75265645--156670.754583056+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.9073326587677
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156564.75265645; E_system:-156670.754583056;prob1:2.75096320144127e-38; prob2:0.9073326587677

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
53  16  1547  -156670.754583056  -156564.75265645  30096.4744337948  30096.4744337948  3419.60304142531  0.402271568775177  1  11  11  2  2.75096320144127e-38  0.9073326587677  delete fail  1545
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 54, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.21743631362915
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.21743631362915)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.21743631362915, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.123177051544189*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.123177051544189*11)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1538
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000726938 secs
group		disp id ${nMCmoved}
group		disp id 1538
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -3.69466968398 ${ry} ${rz} units box
displace_atoms	disp move -3.69466968398 3.95806843246 ${rz} units box
displace_atoms	disp move -3.69466968398 3.95806843246 16.5056200465 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.35 | 72.78 | 73.37 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15200            0    -156655.9    1349.4637   -155306.43    30096.474    292.83125    3617.5858    4344.1002    4069.1648    2439.4923      30.5776      30.5776      32.1891    2.3822151   -222168.28 
   15400           50   -156636.55    1332.0945   -155304.46    30096.474    289.06217    3435.0536    6585.4201     3612.073    107.66766      30.5776      30.5776      32.1891    2.3822151    -222211.1 
Loop time of 2.63167 on 24 procs for 200 steps with 1547 atoms

Performance: 1.642 ns/day, 14.620 hours/ns, 75.997 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2467     | 2.3067     | 2.3462     |   1.8 | 87.65
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017836   | 0.057062   | 0.1173     |  11.3 |  2.17
Output  | 0.0011301  | 0.0046114  | 0.004765   |   1.1 |  0.18
Modify  | 0.26076    | 0.26144    | 0.2648     |   0.1 |  9.93
Other   |            | 0.001853   |            |       |  0.07

Nlocal:    64.4583 ave 71 max 50 min
Histogram: 1 0 1 2 1 1 2 6 5 5
Nghost:    2362.75 ave 2391 max 2333 min
Histogram: 1 1 1 4 5 5 4 0 0 3
Neighs:    25207.6 ave 28516 max 18866 min
Histogram: 1 1 0 2 0 3 3 9 3 2

Total # of neighbors = 604983
Ave neighs/atom = 391.069
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156636.550465631-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156636.550465631--156670.754583056))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.357437133789062
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156636.550465631; E_system:-156670.754583056;prob1:1.21008349757503e-25; prob2:0.357437133789062

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
54  16  1547  -156670.754583056  -156636.550465631  30096.4744337948  30096.4744337948  3419.60304142531  0.21743631362915  0  11  11  1  1.21008349757503e-25  0.357437133789062  displace fail  1538  -3.69466968398  3.95806843246  16.5056200465
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 55, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.642530560493469
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.642530560493469)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.642530560493469, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.795880794525146*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.795880794525146*11)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1545
variable	lastatom equal ${n_system}
variable	lastatom equal 1547
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000846863 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1547]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1547]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1547]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1547]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1547]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1547]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1547]
variable	tx equal ${lastx}
variable	tx equal 4.87223213739159
variable	ty equal ${lasty}
variable	ty equal 16.1843027093898
variable	tz equal ${lastz}
variable	tz equal 2.72505530032945
variable	tvx equal ${lastvx}
variable	tvx equal -0.00697908808680962
variable	tvy equal ${lastvy}
variable	tvy equal -0.00599799099930053
variable	tvz equal ${lastvz}
variable	tvz equal -0.00674591736732821
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1545]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1545]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1545]
variable	dx equal (${tx}-${delx})
variable	dx equal (4.87223213739159-${delx})
variable	dx equal (4.87223213739159-16.1187691710422)
variable	dy equal (${ty}-${dely})
variable	dy equal (16.1843027093898-${dely})
variable	dy equal (16.1843027093898-1.21128247923711)
variable	dz equal (${tz}-${delz})
variable	dz equal (2.72505530032945-${delz})
variable	dz equal (2.72505530032945-4.59305901424584)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1545 16.1187691710422 1.21128247923711 4.59305901424584; Last coords: 4.87223213739159 16.1843027093898 2.72505530032945
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00697908808680962 -0.00599799099930053 -0.00674591736732821 Last type: 2
group		del id ${lastatom}
group		del id 1547
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1546
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1545
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -11.2465370336506 ${dy} ${dz}
displace_atoms	delDisp move -11.2465370336506 14.9730202301527 ${dz}
displace_atoms	delDisp move -11.2465370336506 14.9730202301527 -1.86800371391639
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1545 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1545 vx -0.00697908808680962 vy ${tvy} vz ${tvz}
set		atom 1545 vx -0.00697908808680962 vy -0.00599799099930053 vz ${tvz}
set		atom 1545 vx -0.00697908808680962 vy -0.00599799099930053 vz -0.00674591736732821
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1545 type ${ttyp}
set		atom 1545 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.33 | 72.77 | 73.38 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15200            0   -156590.36    1346.8284   -155243.53    30096.474    292.44855    3428.9002    4169.0509    3623.6689    2493.9807      30.5776      30.5776      32.1891    2.3818322   -222110.23 
   15400           50   -156564.75    1323.9659   -155240.79    30096.474    287.48422    3098.8963    6154.6543    3493.0842   -351.04954      30.5776      30.5776      32.1891    2.3818322   -222114.14 
Loop time of 2.66432 on 24 procs for 200 steps with 1546 atoms

Performance: 1.621 ns/day, 14.802 hours/ns, 75.066 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2473     | 2.3144     | 2.3758     |   1.9 | 86.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018138   | 0.079389   | 0.14666    |  10.5 |  2.98
Output  | 0.0011911  | 0.0046632  | 0.004822   |   1.1 |  0.18
Modify  | 0.26344    | 0.2639     | 0.26736    |   0.1 |  9.90
Other   |            | 0.002006   |            |       |  0.08

Nlocal:    64.4167 ave 71 max 50 min
Histogram: 1 0 1 2 1 1 3 5 5 5
Nghost:    2361.96 ave 2392 max 2332 min
Histogram: 1 1 2 3 7 3 4 0 0 3
Neighs:    25174.6 ave 28525 max 18828 min
Histogram: 1 1 0 2 0 3 4 7 4 2

Total # of neighbors = 604191
Ave neighs/atom = 390.809
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156564.75265645-${E_system}+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156564.75265645--156670.754583056+${mu}))
variable	prob1 equal	(1547*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156564.75265645--156670.754583056+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.999549686908722
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156564.75265645; E_system:-156670.754583056;prob1:2.75096320144127e-38; prob2:0.999549686908722

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
55  16  1547  -156670.754583056  -156564.75265645  30096.4744337948  30096.4744337948  3419.60304142531  0.642530560493469  1  11  11  2  2.75096320144127e-38  0.999549686908722  delete fail  1545
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 55
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000758886 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.36 | 72.8 | 73.42 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15200            0   -156670.75    1349.4637   -155321.29    30096.474    292.83125    3419.6028    4174.8816    3594.1645    2489.7624      30.5776      30.5776      32.1891    2.3822151   -222155.45 
   15400           50   -156638.44    1319.6216   -155318.82    30096.474    286.35556    3179.4085    6099.2919    3601.7998   -162.86621      30.5776      30.5776      32.1891    2.3822151   -222178.62 
Loop time of 2.67523 on 24 procs for 200 steps with 1547 atoms

Performance: 1.615 ns/day, 14.862 hours/ns, 74.760 timesteps/s
98.4% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2639     | 2.3235     | 2.382      |   1.9 | 86.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018778   | 0.077976   | 0.13768    |  10.3 |  2.91
Output  | 0.001189   | 0.0046473  | 0.004802   |   1.1 |  0.17
Modify  | 0.26578    | 0.26699    | 0.27047    |   0.2 |  9.98
Other   |            | 0.002156   |            |       |  0.08

Nlocal:    64.4583 ave 71 max 50 min
Histogram: 1 0 1 2 1 1 3 5 5 5
Nghost:    2363.25 ave 2393 max 2333 min
Histogram: 1 1 1 4 7 3 4 0 0 3
Neighs:    25208.4 ave 28545 max 18864 min
Histogram: 1 1 0 2 0 3 4 7 4 2

Total # of neighbors = 605001
Ave neighs/atom = 391.08
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1547
variable	E_system equal ${E_trial}
variable	E_system equal -156638.44058911
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3179.40849163049
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
55  11  -156638.44058911  -222178.624467485  -5181.41821858169  0  0  21633.4453962437  0  0  0  0  0  49826.4034897041  -147.619952531919  0  -590.626836460271
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
55  11  -156638.44058911  1319.62156901555  -155318.819020095  30096.4744337948  286.355556072743  3179.40849163049  6099.29186562966  3601.79981687516  -162.866207613331  30.5776  30.5776  32.1891  2.382215137776
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
55  16  1547  -156638.44058911  -156638.44058911  30096.4744337948  30096.4744337948  3179.40849163049  0.642530560493469  1  11  11  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156638.44058911, total atoms are 1547
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
55  16  1547  -156638.44058911  30096.4744337948  30096.4744337948  3179.40849163049  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 56, 16
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.708799958229065
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.708799958229065)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.708799958229065, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:11; n_GCMC:11
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1547 atoms
  read_restart CPU = 0.000738859 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 22.9050641122 ${ry} ${rz} units box
create_atoms	2 single 22.9050641122 19.204611876 ${rz} units box
create_atoms	2 single 22.9050641122 19.204611876 10.9501851638 units box
Created 1 atoms
  create_atoms CPU = 5.79357e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1548
print 		'ncreated is ${ncreated}'
ncreated is 1548
group		created id ${ncreated}
group		created id 1548
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.054571270942688-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.054571270942688-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.054571270942688-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.670632719993591-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.670632719993591-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.670632719993591-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.719607889652252-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.719607889652252-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.719607889652252-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.0092498667133812 ${rvy} ${rvz}
velocity	created set -0.0092498667133812 0.00354339496741202 ${rvz}
velocity	created set -0.0092498667133812 0.00354339496741202 0.00456042364575207
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.49 | 72.88 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15400            0   -156688.67    1320.6079   -155368.06    30096.474    286.38435    3510.4455    6445.7033    3750.0629    335.57025      30.5776      30.5776      32.1891    2.3825981   -222250.08 
   15600           50   -156787.67    1435.0072   -155352.66    30096.474    311.19275    2884.0162    5655.3032    269.65933     2727.086      30.5776      30.5776      32.1891    2.3825981   -222360.36 
Loop time of 2.64742 on 24 procs for 200 steps with 1548 atoms

Performance: 1.632 ns/day, 14.708 hours/ns, 75.545 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.27       | 2.3211     | 2.362      |   1.7 | 87.67
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017623   | 0.058699   | 0.10977    |  11.0 |  2.22
Output  | 0.001164   | 0.0046104  | 0.0047641  |   1.1 |  0.17
Modify  | 0.26061    | 0.26112    | 0.26483    |   0.2 |  9.86
Other   |            | 0.0019     |            |       |  0.07

Nlocal:    64.5 ave 73 max 49 min
Histogram: 1 0 0 3 0 4 4 8 3 1
Nghost:    2366.42 ave 2395 max 2339 min
Histogram: 1 2 0 7 2 6 3 0 2 1
Neighs:    25234.4 ave 29269 max 18493 min
Histogram: 1 0 0 3 0 5 6 6 2 1

Total # of neighbors = 605626
Ave neighs/atom = 391.231
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156787.66576607-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156787.66576607--156638.44058911-${mu}))
variable	prob1 equal	(30096.4744337948/((1547+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156787.66576607--156638.44058911--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.539704203605652
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156787.66576607; E_system:-156638.44058911;prob1:1.11614806246748e+69; prob2:0.539704203605652

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1548
variable	E_system equal ${E_trial}
variable	E_system equal -156787.66576607
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2884.01618341256
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
56  12  -156787.66576607  -222360.361603953  -5119.00126892754  0  0  21607.4226931751  0  0  0  0  0  49889.4534848038  -161.216454580941  0  -643.962616587597
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
56  12  -156787.66576607  1435.00719915545  -155352.658566914  30096.4744337948  311.192745602219  2884.01618341256  5655.30318487283  269.659330844547  2727.08603452029  30.5776  30.5776  32.1891  2.38259809959687
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
56  17  1548  -156787.66576607  -156787.66576607  30096.4744337948  30096.4744337948  2884.01618341256  0.708799958229065  2  12  12  3  1.11614806246748e+69  0.539704203605652  add pass  1548  22.9050641122  19.204611876  10.9501851638 -0.0092498667133812  0.00354339496741202  0.00456042364575207
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156787.66576607, total atoms are 1548
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
56  17  1548  -156787.66576607  30096.4744337948  30096.4744337948  2884.01618341256  1.11614806246748e+69  0.539704203605652
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 57, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.25585925579071
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.25585925579071)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.25585925579071, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.96923440694809*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.96923440694809*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1548
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000884056 secs
group		disp id ${nMCmoved}
group		disp id 1548
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 5.07711381227 ${ry} ${rz} units box
displace_atoms	disp move 5.07711381227 1.41511628074 ${rz} units box
displace_atoms	disp move 5.07711381227 1.41511628074 12.4144411559 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 73 | 73.4 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15600            0   -156740.92    1435.0072   -155305.91    30096.474    311.19275    2945.0725     5777.886    137.36235    2919.9692      30.5776      30.5776      32.1891    2.3825981   -222385.15 
   15800           50   -156697.12    1403.2346   -155293.89    30096.474     304.3026    3252.2311    3945.8527    3649.6123    2161.2282      30.5776      30.5776      32.1891    2.3825981   -222155.08 
Loop time of 2.64383 on 24 procs for 200 steps with 1548 atoms

Performance: 1.634 ns/day, 14.688 hours/ns, 75.648 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2657     | 2.3314     | 2.3603     |   1.7 | 88.18
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018092   | 0.04692    | 0.11242    |  12.3 |  1.77
Output  | 0.0011251  | 0.0045703  | 0.0047219  |   1.1 |  0.17
Modify  | 0.25846    | 0.25896    | 0.26237    |   0.1 |  9.80
Other   |            | 0.001953   |            |       |  0.07

Nlocal:    64.5 ave 71 max 49 min
Histogram: 1 0 0 1 2 2 2 8 4 4
Nghost:    2371.71 ave 2403 max 2342 min
Histogram: 1 0 3 4 6 3 4 2 0 1
Neighs:    25237.8 ave 28549 max 18524 min
Histogram: 1 0 1 1 1 2 5 7 4 2

Total # of neighbors = 605706
Ave neighs/atom = 391.283
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156697.12368019-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156697.12368019--156787.66576607))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.815148770809174
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156697.12368019; E_system:-156787.66576607;prob1:1.10015375958629e-66; prob2:0.815148770809174

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
57  17  1548  -156787.66576607  -156697.12368019  30096.4744337948  30096.4744337948  2884.01618341256  0.25585925579071  0  12  12  1  1.10015375958629e-66  0.815148770809174  displace fail  1548  5.07711381227  1.41511628074  12.4144411559
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 58, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.675348162651062
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.675348162651062)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.675348162651062, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000820875 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 0.569443642761 ${ry} ${rz} units box
create_atoms	2 single 0.569443642761 2.92604922764 ${rz} units box
create_atoms	2 single 0.569443642761 2.92604922764 16.2706969267 units box
Created 1 atoms
  create_atoms CPU = 9.70364e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.366369485855103-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.366369485855103-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.366369485855103-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.555782973766327-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.555782973766327-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.555782973766327-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.565277516841888-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.565277516841888-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.565277516841888-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00277499937486488 ${rvy} ${rvz}
velocity	created set -0.00277499937486488 0.00115840097091756 ${rvz}
velocity	created set -0.00277499937486488 0.00115840097091756 0.00135556665023793
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.68 | 73.03 | 73.43 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15600            0   -156853.79    1435.0974   -155418.69    30096.474    311.01127    3051.3144     5802.458    508.14075    2843.3445      30.5776      30.5776      32.1891    2.3829811   -222368.16 
   15800           50   -156802.73    1399.7955   -155402.93    30096.474     303.3607    2858.1649    3953.9015    3102.2319    1518.3614      30.5776      30.5776      32.1891    2.3829811   -222150.15 
Loop time of 2.65364 on 24 procs for 200 steps with 1549 atoms

Performance: 1.628 ns/day, 14.742 hours/ns, 75.368 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2776     | 2.3325     | 2.3697     |   1.5 | 87.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018062   | 0.055073   | 0.10976    |   9.7 |  2.08
Output  | 0.001132   | 0.004586   | 0.0047381  |   1.1 |  0.17
Modify  | 0.25906    | 0.25957    | 0.26295    |   0.1 |  9.78
Other   |            | 0.001901   |            |       |  0.07

Nlocal:    64.5417 ave 71 max 49 min
Histogram: 1 0 0 1 2 2 2 8 4 4
Nghost:    2372.67 ave 2404 max 2343 min
Histogram: 1 0 3 4 6 3 4 2 0 1
Neighs:    25265.8 ave 28529 max 18569 min
Histogram: 1 0 1 1 1 2 5 7 4 2

Total # of neighbors = 606380
Ave neighs/atom = 391.465
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156802.726603988-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156802.726603988--156787.66576607-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156802.726603988--156787.66576607--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.561280429363251
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156802.726603988; E_system:-156787.66576607;prob1:2.04521967872715e-29; prob2:0.561280429363251

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
58  17  1548  -156787.66576607  -156802.726603988  30096.4744337948  30096.4744337948  2884.01618341256  0.675348162651062  2  12  12  3  2.04521967872715e-29  0.561280429363251  add fail  1549  0.569443642761  2.92604922764  16.2706969267 -0.00277499937486488  0.00115840097091756  0.00135556665023793
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 59, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.293650150299072
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.293650150299072)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.293650150299072, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.866590797901154*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.866590797901154*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1547
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000791073 secs
group		disp id ${nMCmoved}
group		disp id 1547
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 7.84850888842 ${ry} ${rz} units box
displace_atoms	disp move 7.84850888842 -6.34965011326 ${rz} units box
displace_atoms	disp move 7.84850888842 -6.34965011326 21.3099041485 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 73 | 73.38 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15600            0   -156767.83    1435.0072   -155332.82    30096.474    311.19275    2969.1335    5744.4809    275.92327    2886.9962      30.5776      30.5776      32.1891    2.3825981    -222363.5 
   15800           50   -156721.21    1401.8022   -155319.41    30096.474    303.99198    2693.3996    3292.1786    3005.8852    1782.1351      30.5776      30.5776      32.1891    2.3825981   -222104.56 
Loop time of 2.66394 on 24 procs for 200 steps with 1548 atoms

Performance: 1.622 ns/day, 14.800 hours/ns, 75.077 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2986     | 2.3441     | 2.3812     |   1.6 | 87.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018144   | 0.055274   | 0.10059    |  10.5 |  2.07
Output  | 0.001123   | 0.0045889  | 0.0047419  |   1.1 |  0.17
Modify  | 0.25767    | 0.25813    | 0.26159    |   0.1 |  9.69
Other   |            | 0.001903   |            |       |  0.07

Nlocal:    64.5 ave 71 max 49 min
Histogram: 1 0 0 1 2 2 2 8 4 4
Nghost:    2371.54 ave 2402 max 2343 min
Histogram: 1 0 3 3 7 3 4 2 0 1
Neighs:    25236.9 ave 28502 max 18547 min
Histogram: 1 0 1 1 1 2 5 7 3 3

Total # of neighbors = 605685
Ave neighs/atom = 391.269
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156721.210730711-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156721.210730711--156787.66576607))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.373373508453369
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156721.210730711; E_system:-156787.66576607;prob1:3.87710090334289e-49; prob2:0.373373508453369

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
59  17  1548  -156787.66576607  -156721.210730711  30096.4744337948  30096.4744337948  2884.01618341256  0.293650150299072  0  12  12  1  3.87710090334289e-49  0.373373508453369  displace fail  1547  7.84850888842  -6.34965011326  21.3099041485
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 60, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.878470778465271
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.878470778465271)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.878470778465271, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000822067 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 16.4284898119 ${ry} ${rz} units box
create_atoms	2 single 16.4284898119 10.3975180536 ${rz} units box
create_atoms	2 single 16.4284898119 10.3975180536 21.263259222 units box
Created 1 atoms
  create_atoms CPU = 5.29289e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.908436059951782-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.908436059951782-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.908436059951782-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.357338786125183-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.357338786125183-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.357338786125183-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.990531742572784-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.990531742572784-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.990531742572784-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.0084816691628493 ${rvy} ${rvz}
velocity	created set 0.0084816691628493 -0.00296253278566915 ${rvz}
velocity	created set 0.0084816691628493 -0.00296253278566915 0.0101864853824843
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.7 | 73.04 | 73.43 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15600            0   -156830.28    1436.5374   -155393.75    30096.474    311.32334    3130.7614    6074.7224    367.74742    2949.8143      30.5776      30.5776      32.1891    2.3829811   -222426.42 
   15800           50    -156790.7    1409.3286   -155381.37    30096.474    305.42671    2999.8076    4272.7855    3092.7395    1633.8979      30.5776      30.5776      32.1891    2.3829811   -222214.72 
Loop time of 2.65819 on 24 procs for 200 steps with 1549 atoms

Performance: 1.625 ns/day, 14.768 hours/ns, 75.239 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2783     | 2.331      | 2.3642     |   1.4 | 87.69
Neigh   | 0.009634   | 0.0098537  | 0.010043   |   0.1 |  0.37
Comm    | 0.018266   | 0.051331   | 0.1042     |   9.3 |  1.93
Output  | 0.0012181  | 0.0046939  | 0.004848   |   1.1 |  0.18
Modify  | 0.25883    | 0.25943    | 0.26286    |   0.1 |  9.76
Other   |            | 0.001911   |            |       |  0.07

Nlocal:    64.5417 ave 72 max 48 min
Histogram: 1 0 0 0 2 3 4 8 4 2
Nghost:    2368.62 ave 2407 max 2337 min
Histogram: 1 1 2 5 5 6 2 1 0 1
Neighs:    25262.5 ave 28843 max 18192 min
Histogram: 1 0 0 2 0 4 6 6 3 2

Total # of neighbors = 606299
Ave neighs/atom = 391.413
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156790.69598079-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156790.69598079--156787.66576607-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156790.69598079--156787.66576607--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.863548755645752
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156790.69598079; E_system:-156787.66576607;prob1:3.52056253310894e-38; prob2:0.863548755645752

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
60  17  1548  -156787.66576607  -156790.69598079  30096.4744337948  30096.4744337948  2884.01618341256  0.878470778465271  2  12  12  3  3.52056253310894e-38  0.863548755645752  add fail  1549  16.4284898119  10.3975180536  21.263259222 0.0084816691628493  -0.00296253278566915  0.0101864853824843
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 60
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000825167 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 73 | 73.4 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15600            0   -156787.67    1435.0072   -155352.66    30096.474    311.19275    2884.0163    5655.3034    269.65949     2727.086      30.5776      30.5776      32.1891    2.3825981   -222360.36 
   15800           50   -156732.91     1396.005    -155336.9    30096.474     302.7348    2883.6976    3946.8742    3217.8584    1486.3603      30.5776      30.5776      32.1891    2.3825981   -222140.52 
Loop time of 2.66134 on 24 procs for 200 steps with 1548 atoms

Performance: 1.623 ns/day, 14.785 hours/ns, 75.150 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2792     | 2.3381     | 2.3779     |   1.7 | 87.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017868   | 0.057684   | 0.11667    |  11.0 |  2.17
Output  | 0.0011351  | 0.0046067  | 0.00476    |   1.1 |  0.17
Modify  | 0.25855    | 0.25906    | 0.26259    |   0.1 |  9.73
Other   |            | 0.001909   |            |       |  0.07

Nlocal:    64.5 ave 71 max 49 min
Histogram: 1 0 0 1 2 2 2 8 4 4
Nghost:    2371.71 ave 2403 max 2342 min
Histogram: 1 0 3 4 6 3 4 2 0 1
Neighs:    25236.2 ave 28523 max 18542 min
Histogram: 1 0 1 1 1 2 5 7 4 2

Total # of neighbors = 605668
Ave neighs/atom = 391.258
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1548
variable	E_system equal ${E_trial}
variable	E_system equal -156732.905546324
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2883.69763149065
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
60  12  -156732.905546324  -222140.515314496  -5100.97760473348  0  0  21593.5450669831  0  0  0  0  0  49720.1396408808  -161.207379705806  0  -643.88995525338
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
60  12  -156732.905546324  1396.00496480129  -155336.900581523  30096.4744337948  302.734800303801  2883.69763149065  3946.87419773318  3217.85841782795  1486.36027891082  30.5776  30.5776  32.1891  2.38259809959687
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
60  17  1548  -156732.905546324  -156732.905546324  30096.4744337948  30096.4744337948  2883.69763149065  0.878470778465271  2  12  12  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156732.905546324, total atoms are 1548
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
60  17  1548  -156732.905546324  30096.4744337948  30096.4744337948  2883.69763149065  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 61, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.230364620685577
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.230364620685577)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.230364620685577, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.760897397994995*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.760897397994995*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1546
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000718117 secs
group		disp id ${nMCmoved}
group		disp id 1546
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1546 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1546 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1546 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -8.72887381991 ${ry} ${rz} units box
displace_atoms	disp move -8.72887381991 -24.3397199929 ${rz} units box
displace_atoms	disp move -8.72887381991 -24.3397199929 9.13557368056 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.41 | 72.83 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15800            0   -156713.29     1396.005   -155317.29    30096.474     302.7348    3006.6683     4193.175    3230.4211    1596.4089      30.5776      30.5776      32.1891    2.3825981   -222156.84 
   16000           50   -156689.64    1393.0236   -155296.62    30096.474    302.08827    2105.7877    5843.2875    909.92896   -435.85326      30.5776      30.5776      32.1891    2.3825981    -222494.6 
Loop time of 2.63508 on 24 procs for 200 steps with 1548 atoms

Performance: 1.639 ns/day, 14.639 hours/ns, 75.899 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2692     | 2.3162     | 2.3522     |   1.4 | 87.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017924   | 0.053921   | 0.10113    |   9.2 |  2.05
Output  | 0.0011292  | 0.0046024  | 0.004755   |   1.1 |  0.17
Modify  | 0.258      | 0.25847    | 0.26201    |   0.1 |  9.81
Other   |            | 0.001872   |            |       |  0.07

Nlocal:    64.5 ave 72 max 49 min
Histogram: 1 0 0 1 1 2 8 6 4 1
Nghost:    2364.71 ave 2400 max 2331 min
Histogram: 1 0 3 4 5 5 3 1 1 1
Neighs:    25233.7 ave 28823 max 18517 min
Histogram: 1 0 1 1 0 4 8 5 3 1

Total # of neighbors = 605608
Ave neighs/atom = 391.22
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156689.63939772-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156689.63939772--156732.905546324))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.945435702800751
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156689.63939772; E_system:-156732.905546324;prob1:3.0287403068355e-32; prob2:0.945435702800751

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
61  17  1548  -156732.905546324  -156689.63939772  30096.4744337948  30096.4744337948  2883.69763149065  0.230364620685577  0  12  12  1  3.0287403068355e-32  0.945435702800751  displace fail  1546  -8.72887381991  -24.3397199929  9.13557368056
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 62, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.783585727214813
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.783585727214813)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.783585727214813, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000825167 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 24.2884606895 ${ry} ${rz} units box
create_atoms	2 single 24.2884606895 10.0099558352 ${rz} units box
create_atoms	2 single 24.2884606895 10.0099558352 6.29491608141 units box
Created 1 atoms
  create_atoms CPU = 5.19753e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.633859813213348-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.633859813213348-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.633859813213348-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.762549102306366-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.762549102306366-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.762549102306366-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.84269505739212-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.84269505739212-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.84269505739212-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00277976104756875 ${rvy} ${rvz}
velocity	created set 0.00277976104756875 0.00545214990328856 ${rvz}
velocity	created set 0.00277976104756875 0.00545214990328856 0.00711647767067079
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.53 | 72.89 | 73.34 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15800            0   -156799.58    1396.7357   -155402.85    30096.474     302.6976    3091.6132    4105.7668    3684.7647    1484.3081      30.5776      30.5776      32.1891    2.3829811   -222228.16 
   16000           50   -156770.27    1388.4724   -155381.79    30096.474    300.90679    1889.6913    6034.9082    464.08689   -829.92115      30.5776      30.5776      32.1891    2.3829811   -222597.89 
Loop time of 2.64974 on 24 procs for 200 steps with 1549 atoms

Performance: 1.630 ns/day, 14.721 hours/ns, 75.479 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2691     | 2.3265     | 2.3666     |   1.4 | 87.80
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017477   | 0.057775   | 0.11566    |   9.0 |  2.18
Output  | 0.0011358  | 0.004618   | 0.0047722  |   1.1 |  0.17
Modify  | 0.25831    | 0.25893    | 0.26266    |   0.2 |  9.77
Other   |            | 0.00189    |            |       |  0.07

Nlocal:    64.5417 ave 72 max 49 min
Histogram: 1 0 0 2 0 2 6 8 4 1
Nghost:    2367.17 ave 2400 max 2336 min
Histogram: 1 0 3 4 4 8 1 1 1 1
Neighs:    25263.5 ave 28850 max 18539 min
Histogram: 1 0 1 1 0 4 8 5 3 1

Total # of neighbors = 606325
Ave neighs/atom = 391.43
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156770.265125704-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156770.265125704--156732.905546324-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156770.265125704--156732.905546324--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.281723618507385
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156770.265125704; E_system:-156732.905546324;prob1:3.58952886263018e-13; prob2:0.281723618507385

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
62  17  1548  -156732.905546324  -156770.265125704  30096.4744337948  30096.4744337948  2883.69763149065  0.783585727214813  2  12  12  3  3.58952886263018e-13  0.281723618507385  add fail  1549  24.2884606895  10.0099558352  6.29491608141 0.00277976104756875  0.00545214990328856  0.00711647767067079
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 63, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.795821309089661
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.795821309089661)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.795821309089661, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000829935 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 29.2585437398 ${ry} ${rz} units box
create_atoms	2 single 29.2585437398 20.0192767299 ${rz} units box
create_atoms	2 single 29.2585437398 20.0192767299 20.9324494532 units box
Created 1 atoms
  create_atoms CPU = 4.91142e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.718282401561737-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.718282401561737-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.718282401561737-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.753600418567657-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.753600418567657-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.753600418567657-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.00850969552993774-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.00850969552993774-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.00850969552993774-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00453289828115921 ${rvy} ${rvz}
velocity	created set 0.00453289828115921 0.00526631965381534 ${rvz}
velocity	created set 0.00453289828115921 0.00526631965381534 -0.0102063910805409
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.46 | 72.88 | 73.36 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15800            0   -156756.96    1397.2695   -155359.69    30096.474    302.81328    3271.7325    4409.2533    3564.8209    1841.1235      30.5776      30.5776      32.1891    2.3829811   -222222.57 
   16000           50    -156751.5    1410.8032    -155340.7    30096.474    305.74628    2743.1607    7150.2413     1016.792    62.448772      30.5776      30.5776      32.1891    2.3829811      -222562 
Loop time of 2.6442 on 24 procs for 200 steps with 1549 atoms

Performance: 1.634 ns/day, 14.690 hours/ns, 75.637 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2637     | 2.3228     | 2.3605     |   1.5 | 87.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017577   | 0.055172   | 0.11454    |   9.8 |  2.09
Output  | 0.0011351  | 0.00462    | 0.0047741  |   1.1 |  0.17
Modify  | 0.25914    | 0.25972    | 0.26331    |   0.2 |  9.82
Other   |            | 0.001858   |            |       |  0.07

Nlocal:    64.5417 ave 72 max 49 min
Histogram: 1 0 0 2 0 2 7 7 4 1
Nghost:    2366.5 ave 2401 max 2333 min
Histogram: 1 0 3 4 4 7 2 1 1 1
Neighs:    25265.1 ave 28876 max 18497 min
Histogram: 1 0 1 1 0 3 9 5 3 1

Total # of neighbors = 606363
Ave neighs/atom = 391.454
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156751.500688212-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156751.500688212--156732.905546324-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156751.500688212--156732.905546324--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.603736996650696
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156751.500688212; E_system:-156732.905546324;prob1:7.68116690777903e-27; prob2:0.603736996650696

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
63  17  1548  -156732.905546324  -156751.500688212  30096.4744337948  30096.4744337948  2883.69763149065  0.795821309089661  2  12  12  3  7.68116690777903e-27  0.603736996650696  add fail  1549  29.2585437398  20.0192767299  20.9324494532 0.00453289828115921  0.00526631965381534  -0.0102063910805409
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 64, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.306793630123138
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.306793630123138)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.306793630123138, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.509101450443268*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.509101450443268*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1543
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000830889 secs
group		disp id ${nMCmoved}
group		disp id 1543
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 11.3496909353 ${ry} ${rz} units box
displace_atoms	disp move 11.3496909353 -14.6513045745 ${rz} units box
displace_atoms	disp move 11.3496909353 -14.6513045745 -3.45108069534 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.45 | 72.83 | 73.24 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15800            0   -156705.56     1396.005   -155309.55    30096.474     302.7348    2948.3037    4234.0345    3261.2492    1349.6276      30.5776      30.5776      32.1891    2.3825981   -222159.05 
   16000           50      -156683    1393.3312   -155289.67    30096.474    302.15497    2109.4551     6402.778    409.84849   -484.26132      30.5776      30.5776      32.1891    2.3825981   -222497.31 
Loop time of 2.63468 on 24 procs for 200 steps with 1548 atoms

Performance: 1.640 ns/day, 14.637 hours/ns, 75.910 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2625     | 2.3163     | 2.3509     |   1.4 | 87.92
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017663   | 0.052225   | 0.1063     |   9.3 |  1.98
Output  | 0.0011342  | 0.0045907  | 0.0047429  |   1.1 |  0.17
Modify  | 0.25919    | 0.25968    | 0.26323    |   0.1 |  9.86
Other   |            | 0.001868   |            |       |  0.07

Nlocal:    64.5 ave 71 max 49 min
Histogram: 1 0 0 0 2 2 3 10 1 5
Nghost:    2364.71 ave 2396 max 2334 min
Histogram: 1 0 3 2 5 8 2 1 1 1
Neighs:    25229 ave 28419 max 18530 min
Histogram: 1 0 0 2 0 3 6 8 0 4

Total # of neighbors = 605497
Ave neighs/atom = 391.148
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156682.999940588-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156682.999940588--156732.905546324))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.946276724338531
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156682.999940588; E_system:-156732.905546324;prob1:4.41080097441516e-37; prob2:0.946276724338531

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
64  17  1548  -156732.905546324  -156682.999940588  30096.4744337948  30096.4744337948  2883.69763149065  0.306793630123138  0  12  12  1  4.41080097441516e-37  0.946276724338531  displace fail  1543  11.3496909353  -14.6513045745  -3.45108069534
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 65, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.733638882637024
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.733638882637024)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.733638882637024, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000818968 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 27.7113980134 ${ry} ${rz} units box
create_atoms	2 single 27.7113980134 18.1404715587 ${rz} units box
create_atoms	2 single 27.7113980134 18.1404715587 11.1379574229 units box
Created 1 atoms
  create_atoms CPU = 4.91142e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.872733652591705-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.872733652591705-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.872733652591705-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.181191861629486-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.181191861629486-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.181191861629486-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.320746302604675-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.320746302604675-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.320746302604675-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00774026545921647 ${rvy} ${rvz}
velocity	created set 0.00774026545921647 -0.00662043688405427 ${rvz}
velocity	created set 0.00774026545921647 -0.00662043688405427 -0.00372241999813664
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.49 | 72.89 | 73.36 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15800            0   -156797.37    1396.9804   -155400.39    30096.474    302.75063    3142.1773    4228.9425    3360.4424    1837.1471      30.5776      30.5776      32.1891    2.3829811   -222205.65 
   16000           50   -156769.21    1390.4041   -155378.81    30096.474    301.32542    2717.4653    7078.2871     956.7708    117.33808      30.5776      30.5776      32.1891    2.3829811   -222558.15 
Loop time of 2.64769 on 24 procs for 200 steps with 1549 atoms

Performance: 1.632 ns/day, 14.709 hours/ns, 75.538 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2644     | 2.323      | 2.3646     |   1.5 | 87.74
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01779    | 0.059226   | 0.118      |   9.6 |  2.24
Output  | 0.0011401  | 0.004623   | 0.004776   |   1.1 |  0.17
Modify  | 0.25842    | 0.25897    | 0.26236    |   0.1 |  9.78
Other   |            | 0.001889   |            |       |  0.07

Nlocal:    64.5417 ave 72 max 49 min
Histogram: 1 0 0 2 0 2 7 7 4 1
Nghost:    2367.17 ave 2401 max 2334 min
Histogram: 1 0 3 3 5 7 2 1 1 1
Neighs:    25264.4 ave 28850 max 18505 min
Histogram: 1 0 1 1 0 3 9 5 3 1

Total # of neighbors = 606345
Ave neighs/atom = 391.443
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156769.213004935-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156769.213004935--156732.905546324-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156769.213004935--156732.905546324--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.788503885269165
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156769.213004935; E_system:-156732.905546324;prob1:6.14586911863291e-14; prob2:0.788503885269165

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
65  17  1548  -156732.905546324  -156769.213004935  30096.4744337948  30096.4744337948  2883.69763149065  0.733638882637024  2  12  12  3  6.14586911863291e-14  0.788503885269165  add fail  1549  27.7113980134  18.1404715587  11.1379574229 0.00774026545921647  -0.00662043688405427  -0.00372241999813664
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 65
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000823975 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.44 | 72.85 | 73.31 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   15800            0   -156732.91     1396.005    -155336.9    30096.474     302.7348    2883.6978    3946.8744    3217.8586    1486.3604      30.5776      30.5776      32.1891    2.3825981   -222140.52 
   16000           50   -156703.17    1388.2826   -155314.89    30096.474    301.06013    2269.7694    6437.3606    689.34349   -317.39585      30.5776      30.5776      32.1891    2.3825981   -222475.64 
Loop time of 2.64583 on 24 procs for 200 steps with 1548 atoms

Performance: 1.633 ns/day, 14.699 hours/ns, 75.591 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2698     | 2.3248     | 2.3611     |   1.4 | 87.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017801   | 0.054175   | 0.10924    |   9.4 |  2.05
Output  | 0.0011308  | 0.004563   | 0.004715   |   1.1 |  0.17
Modify  | 0.25989    | 0.26031    | 0.26386    |   0.1 |  9.84
Other   |            | 0.001994   |            |       |  0.08

Nlocal:    64.5 ave 72 max 49 min
Histogram: 1 0 0 2 0 2 7 7 4 1
Nghost:    2365.21 ave 2399 max 2332 min
Histogram: 1 0 3 3 5 7 2 1 1 1
Neighs:    25232.4 ave 28850 max 18497 min
Histogram: 1 0 1 1 0 4 8 5 3 1

Total # of neighbors = 605577
Ave neighs/atom = 391.2
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1548
variable	E_system equal ${E_trial}
variable	E_system equal -156703.168203428
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2269.76940076619
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
65  12  -156703.168203428  -222475.637723752  -5116.69079786319  0  0  21894.4022503129  0  0  0  0  0  49800.1042412094  -161.071050821419  0  -644.275122513288
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
65  12  -156703.168203428  1388.28255540201  -155314.885648026  30096.4744337948  301.060134291642  2269.76940076619  6437.36056298483  689.343493181343  -317.39585386761  30.5776  30.5776  32.1891  2.38259809959687
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
65  17  1548  -156703.168203428  -156703.168203428  30096.4744337948  30096.4744337948  2269.76940076619  0.733638882637024  2  12  12  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156703.168203428, total atoms are 1548
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
65  17  1548  -156703.168203428  30096.4744337948  30096.4744337948  2269.76940076619  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 66, 17
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.19780832529068
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.19780832529068)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.19780832529068, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.489184260368347*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.489184260368347*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1542
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000766039 secs
group		disp id ${nMCmoved}
group		disp id 1542
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 5.83456408586 ${ry} ${rz} units box
displace_atoms	disp move 5.83456408586 7.90958718245 ${rz} units box
displace_atoms	disp move 5.83456408586 7.90958718245 -2.08758782137 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.38 | 72.81 | 73.34 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16000            0   -156682.99    1388.2826    -155294.7    30096.474    301.06013    2442.3377    6758.6855    638.38024    -70.05259      30.5776      30.5776      32.1891    2.3825981   -222522.58 
   16200           50   -156702.39    1422.8667   -155279.52    30096.474    308.55999    1138.3289    4478.5131   -1530.2228    466.69629      30.5776      30.5776      32.1891    2.3825981   -222475.37 
Loop time of 2.65162 on 24 procs for 200 steps with 1548 atoms

Performance: 1.629 ns/day, 14.731 hours/ns, 75.426 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2605     | 2.3232     | 2.367      |   1.7 | 87.61
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018089   | 0.061723   | 0.12473    |  10.3 |  2.33
Output  | 0.0011339  | 0.0045715  | 0.0047231  |   1.1 |  0.17
Modify  | 0.25959    | 0.26023    | 0.26347    |   0.1 |  9.81
Other   |            | 0.001893   |            |       |  0.07

Nlocal:    64.5 ave 72 max 49 min
Histogram: 1 0 0 1 3 1 7 3 4 4
Nghost:    2363.29 ave 2397 max 2329 min
Histogram: 1 0 2 5 4 6 3 1 1 1
Neighs:    25228.8 ave 28844 max 18502 min
Histogram: 1 0 1 1 2 2 7 4 4 2

Total # of neighbors = 605491
Ave neighs/atom = 391.144
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156702.386729177-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156702.386729177--156703.168203428))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.155757784843445
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156702.386729177; E_system:-156703.168203428;prob1:0.269592478763911; prob2:0.155757784843445

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1548
variable	E_system equal ${E_trial}
variable	E_system equal -156702.386729177
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1138.32887235425
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
66  12  -156702.386729177  -222475.374978084  -5069.92003864522  0  0  21852.6735200024  0  0  0  0  0  49796.0293637581  -164.356907938482  0  -641.437688270365
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
66  12  -156702.386729177  1422.86671671329  -155279.520012464  30096.4744337948  308.559985246496  1138.32887235425  4478.51311171003  -1530.22278507901  466.696290431734  30.5776  30.5776  32.1891  2.38259809959687
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
66  18  1548  -156702.386729177  -156702.386729177  30096.4744337948  30096.4744337948  1138.32887235425  0.19780832529068  0  12  12  1  0.269592478763911  0.155757784843445  displace pass  1542  5.83456408586  7.90958718245  -2.08758782137
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156702.386729177, total atoms are 1548
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
66  18  1548  -156702.386729177  30096.4744337948  30096.4744337948  1138.32887235425  0.269592478763911  0.155757784843445
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 67, 18
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.094620943069458
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.094620943069458)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.094620943069458, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.371706366539001*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.371706366539001*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000961781 secs
group		disp id ${nMCmoved}
group		disp id 1541
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 12.6170492089 ${ry} ${rz} units box
displace_atoms	disp move 12.6170492089 -4.77508800022 ${rz} units box
displace_atoms	disp move 12.6170492089 -4.77508800022 -13.727649398 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.42 | 72.88 | 73.32 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16200            0   -156697.42    1422.8667   -155274.55    30096.474    308.55999    1467.7608    5475.7456   -1461.8443    389.38106      30.5776      30.5776      32.1891    2.3825981   -222435.34 
   16400           50   -156719.13    1447.0042   -155272.13    30096.474     313.7944    1049.1145    3325.7686   -2159.7014    1981.2761      30.5776      30.5776      32.1891    2.3825981   -222510.07 
Loop time of 2.65927 on 24 procs for 200 steps with 1548 atoms

Performance: 1.625 ns/day, 14.774 hours/ns, 75.208 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2548     | 2.3222     | 2.3726     |   1.8 | 87.32
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018112   | 0.06828    | 0.13572    |  10.7 |  2.57
Output  | 0.0011311  | 0.0045935  | 0.004746   |   1.1 |  0.17
Modify  | 0.26166    | 0.26227    | 0.26555    |   0.1 |  9.86
Other   |            | 0.001943   |            |       |  0.07

Nlocal:    64.5 ave 73 max 48 min
Histogram: 1 0 0 1 2 2 8 3 3 4
Nghost:    2365.71 ave 2392 max 2337 min
Histogram: 1 1 1 3 6 4 3 2 0 3
Neighs:    25227.2 ave 28816 max 18180 min
Histogram: 1 0 0 2 0 5 4 7 2 3

Total # of neighbors = 605453
Ave neighs/atom = 391.12
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156719.133646249-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156719.133646249--156702.386729177))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.878848910331726
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156719.133646249; E_system:-156702.386729177;prob1:1584444355796.04; prob2:0.878848910331726

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1548
variable	E_system equal ${E_trial}
variable	E_system equal -156719.133646249
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1049.11445410253
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
67  12  -156719.133646249  -222510.066942122  -5099.91976005178  0  0  21843.34545667  0  0  0  0  0  49852.116538774  -162.798739410023  0  -641.810200108965
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
67  12  -156719.133646249  1447.00424661894  -155272.12939963  30096.4744337948  313.794400939891  1049.11445410253  3325.76858059076  -2159.70135891626  1981.2761406331  30.5776  30.5776  32.1891  2.38259809959687
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
67  19  1548  -156719.133646249  -156719.133646249  30096.4744337948  30096.4744337948  1049.11445410253  0.094620943069458  0  12  12  1  1584444355796.04  0.878848910331726  displace pass  1541  12.6170492089  -4.77508800022  -13.727649398
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156719.133646249, total atoms are 1548
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
67  19  1548  -156719.133646249  30096.4744337948  30096.4744337948  1049.11445410253  1584444355796.04  0.878848910331726
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 68, 19
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.874591588973999
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.874591588973999)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.874591588973999, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000900984 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 22.7601658378 ${ry} ${rz} units box
create_atoms	2 single 22.7601658378 1.6374798356 ${rz} units box
create_atoms	2 single 22.7601658378 1.6374798356 31.5561328158 units box
Created 1 atoms
  create_atoms CPU = 4.88758e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.713398456573486-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.713398456573486-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.713398456573486-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.577408075332642-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.577408075332642-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.577408075332642-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.150948822498322-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.150948822498322-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.150948822498322-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00443147725186813 ${rvy} ${rvz}
velocity	created set 0.00443147725186813 0.00160747238033266 ${rvz}
velocity	created set 0.00443147725186813 0.00160747238033266 -0.0072484701983016
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.62 | 73 | 73.35 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16400            0   -156765.11    1447.6244   -155317.49    30096.474    313.72608    1456.5495     3759.016   -1795.2221    2405.8546      30.5776      30.5776      32.1891    2.3829811   -222594.57 
   16600           50   -156732.02    1396.2182    -155335.8    30096.474    302.58545    2995.4842    3842.4459    -209.8521    5353.8589      30.5776      30.5776      32.1891    2.3829811   -222470.16 
Loop time of 2.65989 on 24 procs for 200 steps with 1549 atoms

Performance: 1.624 ns/day, 14.777 hours/ns, 75.191 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2541     | 2.3308     | 2.3744     |   1.8 | 87.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017895   | 0.061348   | 0.13821    |  11.1 |  2.31
Output  | 0.0011399  | 0.0045731  | 0.0047252  |   1.1 |  0.17
Modify  | 0.26083    | 0.26133    | 0.26467    |   0.1 |  9.83
Other   |            | 0.001817   |            |       |  0.07

Nlocal:    64.5417 ave 72 max 47 min
Histogram: 1 0 0 0 3 1 4 4 7 4
Nghost:    2371.29 ave 2399 max 2343 min
Histogram: 1 0 2 4 6 1 7 2 0 1
Neighs:    25264 ave 28899 max 17832 min
Histogram: 1 0 0 3 0 3 2 9 4 2

Total # of neighbors = 606335
Ave neighs/atom = 391.436
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156732.021302831-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156732.021302831--156719.133646249-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156732.021302831--156719.133646249--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0599856376647949
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156732.021302831; E_system:-156719.133646249;prob1:5.34084621328907e-31; prob2:0.0599856376647949

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
68  19  1548  -156719.133646249  -156732.021302831  30096.4744337948  30096.4744337948  1049.11445410253  0.874591588973999  2  12  12  3  5.34084621328907e-31  0.0599856376647949  add fail  1549  22.7601658378  1.6374798356  31.5561328158 0.00443147725186813  0.00160747238033266  -0.0072484701983016
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 69, 19
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.319772005081177
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.319772005081177)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.319772005081177, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.167920827865601*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.167920827865601*12)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1539
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000900984 secs
group		disp id ${nMCmoved}
group		disp id 1539
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 7.0504966875 ${ry} ${rz} units box
displace_atoms	disp move 7.0504966875 -3.81369199129 ${rz} units box
displace_atoms	disp move 7.0504966875 -3.81369199129 -12.3518988607 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.58 | 72.93 | 73.31 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16400            0   -156685.49    1447.0042   -155238.48    30096.474     313.7944    1253.5966    3584.4228   -2088.0277    2264.3946      30.5776      30.5776      32.1891    2.3825981   -222503.35 
   16600           50   -156665.02    1406.7384   -155258.28    30096.474    305.06243     2777.922    3662.4092   -396.73269    5068.0896      30.5776      30.5776      32.1891    2.3825981   -222361.43 
Loop time of 2.66588 on 24 procs for 200 steps with 1548 atoms

Performance: 1.620 ns/day, 14.810 hours/ns, 75.022 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2482     | 2.325      | 2.3798     |   2.2 | 87.21
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017904   | 0.072391   | 0.14926    |  12.3 |  2.72
Output  | 0.0011458  | 0.0045824  | 0.0047359  |   1.1 |  0.17
Modify  | 0.26139    | 0.26198    | 0.26534    |   0.1 |  9.83
Other   |            | 0.001908   |            |       |  0.07

Nlocal:    64.5 ave 71 max 47 min
Histogram: 1 0 0 0 2 2 3 5 7 4
Nghost:    2368.33 ave 2397 max 2342 min
Histogram: 1 0 2 6 4 5 3 2 0 1
Neighs:    25231.5 ave 28474 max 17829 min
Histogram: 1 0 0 2 1 1 4 7 5 3

Total # of neighbors = 605555
Ave neighs/atom = 391.185
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156665.015917068-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156665.015917068--156719.133646249))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.73162966966629
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156665.015917068; E_system:-156719.133646249;prob1:3.7674625002403e-40; prob2:0.73162966966629

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
69  19  1548  -156719.133646249  -156665.015917068  30096.4744337948  30096.4744337948  1049.11445410253  0.319772005081177  0  12  12  1  3.7674625002403e-40  0.73162966966629  displace fail  1539  7.0504966875  -3.81369199129  -12.3518988607
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 70, 19
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.334424316883087
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.334424316883087)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.334424316883087, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.37687474489212*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.37687474489212*12)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1541
variable	lastatom equal ${n_system}
variable	lastatom equal 1548
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000916958 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1548]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1548]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1548]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1548]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1548]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1548]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1548]
variable	tx equal ${lastx}
variable	tx equal 22.3449115068765
variable	ty equal ${lasty}
variable	ty equal 18.2319747452436
variable	tz equal ${lastz}
variable	tz equal 11.0959013752743
variable	tvx equal ${lastvx}
variable	tvx equal 0.0115224634821701
variable	tvy equal ${lastvy}
variable	tvy equal 0.0102542539317224
variable	tvz equal ${lastvz}
variable	tvz equal 0.00551769571520409
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1541]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1541]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1541]
variable	dx equal (${tx}-${delx})
variable	dx equal (22.3449115068765-${delx})
variable	dx equal (22.3449115068765-16.5860133065827)
variable	dy equal (${ty}-${dely})
variable	dy equal (18.2319747452436-${dely})
variable	dy equal (18.2319747452436-9.3520402218554)
variable	dz equal (${tz}-${delz})
variable	dz equal (11.0959013752743-${delz})
variable	dz equal (11.0959013752743-7.4005206678908)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1541 16.5860133065827 9.3520402218554 7.4005206678908; Last coords: 22.3449115068765 18.2319747452436 11.0959013752743
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0115224634821701 0.0102542539317224 0.00551769571520409 Last type: 2
group		del id ${lastatom}
group		del id 1548
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1547
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1541
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 5.7588982002938 ${dy} ${dz}
displace_atoms	delDisp move 5.7588982002938 8.8799345233882 ${dz}
displace_atoms	delDisp move 5.7588982002938 8.8799345233882 3.6953807073835
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1541 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1541 vx 0.0115224634821701 vy ${tvy} vz ${tvz}
set		atom 1541 vx 0.0115224634821701 vy 0.0102542539317224 vz ${tvz}
set		atom 1541 vx 0.0115224634821701 vy 0.0102542539317224 vz 0.00551769571520409
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1541 type ${ttyp}
set		atom 1541 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.55 | 72.92 | 73.3 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16400            0   -156641.42    1442.9978   -155198.42    30096.474    313.12798    1007.8221    3283.5208   -2221.4037    1961.3492      30.5776      30.5776      32.1891    2.3822151   -222478.37 
   16600           50   -156600.01    1385.7661   -155214.24    30096.474    300.70881    3068.8816    4027.4277   -114.14855    5293.3657      30.5776      30.5776      32.1891    2.3822151   -222363.38 
Loop time of 2.66077 on 24 procs for 200 steps with 1547 atoms

Performance: 1.624 ns/day, 14.782 hours/ns, 75.166 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2501     | 2.3221     | 2.3716     |   1.8 | 87.27
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017903   | 0.067115   | 0.13922    |  10.5 |  2.52
Output  | 0.001195   | 0.0046595  | 0.004813   |   1.1 |  0.18
Modify  | 0.26443    | 0.26503    | 0.26833    |   0.1 |  9.96
Other   |            | 0.001882   |            |       |  0.07

Nlocal:    64.4583 ave 72 max 47 min
Histogram: 1 0 0 0 3 1 5 3 7 4
Nghost:    2368.04 ave 2397 max 2339 min
Histogram: 1 0 2 5 4 2 7 1 1 1
Neighs:    25197.7 ave 28879 max 17777 min
Histogram: 1 0 0 3 0 3 2 8 5 2

Total # of neighbors = 604744
Ave neighs/atom = 390.914
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1548*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1548*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1548*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1548*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1548*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156600.006951292-${E_system}+${mu}))
variable	prob1 equal	(1548*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156600.006951292--156719.133646249+${mu}))
variable	prob1 equal	(1548*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156600.006951292--156719.133646249+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.684511780738831
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156600.006951292; E_system:-156719.133646249;prob1:7.5608261133235e-48; prob2:0.684511780738831

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
70  19  1548  -156719.133646249  -156600.006951292  30096.4744337948  30096.4744337948  1049.11445410253  0.334424316883087  1  12  12  2  7.5608261133235e-48  0.684511780738831  delete fail  1541
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 70
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000798941 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.6 | 72.95 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16400            0   -156719.13    1447.0042   -155272.13    30096.474     313.7944    1049.1145    3325.7687   -2159.7012    1981.2761      30.5776      30.5776      32.1891    2.3825981   -222510.07 
   16600           50   -156672.48    1383.5723   -155288.91    30096.474    300.03868    3045.7304    3994.3009   -214.16536    5357.0556      30.5776      30.5776      32.1891    2.3825981   -222394.02 
Loop time of 2.68453 on 24 procs for 200 steps with 1548 atoms

Performance: 1.609 ns/day, 14.914 hours/ns, 74.501 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2601     | 2.335      | 2.3936     |   2.0 | 86.98
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018428   | 0.076806   | 0.15177    |  10.8 |  2.86
Output  | 0.0011861  | 0.0046075  | 0.0047631  |   1.1 |  0.17
Modify  | 0.26548    | 0.26605    | 0.26935    |   0.1 |  9.91
Other   |            | 0.002099   |            |       |  0.08

Nlocal:    64.5 ave 72 max 47 min
Histogram: 1 0 0 0 3 1 4 4 7 4
Nghost:    2369.33 ave 2398 max 2341 min
Histogram: 1 0 2 5 4 5 4 2 0 1
Neighs:    25231.5 ave 28879 max 17818 min
Histogram: 1 0 0 3 0 3 2 8 5 2

Total # of neighbors = 605555
Ave neighs/atom = 391.185
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1548
variable	E_system equal ${E_trial}
variable	E_system equal -156672.484523612
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3045.73037667723
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
70  12  -156672.484523612  -222394.024715075  -5153.09920080422  0  0  21786.7854436788  0  0  0  0  0  49892.5892825944  -162.869098671898  0  -641.866235334054
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
70  12  -156672.484523612  1383.57230608389  -155288.912217528  30096.4744337948  300.038679194666  3045.73037667723  3994.30090935251  -214.165357068371  5357.05557774755  30.5776  30.5776  32.1891  2.38259809959687
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
70  19  1548  -156672.484523612  -156672.484523612  30096.4744337948  30096.4744337948  3045.73037667723  0.334424316883087  1  12  12  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156672.484523612, total atoms are 1548
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
70  19  1548  -156672.484523612  30096.4744337948  30096.4744337948  3045.73037667723  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 71, 19
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.991424858570099
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.991424858570099)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.991424858570099, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:12; n_GCMC:12
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1548 atoms
  read_restart CPU = 0.000788927 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 27.9815870339 ${ry} ${rz} units box
create_atoms	2 single 27.9815870339 2.11253226531 ${rz} units box
create_atoms	2 single 27.9815870339 2.11253226531 16.0775105373 units box
Created 1 atoms
  create_atoms CPU = 5.6982e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1549
print 		'ncreated is ${ncreated}'
ncreated is 1549
group		created id ${ncreated}
group		created id 1549
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.792465567588806-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.792465567588806-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.792465567588806-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.906521499156952-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.906521499156952-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.906521499156952-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.704062581062317-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.704062581062317-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.704062581062317-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.0060734015162766 ${rvy} ${rvz}
velocity	created set 0.0060734015162766 0.00844191099052772 ${rvz}
velocity	created set 0.0060734015162766 0.00844191099052772 0.00423760649657628
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.51 | 72.85 | 73.32 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16600            0   -156733.66    1384.6183   -155349.04    30096.474    300.07155    3225.1355    4113.7847   -135.34537    5696.9672      30.5776      30.5776      32.1891    2.3829811   -222421.54 
   16800           50    -156802.9     1419.505   -155383.39    30096.474     307.6321    777.94499    2963.2088   -807.21446    177.84066      30.5776      30.5776      32.1891    2.3829811   -222191.71 
Loop time of 2.65792 on 24 procs for 200 steps with 1549 atoms

Performance: 1.625 ns/day, 14.766 hours/ns, 75.247 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2663     | 2.3213     | 2.3696     |   1.7 | 87.34
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017895   | 0.066046   | 0.12136    |   9.9 |  2.48
Output  | 0.0011711  | 0.0046263  | 0.0047832  |   1.1 |  0.17
Modify  | 0.26338    | 0.26392    | 0.26742    |   0.2 |  9.93
Other   |            | 0.002023   |            |       |  0.08

Nlocal:    64.5417 ave 73 max 52 min
Histogram: 1 1 1 1 1 4 7 6 0 2
Nghost:    2365 ave 2387 max 2338 min
Histogram: 1 0 1 4 4 6 3 2 0 3
Neighs:    25259.2 ave 29285 max 19608 min
Histogram: 1 1 1 1 0 6 7 5 1 1

Total # of neighbors = 606220
Ave neighs/atom = 391.362
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156802.897465667-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156802.897465667--156672.484523612-${mu}))
variable	prob1 equal	(30096.4744337948/((1548+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156802.897465667--156672.484523612--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.666042506694794
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156802.897465667; E_system:-156672.484523612;prob1:2.20298431423713e+55; prob2:0.666042506694794

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1549
variable	E_system equal ${E_trial}
variable	E_system equal -156802.897465667
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 777.944985068045
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
71  13  -156802.897465667  -222191.705724609  -5102.50052014221  0  0  21598.0755349592  0  0  0  0  0  49760.473604667  -169.431961177296  0  -697.808399364226
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
71  13  -156802.897465667  1419.50495285818  -155383.392512809  30096.4744337948  307.632102757933  777.944985068045  2963.20875259143  -807.214458754953  177.840661367659  30.5776  30.5776  32.1891  2.38298106141774
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
71  20  1549  -156802.897465667  -156802.897465667  30096.4744337948  30096.4744337948  777.944985068045  0.991424858570099  2  13  13  3  2.20298431423713e+55  0.666042506694794  add pass  1549  27.9815870339  2.11253226531  16.0775105373 0.0060734015162766  0.00844191099052772  0.00423760649657628
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156802.897465667, total atoms are 1549
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
71  20  1549  -156802.897465667  30096.4744337948  30096.4744337948  777.944985068045  2.20298431423713e+55  0.666042506694794
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 72, 20
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.766979396343231
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.766979396343231)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.766979396343231, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:13; n_GCMC:13
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1549 atoms
  read_restart CPU = 0.000853062 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 17.1801645643 ${ry} ${rz} units box
create_atoms	2 single 17.1801645643 22.3358155624 ${rz} units box
create_atoms	2 single 17.1801645643 22.3358155624 29.187045441 units box
Created 1 atoms
  create_atoms CPU = 5.6982e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1550
print 		'ncreated is ${ncreated}'
ncreated is 1550
group		created id ${ncreated}
group		created id 1550
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.185174465179443-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.185174465179443-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.185174465179443-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.425548195838928-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.425548195838928-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.425548195838928-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.615629255771637-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.615629255771637-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.615629255771637-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00653773330072837 ${rvy} ${rvz}
velocity	created set -0.00653773330072837 -0.00154608183113413 ${rvz}
velocity	created set -0.00653773330072837 -0.00154608183113413 0.00240118145571497
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.49 | 72.95 | 73.51 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   16800            0   -156852.75    1419.9271   -155432.83    30096.474    307.52494    955.81813     3275.136   -775.52772    367.84616      30.5776      30.5776      32.1891     2.383364   -222264.89 
   17000           50   -156879.58     1409.429   -155470.15    30096.474    305.25127    2738.8185    6240.2079   -1050.1794     3026.427      30.5776      30.5776      32.1891     2.383364   -222766.71 
Loop time of 2.67456 on 24 procs for 200 steps with 1550 atoms

Performance: 1.615 ns/day, 14.859 hours/ns, 74.779 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2722     | 2.3297     | 2.3905     |   1.8 | 87.11
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017987   | 0.078492   | 0.13601    |   9.6 |  2.93
Output  | 0.001142   | 0.0045939  | 0.0047469  |   1.1 |  0.17
Modify  | 0.25923    | 0.25976    | 0.26318    |   0.1 |  9.71
Other   |            | 0.002016   |            |       |  0.08

Nlocal:    64.5833 ave 71 max 50 min
Histogram: 1 0 1 1 1 1 5 4 6 4
Nghost:    2369.71 ave 2402 max 2336 min
Histogram: 1 0 3 4 3 5 5 0 2 1
Neighs:    25293.2 ave 28557 max 18958 min
Histogram: 1 0 2 0 1 2 5 7 5 1

Total # of neighbors = 607036
Ave neighs/atom = 391.636
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1549+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1549+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1549+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1549+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156879.581071889-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1549+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156879.581071889--156802.897465667-${mu}))
variable	prob1 equal	(30096.4744337948/((1549+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156879.581071889--156802.897465667--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.126598536968231
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156879.581071889; E_system:-156802.897465667;prob1:1.59117801705422e+16; prob2:0.126598536968231

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1550
variable	E_system equal ${E_trial}
variable	E_system equal -156879.581071889
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2738.81850407014
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
72  14  -156879.581071889  -222766.706209933  -5081.7486774413  0  0  21933.1564619339  0  0  0  0  0  49972.4252780548  -185.707811482405  0  -751.000113020871
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
72  14  -156879.581071889  1409.4289712073  -155470.152100682  30096.4744337948  305.251266643957  2738.81850407014  6240.20786636955  -1050.17940294942  3026.42704879028  30.5776  30.5776  32.1891  2.38336402323861
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
72  21  1550  -156879.581071889  -156879.581071889  30096.4744337948  30096.4744337948  2738.81850407014  0.766979396343231  2  14  14  3  1.59117801705422e+16  0.126598536968231  add pass  1550  17.1801645643  22.3358155624  29.187045441 -0.00653773330072837  -0.00154608183113413  0.00240118145571497
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156879.581071889, total atoms are 1550
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
72  21  1550  -156879.581071889  30096.4744337948  30096.4744337948  2738.81850407014  1.59117801705422e+16  0.126598536968231
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 73, 21
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.235842943191528
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.235842943191528)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.235842943191528, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:14; n_GCMC:14
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.481349050998688*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.481349050998688*14)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1543
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1550 atoms
  read_restart CPU = 0.000827789 secs
group		disp id ${nMCmoved}
group		disp id 1543
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 14.3605726755 ${ry} ${rz} units box
displace_atoms	disp move 14.3605726755 -8.46347685787 ${rz} units box
displace_atoms	disp move 14.3605726755 -8.46347685787 -0.0496266253294 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.5 | 72.93 | 73.25 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17000            0   -156842.43     1409.429      -155433    30096.474    305.25127    2874.2976    6279.8792   -697.83916    3040.8527      30.5776      30.5776      32.1891     2.383364   -222787.84 
   17200           50   -156819.94    1364.0359   -155455.91    30096.474    295.42014    4952.6746    7008.2291    489.30718    7360.4874      30.5776      30.5776      32.1891     2.383364    -222301.8 
Loop time of 2.66023 on 24 procs for 200 steps with 1550 atoms

Performance: 1.624 ns/day, 14.779 hours/ns, 75.181 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2587     | 2.3312     | 2.3773     |   1.8 | 87.63
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017866   | 0.063688   | 0.13616    |  10.9 |  2.39
Output  | 0.001117   | 0.004566   | 0.0047181  |   1.1 |  0.17
Modify  | 0.25851    | 0.25887    | 0.26218    |   0.1 |  9.73
Other   |            | 0.001899   |            |       |  0.07

Nlocal:    64.5833 ave 71 max 49 min
Histogram: 1 0 0 1 2 2 3 6 4 5
Nghost:    2368.83 ave 2392 max 2342 min
Histogram: 1 0 2 2 4 4 6 3 1 1
Neighs:    25287.5 ave 28466 max 18591 min
Histogram: 1 0 0 3 0 2 4 8 4 2

Total # of neighbors = 606900
Ave neighs/atom = 391.548
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156819.94252086-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156819.94252086--156879.581071889))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.200586080551147
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156819.94252086; E_system:-156879.581071889;prob1:3.58272379519051e-44; prob2:0.200586080551147

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
73  21  1550  -156879.581071889  -156819.94252086  30096.4744337948  30096.4744337948  2738.81850407014  0.235842943191528  0  14  14  1  3.58272379519051e-44  0.200586080551147  displace fail  1543  14.3605726755  -8.46347685787  -0.0496266253294
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 74, 21
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.461256802082062
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.461256802082062)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.461256802082062, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:14; n_GCMC:14
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.521290004253387*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.521290004253387*14)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1544
variable	lastatom equal ${n_system}
variable	lastatom equal 1550
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1550 atoms
  read_restart CPU = 0.000916958 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1550]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1550]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1550]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1550]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1550]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1550]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1550]
variable	tx equal ${lastx}
variable	tx equal 17.3246134133701
variable	ty equal ${lasty}
variable	ty equal 22.7514338589046
variable	tz equal ${lastz}
variable	tz equal 28.4109832517939
variable	tvx equal ${lastvx}
variable	tvx equal -0.0161550787560056
variable	tvy equal ${lastvy}
variable	tvy equal -0.011147660618478
variable	tvz equal ${lastvz}
variable	tvz equal -0.0189111814872892
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1544]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1544]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1544]
variable	dx equal (${tx}-${delx})
variable	dx equal (17.3246134133701-${delx})
variable	dx equal (17.3246134133701-13.5511835092263)
variable	dy equal (${ty}-${dely})
variable	dy equal (22.7514338589046-${dely})
variable	dy equal (22.7514338589046-5.51826041588779)
variable	dz equal (${tz}-${delz})
variable	dz equal (28.4109832517939-${delz})
variable	dz equal (28.4109832517939-4.2838447324701)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1544 13.5511835092263 5.51826041588779 4.2838447324701; Last coords: 17.3246134133701 22.7514338589046 28.4109832517939
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0161550787560056 -0.011147660618478 -0.0189111814872892 Last type: 2
group		del id ${lastatom}
group		del id 1550
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1549
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1544
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 3.7734299041438 ${dy} ${dz}
displace_atoms	delDisp move 3.7734299041438 17.2331734430168 ${dz}
displace_atoms	delDisp move 3.7734299041438 17.2331734430168 24.1271385193238
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1544 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1544 vx -0.0161550787560056 vy ${tvy} vz ${tvz}
set		atom 1544 vx -0.0161550787560056 vy -0.011147660618478 vz ${tvz}
set		atom 1544 vx -0.0161550787560056 vy -0.011147660618478 vz -0.0189111814872892
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1544 type ${ttyp}
set		atom 1544 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.5 | 72.91 | 73.28 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17000            0   -156805.37    1409.2808   -155396.09    30096.474    305.41635    2862.9335    6483.4566   -922.45156    3027.7956      30.5776      30.5776      32.1891    2.3829811   -222707.67 
   17200           50   -156786.59     1367.723   -155418.86    30096.474    296.41004     4987.693    7209.2653    400.79324    7353.0205      30.5776      30.5776      32.1891    2.3829811    -222222.9 
Loop time of 2.66613 on 24 procs for 200 steps with 1549 atoms

Performance: 1.620 ns/day, 14.812 hours/ns, 75.015 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2638     | 2.3326     | 2.3797     |   1.7 | 87.49
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018048   | 0.065007   | 0.13376    |  10.2 |  2.44
Output  | 0.001157   | 0.0046233  | 0.004775   |   1.1 |  0.17
Modify  | 0.26152    | 0.26195    | 0.26538    |   0.1 |  9.83
Other   |            | 0.001953   |            |       |  0.07

Nlocal:    64.5417 ave 72 max 49 min
Histogram: 1 0 0 2 1 2 6 5 5 2
Nghost:    2368.12 ave 2394 max 2339 min
Histogram: 1 0 3 1 7 1 7 2 1 1
Neighs:    25256.3 ave 28879 max 18559 min
Histogram: 1 0 1 2 0 3 6 7 3 1

Total # of neighbors = 606151
Ave neighs/atom = 391.318
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1550*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1550*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1550*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1550*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1550*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156786.585989945-${E_system}+${mu}))
variable	prob1 equal	(1550*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156786.585989945--156879.581071889+${mu}))
variable	prob1 equal	(1550*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156786.585989945--156879.581071889+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.00379633903503418
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156786.585989945; E_system:-156879.581071889;prob1:8.23411080168347e-29; prob2:0.00379633903503418

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
74  21  1550  -156879.581071889  -156786.585989945  30096.4744337948  30096.4744337948  2738.81850407014  0.461256802082062  1  14  14  2  8.23411080168347e-29  0.00379633903503418  delete fail  1544
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 75, 21
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.27880322933197
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.27880322933197)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.27880322933197, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:14; n_GCMC:14
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.329206764698029*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.329206764698029*14)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1550 atoms
  read_restart CPU = 0.000737906 secs
group		disp id ${nMCmoved}
group		disp id 1541
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 3.22777276431 ${ry} ${rz} units box
displace_atoms	disp move 3.22777276431 -1.93749117345 ${rz} units box
displace_atoms	disp move 3.22777276431 -1.93749117345 1.6282473139 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.5 | 72.94 | 73.3 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17000            0   -156862.51     1409.429   -155453.08    30096.474    305.25127    2806.3784    6316.4492   -925.77791     3028.464      30.5776      30.5776      32.1891     2.383364   -222787.29 
   17200           50   -156847.33    1371.2529   -155476.08    30096.474    296.98318    4879.6162    7043.7704    220.06336    7375.0147      30.5776      30.5776      32.1891     2.383364    -222278.2 
Loop time of 2.75382 on 24 procs for 200 steps with 1550 atoms

Performance: 1.569 ns/day, 15.299 hours/ns, 72.626 timesteps/s
98.1% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2695     | 2.3435     | 2.4658     |   2.6 | 85.10
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018207   | 0.14034    | 0.21434    |  10.5 |  5.10
Output  | 0.0011382  | 0.0046044  | 0.0047629  |   1.1 |  0.17
Modify  | 0.26313    | 0.26355    | 0.2669     |   0.1 |  9.57
Other   |            | 0.001845   |            |       |  0.07

Nlocal:    64.5833 ave 72 max 49 min
Histogram: 1 0 0 2 1 2 6 5 5 2
Nghost:    2368.83 ave 2395 max 2338 min
Histogram: 1 0 3 2 5 2 6 3 1 1
Neighs:    25286.3 ave 28893 max 18595 min
Histogram: 1 0 1 2 0 3 5 8 3 1

Total # of neighbors = 606872
Ave neighs/atom = 391.53
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156847.32872443-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-156847.32872443--156879.581071889))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.637913286685944
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156847.32872443; E_system:-156879.581071889;prob1:3.19632092613127e-24; prob2:0.637913286685944

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
75  21  1550  -156879.581071889  -156847.32872443  30096.4744337948  30096.4744337948  2738.81850407014  0.27880322933197  0  14  14  1  3.19632092613127e-24  0.637913286685944  displace fail  1541  3.22777276431  -1.93749117345  1.6282473139
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 75
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1550 atoms
  read_restart CPU = 0.000793934 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.52 | 72.94 | 73.3 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17000            0   -156879.58     1409.429   -155470.15    30096.474    305.25127    2738.8187     6240.208    -1050.179    3026.4272      30.5776      30.5776      32.1891     2.383364   -222766.71 
   17200           50   -156858.75    1366.4037   -155492.35    30096.474    295.93293    5107.0086    7163.7325    472.89597    7684.3974      30.5776      30.5776      32.1891     2.383364   -222285.97 
Loop time of 2.68835 on 24 procs for 200 steps with 1550 atoms

Performance: 1.607 ns/day, 14.935 hours/ns, 74.395 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2706     | 2.3393     | 2.4017     |   1.8 | 87.02
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017976   | 0.080099   | 0.14882    |   9.6 |  2.98
Output  | 0.001159   | 0.0046379  | 0.0047908  |   1.1 |  0.17
Modify  | 0.26188    | 0.26234    | 0.26568    |   0.1 |  9.76
Other   |            | 0.001962   |            |       |  0.07

Nlocal:    64.5833 ave 72 max 49 min
Histogram: 1 0 0 2 1 2 6 5 5 2
Nghost:    2369.33 ave 2395 max 2340 min
Histogram: 1 0 3 1 6 2 7 2 1 1
Neighs:    25289 ave 28893 max 18590 min
Histogram: 1 0 1 2 0 3 5 8 3 1

Total # of neighbors = 606935
Ave neighs/atom = 391.571
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1550
variable	E_system equal ${E_trial}
variable	E_system equal -156858.749682992
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 5107.00861256581
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
75  14  -156858.749682992  -222285.974027722  -5132.53479273868  0  0  21606.8952207706  0  0  0  0  0  49889.8199699555  -186.571620847264  0  -750.384432411092
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
75  14  -156858.749682992  1366.40365052188  -155492.34603247  30096.4744337948  295.932929994657  5107.00861256581  7163.73250674589  472.895965422443  7684.39736552911  30.5776  30.5776  32.1891  2.38336402323861
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
75  21  1550  -156858.749682992  -156858.749682992  30096.4744337948  30096.4744337948  5107.00861256581  0.27880322933197  0  14  14  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156858.749682992, total atoms are 1550
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
75  21  1550  -156858.749682992  30096.4744337948  30096.4744337948  5107.00861256581  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 76, 21
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.759221494197845
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.759221494197845)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.759221494197845, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:14; n_GCMC:14
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1550 atoms
  read_restart CPU = 0.000725985 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 16.2720401541 ${ry} ${rz} units box
create_atoms	2 single 16.2720401541 13.3862014354 ${rz} units box
create_atoms	2 single 16.2720401541 13.3862014354 4.40800764036 units box
Created 1 atoms
  create_atoms CPU = 4.60148e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1551
print 		'ncreated is ${ncreated}'
ncreated is 1551
group		created id ${ncreated}
group		created id 1551
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.04688560962677-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.04688560962677-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.04688560962677-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.405347406864166-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.405347406864166-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.405347406864166-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0853965878486633-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0853965878486633-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.0853965878486633-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00940946877346135 ${rvy} ${rvz}
velocity	created set -0.00940946877346135 -0.00196557566557346 ${rvz}
velocity	created set -0.00940946877346135 -0.00196557566557346 -0.008609741696341
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.84 | 73.03 | 73.25 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17200            0    -156916.9     1367.785   -155549.12    30096.474    296.04097    5088.2839    7111.8015    495.01713     7658.033      30.5776      30.5776      32.1891     2.383747   -222373.23 
   17400           50   -156972.99    1412.6251   -155560.37    30096.474    305.74611   -888.73438    2122.1858   -1825.6391   -2962.7498      30.5776      30.5776      32.1891     2.383747   -222523.27 
Loop time of 2.66963 on 24 procs for 200 steps with 1551 atoms

Performance: 1.618 ns/day, 14.831 hours/ns, 74.917 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2658     | 2.3381     | 2.3845     |   1.7 | 87.58
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01782    | 0.063939   | 0.13662    |  10.1 |  2.40
Output  | 0.0011289  | 0.0046215  | 0.004776   |   1.1 |  0.17
Modify  | 0.26044    | 0.26103    | 0.2644     |   0.1 |  9.78
Other   |            | 0.001958   |            |       |  0.07

Nlocal:    64.625 ave 72 max 51 min
Histogram: 1 1 1 1 0 5 2 6 3 4
Nghost:    2372.83 ave 2393 max 2353 min
Histogram: 1 0 1 5 5 6 3 0 1 2
Neighs:    25326.6 ave 28886 max 19335 min
Histogram: 1 1 1 1 0 3 6 7 1 3

Total # of neighbors = 607838
Ave neighs/atom = 391.901
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1550+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1550+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1550+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1550+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156972.990212195-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1550+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156972.990212195--156858.749682992-${mu}))
variable	prob1 equal	(30096.4744337948/((1550+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-156972.990212195--156858.749682992--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.570314347743988
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156972.990212195; E_system:-156858.749682992;prob1:3.63991891527833e+43; prob2:0.570314347743988

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1551
variable	E_system equal ${E_trial}
variable	E_system equal -156972.990212195
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -888.734382866528
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
76  15  -156972.990212195  -222523.266847749  -5022.76768973802  0  0  21832.0284544296  0  0  0  0  0  49745.0045460014  -202.346570641906  0  -801.642104497469
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
76  15  -156972.990212195  1412.62514919155  -155560.365063003  30096.4744337948  305.746105490535  -888.734382866528  2122.18579944388  -1825.63912091197  -2962.74982713149  30.5776  30.5776  32.1891  2.38374698505947
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
76  22  1551  -156972.990212195  -156972.990212195  30096.4744337948  30096.4744337948  -888.734382866528  0.759221494197845  2  15  15  3  3.63991891527833e+43  0.570314347743988  add pass  1551  16.2720401541  13.3862014354  4.40800764036 -0.00940946877346135  -0.00196557566557346  -0.008609741696341
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -156972.990212195, total atoms are 1551
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
76  22  1551  -156972.990212195  30096.4744337948  30096.4744337948  -888.734382866528  3.63991891527833e+43  0.570314347743988
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 77, 22
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.707382023334503
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.707382023334503)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.707382023334503, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:15; n_GCMC:15
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1551 atoms
  read_restart CPU = 0.000837088 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 9.86196910562 ${ry} ${rz} units box
create_atoms	2 single 9.86196910562 24.5617606992 ${rz} units box
create_atoms	2 single 9.86196910562 24.5617606992 22.8061622261 units box
Created 1 atoms
  create_atoms CPU = 6.19888e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1552
print 		'ncreated is ${ncreated}'
ncreated is 1552
group		created id ${ncreated}
group		created id 1552
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.838185489177704-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.838185489177704-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.838185489177704-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.385724723339081-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.385724723339081-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.385724723339081-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.973542392253876-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.973542392253876-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.973542392253876-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00702283102824041 ${rvy} ${rvz}
velocity	created set 0.00702283102824041 -0.00237306444060158 ${rvz}
velocity	created set 0.00702283102824041 -0.00237306444060158 0.00983368095891373
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 72.98 | 73.3 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17400            0   -157024.37    1413.8831   -155610.49    30096.474    305.82106   -681.94697    2223.0568    -1595.923   -2672.9747      30.5776      30.5776      32.1891    2.3841299   -222586.02 
   17600           50   -157070.53    1447.1676   -155623.36    30096.474    313.02047     3385.703    4326.7793    987.75722    4842.5725      30.5776      30.5776      32.1891    2.3841299   -222756.21 
Loop time of 2.68487 on 24 procs for 200 steps with 1552 atoms

Performance: 1.609 ns/day, 14.916 hours/ns, 74.492 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2667     | 2.3519     | 2.3891     |   1.9 | 87.60
Neigh   | 0.0096121  | 0.0098547  | 0.010037   |   0.1 |  0.37
Comm    | 0.017995   | 0.055138   | 0.14049    |  12.5 |  2.05
Output  | 0.001147   | 0.0046633  | 0.0048189  |   1.1 |  0.17
Modify  | 0.26093    | 0.26143    | 0.26498    |   0.1 |  9.74
Other   |            | 0.001905   |            |       |  0.07

Nlocal:    64.6667 ave 73 max 47 min
Histogram: 1 0 0 1 0 3 8 4 6 1
Nghost:    2372.17 ave 2397 max 2345 min
Histogram: 1 0 1 3 5 7 4 0 2 1
Neighs:    25358.2 ave 29397 max 17838 min
Histogram: 1 0 1 0 2 3 6 6 4 1

Total # of neighbors = 608598
Ave neighs/atom = 392.138
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1551+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1551+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1551+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1551+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157070.527375822-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1551+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157070.527375822--156972.990212195-${mu}))
variable	prob1 equal	(30096.4744337948/((1551+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157070.527375822--156972.990212195--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.753057599067688
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157070.527375822; E_system:-156972.990212195;prob1:2.46979784621904e+31; prob2:0.753057599067688

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1552
variable	E_system equal ${E_trial}
variable	E_system equal -157070.527375822
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3385.70300720659
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
77  16  -157070.527375822  -222756.212952884  -4986.01555612141  0  0  21831.4733227539  0  0  0  0  0  49911.9929882398  -217.354682404918  0  -854.410495405742
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
77  16  -157070.527375822  1447.16760468478  -155623.359771138  30096.4744337948  313.020465183629  3385.70300720659  4326.77931899855  987.757219355665  4842.57248326555  30.5776  30.5776  32.1891  2.38412994688034
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
77  23  1552  -157070.527375822  -157070.527375822  30096.4744337948  30096.4744337948  3385.70300720659  0.707382023334503  2  16  16  3  2.46979784621904e+31  0.753057599067688  add pass  1552  9.86196910562  24.5617606992  22.8061622261 0.00702283102824041  -0.00237306444060158  0.00983368095891373
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157070.527375822, total atoms are 1552
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
77  23  1552  -157070.527375822  30096.4744337948  30096.4744337948  3385.70300720659  2.46979784621904e+31  0.753057599067688
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 78, 23
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.349211931228638
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.349211931228638)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.349211931228638, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:16; n_GCMC:16
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.584997355937958*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.584997355937958*16)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1546
variable	lastatom equal ${n_system}
variable	lastatom equal 1552
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1552 atoms
  read_restart CPU = 0.000905037 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1552]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1552]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1552]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1552]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1552]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1552]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1552]
variable	tx equal ${lastx}
variable	tx equal 8.78434412074905
variable	ty equal ${lasty}
variable	ty equal 25.079891933102
variable	tz equal ${lastz}
variable	tz equal 23.654919581755
variable	tvx equal ${lastvx}
variable	tvx equal -0.0384057587566668
variable	tvy equal ${lastvy}
variable	tvy equal 0.012393991288026
variable	tvz equal ${lastvz}
variable	tvz equal -0.00297719996586917
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1546]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1546]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1546]
variable	dx equal (${tx}-${delx})
variable	dx equal (8.78434412074905-${delx})
variable	dx equal (8.78434412074905-20.3313269672841)
variable	dy equal (${ty}-${dely})
variable	dy equal (25.079891933102-${dely})
variable	dy equal (25.079891933102-28.6670410978567)
variable	dz equal (${tz}-${delz})
variable	dz equal (23.654919581755-${delz})
variable	dz equal (23.654919581755-1.46844305678808)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1546 20.3313269672841 28.6670410978567 1.46844305678808; Last coords: 8.78434412074905 25.079891933102 23.654919581755
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0384057587566668 0.012393991288026 -0.00297719996586917 Last type: 2
group		del id ${lastatom}
group		del id 1552
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1551
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1546
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -11.546982846535 ${dy} ${dz}
displace_atoms	delDisp move -11.546982846535 -3.5871491647547 ${dz}
displace_atoms	delDisp move -11.546982846535 -3.5871491647547 22.1864765249669
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1546 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1546 vx -0.0384057587566668 vy ${tvy} vz ${tvz}
set		atom 1546 vx -0.0384057587566668 vy 0.012393991288026 vz ${tvz}
set		atom 1546 vx -0.0384057587566668 vy 0.012393991288026 vz -0.00297719996586917
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1546 type ${ttyp}
set		atom 1546 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.78 | 73.05 | 73.49 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17600            0   -156996.83    1446.6556   -155550.18    30096.474     313.1116    3352.1864    4295.9843    941.97725    4818.5978      30.5776      30.5776      32.1891     2.383747   -222706.12 
   17800           50   -156952.72    1381.2837   -155571.44    30096.474    298.96261    4857.7733    8890.5855    2101.3146    3581.4197      30.5776      30.5776      32.1891     2.383747   -222549.69 
Loop time of 2.69154 on 24 procs for 200 steps with 1551 atoms

Performance: 1.605 ns/day, 14.953 hours/ns, 74.307 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2722     | 2.3462     | 2.3895     |   1.7 | 87.17
Neigh   | 0.0096841  | 0.0098875  | 0.010092   |   0.1 |  0.37
Comm    | 0.019271   | 0.062528   | 0.1369     |  10.6 |  2.32
Output  | 0.0011492  | 0.0046435  | 0.0047979  |   1.1 |  0.17
Modify  | 0.26589    | 0.26633    | 0.26991    |   0.1 |  9.89
Other   |            | 0.001929   |            |       |  0.07

Nlocal:    64.625 ave 71 max 49 min
Histogram: 1 0 1 1 1 0 5 5 5 5
Nghost:    2372.33 ave 2405 max 2349 min
Histogram: 1 3 1 8 4 3 1 2 0 1
Neighs:    25330.7 ave 28611 max 18525 min
Histogram: 1 0 1 2 0 1 6 4 7 2

Total # of neighbors = 607936
Ave neighs/atom = 391.964
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156952.721990002-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156952.721990002--157070.527375822+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156952.721990002--157070.527375822+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.121494293212891
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156952.721990002; E_system:-157070.527375822;prob1:6.95414636378915e-47; prob2:0.121494293212891

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
78  23  1552  -157070.527375822  -156952.721990002  30096.4744337948  30096.4744337948  3385.70300720659  0.349211931228638  1  16  16  2  6.95414636378915e-47  0.121494293212891  delete fail  1546
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 79, 23
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.580193996429443
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.580193996429443)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.580193996429443, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:16; n_GCMC:16
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.635254919528961*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.635254919528961*16)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1547
variable	lastatom equal ${n_system}
variable	lastatom equal 1552
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1552 atoms
  read_restart CPU = 0.000723124 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1552]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1552]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1552]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1552]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1552]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1552]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1552]
variable	tx equal ${lastx}
variable	tx equal 8.78434412074905
variable	ty equal ${lasty}
variable	ty equal 25.079891933102
variable	tz equal ${lastz}
variable	tz equal 23.654919581755
variable	tvx equal ${lastvx}
variable	tvx equal -0.0384057587566668
variable	tvy equal ${lastvy}
variable	tvy equal 0.012393991288026
variable	tvz equal ${lastvz}
variable	tvz equal -0.00297719996586917
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1547]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1547]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1547]
variable	dx equal (${tx}-${delx})
variable	dx equal (8.78434412074905-${delx})
variable	dx equal (8.78434412074905-4.87297313138887)
variable	dy equal (${ty}-${dely})
variable	dy equal (25.079891933102-${dely})
variable	dy equal (25.079891933102-16.1838976082365)
variable	dz equal (${tz}-${delz})
variable	dz equal (23.654919581755-${delz})
variable	dz equal (23.654919581755-2.65424951721512)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1547 4.87297313138887 16.1838976082365 2.65424951721512; Last coords: 8.78434412074905 25.079891933102 23.654919581755
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0384057587566668 0.012393991288026 -0.00297719996586917 Last type: 2
group		del id ${lastatom}
group		del id 1552
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1551
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1547
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 3.91137098936018 ${dy} ${dz}
displace_atoms	delDisp move 3.91137098936018 8.8959943248655 ${dz}
displace_atoms	delDisp move 3.91137098936018 8.8959943248655 21.0006700645399
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx -0.0384057587566668 vy ${tvy} vz ${tvz}
set		atom 1547 vx -0.0384057587566668 vy 0.012393991288026 vz ${tvz}
set		atom 1547 vx -0.0384057587566668 vy 0.012393991288026 vz -0.00297719996586917
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1547 type ${ttyp}
set		atom 1547 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.76 | 73.07 | 73.47 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17600            0   -156988.91    1445.1001   -155543.81    30096.474    312.77493    3333.5848    4261.7649    950.78725    4788.2023      30.5776      30.5776      32.1891     2.383747   -222706.76 
   17800           50   -156948.16    1383.2588    -155564.9    30096.474     299.3901     4574.901    8642.4039    1839.9232    3242.3758      30.5776      30.5776      32.1891     2.383747   -222522.54 
Loop time of 2.72051 on 24 procs for 200 steps with 1551 atoms

Performance: 1.588 ns/day, 15.114 hours/ns, 73.516 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2786     | 2.3562     | 2.4207     |   2.0 | 86.61
Neigh   | 0.0096791  | 0.0098832  | 0.010086   |   0.1 |  0.36
Comm    | 0.018131   | 0.082457   | 0.16032    |  10.8 |  3.03
Output  | 0.001184   | 0.0046294  | 0.004782   |   1.1 |  0.17
Modify  | 0.2648     | 0.26533    | 0.26878    |   0.1 |  9.75
Other   |            | 0.001986   |            |       |  0.07

Nlocal:    64.625 ave 71 max 49 min
Histogram: 1 0 1 1 1 0 5 6 4 5
Nghost:    2372.83 ave 2404 max 2350 min
Histogram: 1 1 3 9 4 1 2 2 0 1
Neighs:    25330.7 ave 28601 max 18539 min
Histogram: 1 0 1 2 0 1 6 4 7 2

Total # of neighbors = 607936
Ave neighs/atom = 391.964
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156948.155595115-${E_system}+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156948.155595115--157070.527375822+${mu}))
variable	prob1 equal	(1552*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-156948.155595115--157070.527375822+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.52470737695694
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-156948.155595115; E_system:-157070.527375822;prob1:3.27864119129047e-50; prob2:0.52470737695694

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
79  23  1552  -157070.527375822  -156948.155595115  30096.4744337948  30096.4744337948  3385.70300720659  0.580193996429443  1  16  16  2  3.27864119129047e-50  0.52470737695694  delete fail  1547
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 80, 23
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.151978313922882
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.151978313922882)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.151978313922882, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:16; n_GCMC:16
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.964020371437073*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.964020371437073*16)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1552
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1552 atoms
  read_restart CPU = 0.000735044 secs
group		disp id ${nMCmoved}
group		disp id 1552
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1552 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1552 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1552 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 0.641411197238 ${ry} ${rz} units box
displace_atoms	disp move 0.641411197238 -8.79990316511 ${rz} units box
displace_atoms	disp move 0.641411197238 -8.79990316511 -22.0277121419 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.82 | 73.11 | 73.53 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17600            0   -157048.35    1447.1676   -155601.18    30096.474    313.02047    3690.4588    4559.2141    1327.4776    5184.6849      30.5776      30.5776      32.1891    2.3841299   -222785.42 
   17800           50   -157007.53    1383.7611   -155623.77    30096.474    299.30572    5219.3098    8882.5783    2766.9904    4008.3608      30.5776      30.5776      32.1891    2.3841299   -222610.81 
Loop time of 2.68821 on 24 procs for 200 steps with 1552 atoms

Performance: 1.607 ns/day, 14.935 hours/ns, 74.399 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.279      | 2.3495     | 2.3912     |   1.7 | 87.40
Neigh   | 0.0096488  | 0.009884   | 0.010107   |   0.1 |  0.37
Comm    | 0.017908   | 0.0596     | 0.13059    |  10.4 |  2.22
Output  | 0.0011461  | 0.004628   | 0.004781   |   1.1 |  0.17
Modify  | 0.26237    | 0.26277    | 0.2664     |   0.2 |  9.77
Other   |            | 0.001812   |            |       |  0.07

Nlocal:    64.6667 ave 71 max 49 min
Histogram: 1 0 1 1 1 0 5 5 5 5
Nghost:    2374.29 ave 2406 max 2351 min
Histogram: 1 1 3 8 5 1 2 2 0 1
Neighs:    25362.9 ave 28588 max 18541 min
Histogram: 1 0 1 2 0 1 6 3 8 2

Total # of neighbors = 608709
Ave neighs/atom = 392.209
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157007.532197281-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157007.532197281--157070.527375822))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.661942780017853
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157007.532197281; E_system:-157070.527375822;prob1:1.28517039821982e-46; prob2:0.661942780017853

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
80  23  1552  -157070.527375822  -157007.532197281  30096.4744337948  30096.4744337948  3385.70300720659  0.151978313922882  0  16  16  1  1.28517039821982e-46  0.661942780017853  displace fail  1552  0.641411197238  -8.79990316511  -22.0277121419
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 80
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1552 atoms
  read_restart CPU = 0.000887871 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.81 | 73.11 | 73.52 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17600            0   -157070.53    1447.1676   -155623.36    30096.474    313.02047    3385.7033    4326.7795     987.7576    4842.5727      30.5776      30.5776      32.1891    2.3841299   -222756.21 
   17800           50   -157026.69    1382.2341   -155644.46    30096.474    298.97544    4652.3995    8581.1423    1887.5878    3488.4686      30.5776      30.5776      32.1891    2.3841299   -222602.61 
Loop time of 2.73298 on 24 procs for 200 steps with 1552 atoms

Performance: 1.581 ns/day, 15.183 hours/ns, 73.180 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2776     | 2.3675     | 2.4309     |   2.3 | 86.63
Neigh   | 0.0096829  | 0.0098941  | 0.01009    |   0.1 |  0.36
Comm    | 0.018118   | 0.081479   | 0.17146    |  12.3 |  2.98
Output  | 0.0011551  | 0.0046659  | 0.0048208  |   1.1 |  0.17
Modify  | 0.26693    | 0.26746    | 0.27104    |   0.1 |  9.79
Other   |            | 0.002014   |            |       |  0.07

Nlocal:    64.6667 ave 71 max 49 min
Histogram: 1 0 1 1 1 0 5 5 5 5
Nghost:    2374.29 ave 2406 max 2351 min
Histogram: 1 1 3 8 5 1 2 2 0 1
Neighs:    25364 ave 28636 max 18540 min
Histogram: 1 0 1 2 0 1 6 4 7 2

Total # of neighbors = 608735
Ave neighs/atom = 392.226
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1552
variable	E_system equal ${E_trial}
variable	E_system equal -157026.694359916
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 4652.39953595309
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
80  16  -157026.694359916  -222602.610545752  -4935.76983303049  0  0  21745.4891985889  0  0  0  0  0  49838.8642770737  -215.908635328051  0  -856.758821467502
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
80  16  -157026.694359916  1382.2341264182  -155644.460233497  30096.4744337948  298.975438534886  4652.39953595309  8581.14225197528  1887.58778323541  3488.46857264858  30.5776  30.5776  32.1891  2.38412994688034
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
80  23  1552  -157026.694359916  -157026.694359916  30096.4744337948  30096.4744337948  4652.39953595309  0.151978313922882  0  16  16  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157026.694359916, total atoms are 1552
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
80  23  1552  -157026.694359916  30096.4744337948  30096.4744337948  4652.39953595309  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 81, 23
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.726489067077637
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.726489067077637)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.726489067077637, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:16; n_GCMC:16
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1552 atoms
  read_restart CPU = 0.00070715 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 18.5430280109 ${ry} ${rz} units box
create_atoms	2 single 18.5430280109 21.0203438445 ${rz} units box
create_atoms	2 single 18.5430280109 21.0203438445 17.2232431491 units box
Created 1 atoms
  create_atoms CPU = 4.79221e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1553
print 		'ncreated is ${ncreated}'
ncreated is 1553
group		created id ${ncreated}
group		created id 1553
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.110298573970795-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.110298573970795-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.110298573970795-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.942219376564026-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.942219376564026-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.942219376564026-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.257346570491791-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.257346570491791-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.257346570491791-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00809262181272759 ${rvy} ${rvz}
velocity	created set -0.00809262181272759 0.0091832206242033 ${rvz}
velocity	created set -0.00809262181272759 0.0091832206242033 -0.00503899217557424
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.05 | 73.46 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   17800            0   -157068.61    1383.6875   -155684.92    30096.474    299.09695    4907.4795     8743.067    2213.3288    3766.0425      30.5776      30.5776      32.1891    2.3845129   -222671.82 
   18000           50   -157110.97    1401.4507   -155709.52    30096.474    302.93664     3939.671    7810.3142     3076.362    932.33689      30.5776      30.5776      32.1891    2.3845129   -222952.21 
Loop time of 2.68101 on 24 procs for 200 steps with 1553 atoms

Performance: 1.611 ns/day, 14.894 hours/ns, 74.599 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2742     | 2.3478     | 2.3857     |   1.8 | 87.57
Neigh   | 0.0096302  | 0.0098365  | 0.01       |   0.1 |  0.37
Comm    | 0.018087   | 0.055826   | 0.12988    |  11.6 |  2.08
Output  | 0.001133   | 0.0045936  | 0.0047469  |   1.1 |  0.17
Modify  | 0.26061    | 0.26108    | 0.26452    |   0.1 |  9.74
Other   |            | 0.001867   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 2 1 1 4 9 5 1
Nghost:    2367.42 ave 2395 max 2346 min
Histogram: 1 2 3 7 3 3 1 1 2 1
Neighs:    25401.5 ave 29080 max 18524 min
Histogram: 1 0 2 0 1 2 5 9 3 1

Total # of neighbors = 609637
Ave neighs/atom = 392.554
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1552+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1552+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1552+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1552+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157110.973257144-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1552+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157110.973257144--157026.694359916-${mu}))
variable	prob1 equal	(30096.4744337948/((1552+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157110.973257144--157026.694359916--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0227068662643433
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157110.973257144; E_system:-157026.694359916;prob1:5.4191874907757e+21; prob2:0.0227068662643433

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157110.973257144
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3939.67100147669
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
81  17  -157110.973257144  -222952.205085928  -4941.22816659082  0  0  21919.72365082  0  0  0  0  0  50003.1749834447  -230.118563638888  0  -910.320075250985
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
81  17  -157110.973257144  1401.45070275517  -155709.522554389  30096.4744337948  302.936641946301  3939.67100147669  7810.31415142535  3076.36196186654  932.336891138195  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
81  24  1553  -157110.973257144  -157110.973257144  30096.4744337948  30096.4744337948  3939.67100147669  0.726489067077637  2  17  17  3  5.4191874907757e+21  0.0227068662643433  add pass  1553  18.5430280109  21.0203438445  17.2232431491 -0.00809262181272759  0.0091832206242033  -0.00503899217557424
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157110.973257144, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
81  24  1553  -157110.973257144  30096.4744337948  30096.4744337948  3939.67100147669  5.4191874907757e+21  0.0227068662643433
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 82, 24
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0858505964279175
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0858505964279175)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0858505964279175, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.00995290279388428*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.00995290279388428*17)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1537
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000841141 secs
group		disp id ${nMCmoved}
group		disp id 1537
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1537 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 17.8845501077 ${ry} ${rz} units box
displace_atoms	disp move 17.8845501077 -13.7937152172 ${rz} units box
displace_atoms	disp move 17.8845501077 -13.7937152172 14.8744129133 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.7 | 72.99 | 73.36 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18000            0    -157087.2    1401.4507   -155685.75    30096.474    302.93664    4168.2605    8476.8491    3068.0974    959.83503      30.5776      30.5776      32.1891    2.3845129   -222974.05 
   18200           50   -157097.01     1387.115    -155709.9    30096.474    299.83785    2022.8375    6169.9565    103.28379   -204.72774      30.5776      30.5776      32.1891    2.3845129   -222669.89 
Loop time of 2.67009 on 24 procs for 200 steps with 1553 atoms

Performance: 1.618 ns/day, 14.834 hours/ns, 74.904 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2976     | 2.3487     | 2.3859     |   1.5 | 87.96
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017629   | 0.05476    | 0.10616    |  10.1 |  2.05
Output  | 0.0011251  | 0.0045713  | 0.0047271  |   1.1 |  0.17
Modify  | 0.25963    | 0.26012    | 0.2637     |   0.2 |  9.74
Other   |            | 0.001903   |            |       |  0.07

Nlocal:    64.7083 ave 71 max 49 min
Histogram: 1 0 0 1 1 3 3 4 7 4
Nghost:    2370.58 ave 2399 max 2350 min
Histogram: 1 3 5 2 6 3 2 1 0 1
Neighs:    25394.9 ave 28671 max 18549 min
Histogram: 1 0 1 1 0 2 5 5 8 1

Total # of neighbors = 609478
Ave neighs/atom = 392.452
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157097.014895062-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157097.014895062--157110.973257144))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.592863321304321
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157097.014895062; E_system:-157110.973257144;prob1:6.78489828976399e-11; prob2:0.592863321304321

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
82  24  1553  -157110.973257144  -157097.014895062  30096.4744337948  30096.4744337948  3939.67100147669  0.0858505964279175  0  17  17  1  6.78489828976399e-11  0.592863321304321  displace fail  1537  17.8845501077  -13.7937152172  14.8744129133
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 83, 24
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.648625433444977
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.648625433444977)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.648625433444977, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.73584645986557*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.73584645986557*17)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1549
variable	lastatom equal ${n_system}
variable	lastatom equal 1553
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000835896 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1553]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1553]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1553]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1553]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1553]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1553]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1553]
variable	tx equal ${lastx}
variable	tx equal 17.6343414207011
variable	ty equal ${lasty}
variable	ty equal 19.9294805183881
variable	tz equal ${lastz}
variable	tz equal 17.6597943343125
variable	tvx equal ${lastvx}
variable	tvx equal 0.014396531801586
variable	tvy equal ${lastvy}
variable	tvy equal 0.00470070277076197
variable	tvz equal ${lastvz}
variable	tvz equal 0.0213296560521274
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1549]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1549]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1549]
variable	dx equal (${tx}-${delx})
variable	dx equal (17.6343414207011-${delx})
variable	dx equal (17.6343414207011-0.350073332078543)
variable	dy equal (${ty}-${dely})
variable	dy equal (19.9294805183881-${dely})
variable	dy equal (19.9294805183881-2.47215994521635)
variable	dz equal (${tz}-${delz})
variable	dz equal (17.6597943343125-${delz})
variable	dz equal (17.6597943343125-18.886232650125)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1549 0.350073332078543 2.47215994521635 18.886232650125; Last coords: 17.6343414207011 19.9294805183881 17.6597943343125
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.014396531801586 0.00470070277076197 0.0213296560521274 Last type: 2
group		del id ${lastatom}
group		del id 1553
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1552
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1549
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 17.2842680886226 ${dy} ${dz}
displace_atoms	delDisp move 17.2842680886226 17.4573205731717 ${dz}
displace_atoms	delDisp move 17.2842680886226 17.4573205731717 -1.2264383158125
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1549 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1549 vx 0.014396531801586 vy ${tvy} vz ${tvz}
set		atom 1549 vx 0.014396531801586 vy 0.00470070277076197 vz ${tvz}
set		atom 1549 vx 0.014396531801586 vy 0.00470070277076197 vz 0.0213296560521274
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1549 type ${ttyp}
set		atom 1549 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 72.96 | 73.34 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18000            0   -157032.31    1398.8677   -155633.44    30096.474    302.57325    3925.3754    7833.2316    3045.3206    897.57391      30.5776      30.5776      32.1891    2.3841299   -222927.91 
   18200           50    -157041.5    1385.1882   -155656.31    30096.474    299.61441    2787.9642    7471.1023    1031.9701   -139.17966      30.5776      30.5776      32.1891    2.3841299   -222635.06 
Loop time of 2.6878 on 24 procs for 200 steps with 1552 atoms

Performance: 1.607 ns/day, 14.932 hours/ns, 74.410 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2746     | 2.3503     | 2.3995     |   1.8 | 87.44
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017859   | 0.067199   | 0.1431     |  10.7 |  2.50
Output  | 0.001137   | 0.004582   | 0.004734   |   1.1 |  0.17
Modify  | 0.26328    | 0.26383    | 0.26745    |   0.2 |  9.82
Other   |            | 0.001921   |            |       |  0.07

Nlocal:    64.6667 ave 71 max 49 min
Histogram: 1 0 0 1 1 3 3 4 7 4
Nghost:    2369.46 ave 2399 max 2349 min
Histogram: 1 3 5 3 4 4 1 2 0 1
Neighs:    25366.6 ave 28642 max 18510 min
Histogram: 1 0 1 1 0 3 4 7 6 1

Total # of neighbors = 608799
Ave neighs/atom = 392.267
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157041.500295507-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157041.500295507--157110.973257144+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157041.500295507--157110.973257144+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.898987054824829
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157041.500295507; E_system:-157110.973257144;prob1:1.12711187148661e-11; prob2:0.898987054824829

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
83  24  1553  -157110.973257144  -157041.500295507  30096.4744337948  30096.4744337948  3939.67100147669  0.648625433444977  1  17  17  2  1.12711187148661e-11  0.898987054824829  delete fail  1549
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 84, 24
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.089707612991333
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.089707612991333)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.089707612991333, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.491540431976318*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.491540431976318*17)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1545
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000696898 secs
group		disp id ${nMCmoved}
group		disp id 1545
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 13.8037681394 ${ry} ${rz} units box
displace_atoms	disp move 13.8037681394 1.20688057987 ${rz} units box
displace_atoms	disp move 13.8037681394 1.20688057987 4.4196435374 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.68 | 72.97 | 73.35 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18000            0   -157084.53    1401.4507   -155683.08    30096.474    302.93664    4155.3331    8129.8725    3198.8177    1137.3092      30.5776      30.5776      32.1891    2.3845129   -222956.68 
   18200           50   -157103.29    1394.9393   -155708.35    30096.474    301.52914    2689.8197    7411.1529    628.76933    29.537034      30.5776      30.5776      32.1891    2.3845129   -222644.36 
Loop time of 2.67264 on 24 procs for 200 steps with 1553 atoms

Performance: 1.616 ns/day, 14.848 hours/ns, 74.832 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.274      | 2.344      | 2.3777     |   1.4 | 87.70
Neigh   | 0.009644   | 0.0098474  | 0.010052   |   0.1 |  0.37
Comm    | 0.018067   | 0.051691   | 0.12171    |   9.5 |  1.93
Output  | 0.0011311  | 0.0045782  | 0.00473    |   1.1 |  0.17
Modify  | 0.26       | 0.26069    | 0.26422    |   0.2 |  9.75
Other   |            | 0.001834   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 1 2 2 6 5 3 4
Nghost:    2366.42 ave 2398 max 2336 min
Histogram: 1 0 3 4 4 7 2 1 0 2
Neighs:    25396.6 ave 29016 max 18529 min
Histogram: 1 0 0 2 1 2 8 5 2 3

Total # of neighbors = 609518
Ave neighs/atom = 392.478
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157103.286409372-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157103.286409372--157110.973257144))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.371436536312103
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157103.286409372; E_system:-157110.973257144;prob1:2.51331608082363e-06; prob2:0.371436536312103

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
84  24  1553  -157110.973257144  -157103.286409372  30096.4744337948  30096.4744337948  3939.67100147669  0.089707612991333  0  17  17  1  2.51331608082363e-06  0.371436536312103  displace fail  1545  13.8037681394  1.20688057987  4.4196435374
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 85, 24
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.279302060604095
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.279302060604095)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.279302060604095, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.954653918743134*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.954653918743134*17)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1553
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000811815 secs
group		disp id ${nMCmoved}
group		disp id 1553
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1553 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1553 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1553 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 7.88066854593 ${ry} ${rz} units box
displace_atoms	disp move 7.88066854593 -11.6507705344 ${rz} units box
displace_atoms	disp move 7.88066854593 -11.6507705344 -4.65941263988 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.77 | 73 | 73.34 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18000            0    -157117.8    1401.4507   -155716.35    30096.474    302.93664    4168.6537    7619.9538      3414.85    1471.1572      30.5776      30.5776      32.1891    2.3845129   -222896.28 
   18200           50    -157122.4    1383.4669   -155738.93    30096.474    299.04927    2333.3665    6504.1427    715.71614   -219.75934      30.5776      30.5776      32.1891    2.3845129   -222595.08 
Loop time of 2.66304 on 24 procs for 200 steps with 1553 atoms

Performance: 1.622 ns/day, 14.795 hours/ns, 75.102 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2787     | 2.3416     | 2.3779     |   1.5 | 87.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01828    | 0.054196   | 0.11719    |   9.8 |  2.04
Output  | 0.0011489  | 0.0045921  | 0.004745   |   1.1 |  0.17
Modify  | 0.25998    | 0.26065    | 0.26372    |   0.1 |  9.79
Other   |            | 0.001965   |            |       |  0.07

Nlocal:    64.7083 ave 71 max 50 min
Histogram: 1 0 1 1 1 2 3 4 7 4
Nghost:    2371.08 ave 2398 max 2353 min
Histogram: 1 2 6 3 5 3 1 2 0 1
Neighs:    25393.3 ave 28650 max 18911 min
Histogram: 1 0 1 1 1 4 4 5 6 1

Total # of neighbors = 609439
Ave neighs/atom = 392.427
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157122.400381869-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157122.400381869--157110.973257144))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.557522475719452
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157122.400381869; E_system:-157110.973257144;prob1:211100055.273824; prob2:0.557522475719452

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157122.400381869
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2333.36650047955
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
85  17  -157122.400381869  -222595.075982386  -4973.25180241872  0  0  21659.9390093901  0  0  0  0  0  49921.317015405  -223.228832563997  0  -912.099789296108
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
85  17  -157122.400381869  1383.4668827425  -155738.933499127  30096.4744337948  299.049271499881  2333.36650047955  6504.14270616495  715.716138902432  -219.759343628733  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
85  25  1553  -157122.400381869  -157122.400381869  30096.4744337948  30096.4744337948  2333.36650047955  0.279302060604095  0  17  17  1  211100055.273824  0.557522475719452  displace pass  1553  7.88066854593  -11.6507705344  -4.65941263988
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157122.400381869, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
85  25  1553  -157122.400381869  30096.4744337948  30096.4744337948  2333.36650047955  211100055.273824  0.557522475719452
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 85
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000852108 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 73.01 | 73.45 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18200            0    -157122.4    1383.4669   -155738.93    30096.474    299.04927    2333.3662    6504.1425    715.71604   -219.76007      30.5776      30.5776      32.1891    2.3845129   -222595.08 
   18400           50   -157146.79    1397.6882    -155749.1    30096.474    302.12335    3160.3191    6052.3355   -388.09643    3816.7183      30.5776      30.5776      32.1891    2.3845129   -222888.05 
Loop time of 2.70012 on 24 procs for 200 steps with 1553 atoms

Performance: 1.600 ns/day, 15.001 hours/ns, 74.071 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2804     | 2.3543     | 2.4099     |   1.9 | 87.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018132   | 0.073724   | 0.14753    |  10.9 |  2.73
Output  | 0.0011399  | 0.0046079  | 0.004765   |   1.1 |  0.17
Modify  | 0.26497    | 0.26555    | 0.26901    |   0.1 |  9.83
Other   |            | 0.001966   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 1 1 3 7 6 2 3
Nghost:    2371.25 ave 2399 max 2340 min
Histogram: 1 0 1 5 1 9 4 0 2 1
Neighs:    25394.5 ave 29014 max 18574 min
Histogram: 1 0 0 1 2 3 7 6 1 3

Total # of neighbors = 609469
Ave neighs/atom = 392.446
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157146.786617797
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3160.31912674213
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
85  17  -157146.786617797  -222888.045978939  -4932.89137772372  0  0  21878.315762736  0  0  0  0  0  49933.063145967  -226.352392821039  0  -910.875777015743
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
85  17  -157146.786617797  1397.68824478355  -155749.098373013  30096.4744337948  302.123351560028  3160.31912674213  6052.3355435874  -388.096426549628  3816.71826318862  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
85  25  1553  -157146.786617797  -157146.786617797  30096.4744337948  30096.4744337948  3160.31912674213  0.279302060604095  0  17  17  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157146.786617797, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
85  25  1553  -157146.786617797  30096.4744337948  30096.4744337948  3160.31912674213  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 86, 25
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.363671839237213
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.363671839237213)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.363671839237213, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.783889889717102*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.783889889717102*17)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1550
variable	lastatom equal ${n_system}
variable	lastatom equal 1553
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000733137 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1553]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1553]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1553]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1553]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1553]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1553]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1553]
variable	tx equal ${lastx}
variable	tx equal 25.2305832609838
variable	ty equal ${lasty}
variable	ty equal 9.28500624001381
variable	tz equal ${lastz}
variable	tz equal 14.8577243105181
variable	tvx equal ${lastvx}
variable	tvx equal 0.00640584083379066
variable	tvy equal ${lastvy}
variable	tvy equal 0.00639931274831772
variable	tvz equal ${lastvz}
variable	tvz equal -0.00326929506701467
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1550]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1550]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1550]
variable	dx equal (${tx}-${delx})
variable	dx equal (25.2305832609838-${delx})
variable	dx equal (25.2305832609838-16.846838546193)
variable	dy equal (${ty}-${dely})
variable	dy equal (9.28500624001381-${dely})
variable	dy equal (9.28500624001381-22.5572220268217)
variable	dz equal (${tz}-${delz})
variable	dz equal (14.8577243105181-${delz})
variable	dz equal (14.8577243105181-27.3603910581605)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1550 16.846838546193 22.5572220268217 27.3603910581605; Last coords: 25.2305832609838 9.28500624001381 14.8577243105181
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.00640584083379066 0.00639931274831772 -0.00326929506701467 Last type: 2
group		del id ${lastatom}
group		del id 1553
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1552
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1550
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 8.3837447147908 ${dy} ${dz}
displace_atoms	delDisp move 8.3837447147908 -13.2722157868079 ${dz}
displace_atoms	delDisp move 8.3837447147908 -13.2722157868079 -12.5026667476424
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1550 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1550 vx 0.00640584083379066 vy ${tvy} vz ${tvz}
set		atom 1550 vx 0.00640584083379066 vy 0.00639931274831772 vz ${tvz}
set		atom 1550 vx 0.00640584083379066 vy 0.00639931274831772 vz -0.00326929506701467
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1550 type ${ttyp}
set		atom 1550 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.76 | 73.07 | 73.5 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18400            0   -157072.07    1395.7624   -155676.31    30096.474    301.90159    3093.1981    6052.8805   -471.27792    3697.9917      30.5776      30.5776      32.1891    2.3841299   -222832.47 
   18600           50    -157037.5    1359.0403   -155678.46    30096.474    293.95864    2310.4377    4523.8423    521.12522    1886.3455      30.5776      30.5776      32.1891    2.3841299   -222612.81 
Loop time of 2.71465 on 24 procs for 200 steps with 1552 atoms

Performance: 1.591 ns/day, 15.081 hours/ns, 73.674 timesteps/s
98.4% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2791     | 2.3607     | 2.4244     |   2.0 | 86.96
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.019287   | 0.082254   | 0.16363    |  10.5 |  3.03
Output  | 0.0012059  | 0.0046764  | 0.004833   |   1.1 |  0.17
Modify  | 0.26395    | 0.26494    | 0.26768    |   0.1 |  9.76
Other   |            | 0.002105   |            |       |  0.08

Nlocal:    64.6667 ave 72 max 49 min
Histogram: 1 0 0 1 2 2 6 6 4 2
Nghost:    2374.08 ave 2395 max 2350 min
Histogram: 1 0 2 1 6 7 2 2 1 2
Neighs:    25363 ave 28935 max 18547 min
Histogram: 1 0 0 2 1 1 7 8 3 1

Total # of neighbors = 608712
Ave neighs/atom = 392.211
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157037.504475758-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157037.504475758--157146.786617797+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157037.504475758--157146.786617797+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.73624861240387
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157037.504475758; E_system:-157146.786617797;prob1:1.12610362878337e-40; prob2:0.73624861240387

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
86  25  1553  -157146.786617797  -157037.504475758  30096.4744337948  30096.4744337948  3160.31912674213  0.363671839237213  1  17  17  2  1.12610362878337e-40  0.73624861240387  delete fail  1550
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 87, 25
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.934695065021515
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.934695065021515)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.934695065021515, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000721931 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 7.67543644433 ${ry} ${rz} units box
create_atoms	2 single 7.67543644433 15.7405434998 ${rz} units box
create_atoms	2 single 7.67543644433 15.7405434998 23.8390226346 units box
Created 1 atoms
  create_atoms CPU = 4.88758e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.210205137729645-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.210205137729645-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.210205137729645-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.609153151512146-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.609153151512146-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.609153151512146-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.470409691333771-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.470409691333771-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.470409691333771-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00601794108767184 ${rvy} ${rvz}
velocity	created set -0.00601794108767184 0.00226669731197995 ${rvz}
velocity	created set -0.00601794108767184 0.00226669731197995 -0.000614478576066902
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.8 | 73.14 | 73.6 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18400            0   -157217.19    1398.0344   -155819.16    30096.474    302.00358    3288.3065    6177.7667   -362.74848    4049.9012      30.5776      30.5776      32.1891    2.3848959   -222942.99 
   18600           50   -157191.88    1369.9923   -155821.89    30096.474    295.94592    2334.5128    4650.0771    193.12769    2160.3335      30.5776      30.5776      32.1891    2.3848959   -222723.58 
Loop time of 3.18856 on 24 procs for 200 steps with 1554 atoms

Performance: 1.355 ns/day, 17.714 hours/ns, 62.724 timesteps/s
94.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3115     | 2.3993     | 2.8836     |   7.3 | 75.25
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.019164   | 0.50305    | 0.59117    |  16.0 | 15.78
Output  | 0.001189   | 0.0046256  | 0.004781   |   1.1 |  0.15
Modify  | 0.27873    | 0.2794     | 0.28244    |   0.1 |  8.76
Other   |            | 0.002182   |            |       |  0.07

Nlocal:    64.75 ave 72 max 49 min
Histogram: 1 0 0 1 2 1 7 5 5 2
Nghost:    2376.83 ave 2399 max 2352 min
Histogram: 1 0 2 2 5 8 1 2 1 2
Neighs:    25429.6 ave 29019 max 18547 min
Histogram: 1 0 0 2 1 1 7 8 3 1

Total # of neighbors = 610310
Ave neighs/atom = 392.735
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157191.881366982-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157191.881366982--157146.786617797-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157191.881366982--157146.786617797--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.168638288974762
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157191.881366982; E_system:-157146.786617797;prob1:1.54380561688399e-07; prob2:0.168638288974762

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
87  25  1553  -157146.786617797  -157191.881366982  30096.4744337948  30096.4744337948  3160.31912674213  0.934695065021515  2  17  17  3  1.54380561688399e-07  0.168638288974762  add fail  1554  7.67543644433  15.7405434998  23.8390226346 -0.00601794108767184  0.00226669731197995  -0.000614478576066902
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 88, 25
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.23936003446579
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.23936003446579)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.23936003446579, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.287785649299622*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.287785649299622*17)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000870943 secs
group		disp id ${nMCmoved}
group		disp id 1541
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -19.1988260591 ${ry} ${rz} units box
displace_atoms	disp move -19.1988260591 17.4055199371 ${rz} units box
displace_atoms	disp move -19.1988260591 17.4055199371 13.2683721058 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.71 | 73.09 | 73.55 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18400            0   -157120.82    1397.6882   -155723.14    30096.474    302.12335    3655.2818    6890.3694   -129.24528    4204.7212      30.5776      30.5776      32.1891    2.3845129   -222895.41 
   18600           50    -157088.2     1362.188   -155726.01    30096.474    294.44964    2787.8245    5026.8118      834.227    2502.4347      30.5776      30.5776      32.1891    2.3845129   -222624.08 
Loop time of 2.68802 on 24 procs for 200 steps with 1553 atoms

Performance: 1.607 ns/day, 14.933 hours/ns, 74.404 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2889     | 2.3608     | 2.4025     |   1.9 | 87.83
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018235   | 0.059643   | 0.13148    |  11.9 |  2.22
Output  | 0.0011299  | 0.0045821  | 0.004735   |   1.1 |  0.17
Modify  | 0.26053    | 0.26103    | 0.2642     |   0.1 |  9.71
Other   |            | 0.001959   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 1 2 1 7 6 4 2
Nghost:    2374.71 ave 2397 max 2348 min
Histogram: 1 0 2 1 4 8 2 3 1 2
Neighs:    25395.5 ave 29008 max 18528 min
Histogram: 1 0 0 2 1 1 7 9 2 1

Total # of neighbors = 609492
Ave neighs/atom = 392.461
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157088.201797025-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157088.201797025--157146.786617797))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.365464985370636
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157088.201797025; E_system:-157146.786617797;prob1:2.09816654667636e-43; prob2:0.365464985370636

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
88  25  1553  -157146.786617797  -157088.201797025  30096.4744337948  30096.4744337948  3160.31912674213  0.23936003446579  0  17  17  1  2.09816654667636e-43  0.365464985370636  displace fail  1541  -19.1988260591  17.4055199371  13.2683721058
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 89, 25
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.20566588640213
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.20566588640213)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.20566588640213, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.28654420375824*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.28654420375824*17)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1541
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000828981 secs
group		disp id ${nMCmoved}
group		disp id 1541
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1541 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 9.37824399467 ${ry} ${rz} units box
displace_atoms	disp move 9.37824399467 -6.27068927046 ${rz} units box
displace_atoms	disp move 9.37824399467 -6.27068927046 24.6614133922 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.71 | 73.08 | 73.55 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18400            0   -157126.07    1397.6882   -155728.38    30096.474    302.12335    3157.3431      6125.82   -409.84118    3756.0505      30.5776      30.5776      32.1891    2.3845129   -222876.96 
   18600           50   -157093.99    1362.4536   -155731.53    30096.474    294.50705     2541.486     4746.144    629.37345    2248.9405      30.5776      30.5776      32.1891    2.3845129   -222625.76 
Loop time of 2.67256 on 24 procs for 200 steps with 1553 atoms

Performance: 1.616 ns/day, 14.848 hours/ns, 74.835 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.27       | 2.3477     | 2.3867     |   1.8 | 87.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018375   | 0.057086   | 0.13478    |  11.4 |  2.14
Output  | 0.001153   | 0.0045966  | 0.0047481  |   1.1 |  0.17
Modify  | 0.26069    | 0.26121    | 0.26441    |   0.1 |  9.77
Other   |            | 0.001925   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 1 2 1 7 6 4 2
Nghost:    2374.38 ave 2397 max 2348 min
Histogram: 1 0 2 1 5 9 0 3 1 2
Neighs:    25397.9 ave 29010 max 18512 min
Histogram: 1 0 0 2 1 1 7 9 2 1

Total # of neighbors = 609549
Ave neighs/atom = 392.498
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157093.987500729-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157093.987500729--157146.786617797))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0379676222801208
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157093.987500729; E_system:-157146.786617797;prob1:3.44063032799757e-39; prob2:0.0379676222801208

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
89  25  1553  -157146.786617797  -157093.987500729  30096.4744337948  30096.4744337948  3160.31912674213  0.20566588640213  0  17  17  1  3.44063032799757e-39  0.0379676222801208  displace fail  1541  9.37824399467  -6.27068927046  24.6614133922
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 90, 25
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.717476665973663
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.717476665973663)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.717476665973663, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000877142 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 24.0018559026 ${ry} ${rz} units box
create_atoms	2 single 24.0018559026 25.0974862404 ${rz} units box
create_atoms	2 single 24.0018559026 25.0974862404 26.4139294774 units box
Created 1 atoms
  create_atoms CPU = 4.98295e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.730696976184845-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.730696976184845-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.730696976184845-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.717610895633698-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.717610895633698-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.717610895633698-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.493091464042664-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.493091464042664-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.493091464042664-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00479070195002022 ${rvy} ${rvz}
velocity	created set 0.00479070195002022 0.00451895364776129 ${rvz}
velocity	created set 0.00479070195002022 0.00451895364776129 -0.000143464111363452
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.83 | 73.14 | 73.58 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18400            0   -157198.89    1398.0482   -155800.84    30096.474    302.00656    3314.6683    6190.2914   -146.07276    3899.7863      30.5776      30.5776      32.1891    2.3848959   -222959.64 
   18600           50   -157174.57    1369.8264   -155804.74    30096.474    295.91008    3131.7233    5333.3436    923.73649    3138.0897      30.5776      30.5776      32.1891    2.3848959   -222750.34 
Loop time of 2.68792 on 24 procs for 200 steps with 1554 atoms

Performance: 1.607 ns/day, 14.933 hours/ns, 74.407 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2776     | 2.3588     | 2.3919     |   1.8 | 87.76
Neigh   | 0.009691   | 0.0099277  | 0.010169   |   0.1 |  0.37
Comm    | 0.018075   | 0.051242   | 0.13265    |  12.5 |  1.91
Output  | 0.001132   | 0.0045905  | 0.0047429  |   1.1 |  0.17
Modify  | 0.26076    | 0.26147    | 0.2651     |   0.2 |  9.73
Other   |            | 0.001862   |            |       |  0.07

Nlocal:    64.75 ave 72 max 50 min
Histogram: 1 0 0 1 1 4 7 4 3 3
Nghost:    2377.71 ave 2405 max 2355 min
Histogram: 1 3 2 2 7 4 2 0 1 2
Neighs:    25430.2 ave 29038 max 19018 min
Histogram: 1 0 1 1 0 4 9 4 3 1

Total # of neighbors = 610326
Ave neighs/atom = 392.745
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157174.568947556-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157174.568947556--157146.786617797-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157174.568947556--157146.786617797--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.31971138715744
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157174.568947556; E_system:-157146.786617797;prob1:3.77359834418853e-20; prob2:0.31971138715744

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
90  25  1553  -157146.786617797  -157174.568947556  30096.4744337948  30096.4744337948  3160.31912674213  0.717476665973663  2  17  17  3  3.77359834418853e-20  0.31971138715744  add fail  1554  24.0018559026  25.0974862404  26.4139294774 0.00479070195002022  0.00451895364776129  -0.000143464111363452
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 90
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000878096 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.78 | 73.1 | 73.55 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18400            0   -157146.79    1397.6882    -155749.1    30096.474    302.12335     3160.319    6052.3357    -388.0964    3816.7178      30.5776      30.5776      32.1891    2.3845129   -222888.05 
   18600           50   -157110.56    1359.2311   -155751.33    30096.474    293.81047    2583.6405    4753.0528    601.90155     2395.967      30.5776      30.5776      32.1891    2.3845129   -222671.56 
Loop time of 2.69946 on 24 procs for 200 steps with 1553 atoms

Performance: 1.600 ns/day, 14.997 hours/ns, 74.089 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.277      | 2.3664     | 2.4136     |   2.2 | 87.66
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017728   | 0.065182   | 0.15468    |  13.5 |  2.41
Output  | 0.0011289  | 0.0045765  | 0.0047331  |   1.1 |  0.17
Modify  | 0.26093    | 0.26144    | 0.2651     |   0.2 |  9.69
Other   |            | 0.001899   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 1 2 1 7 6 4 2
Nghost:    2375.38 ave 2397 max 2351 min
Histogram: 1 0 2 3 4 8 1 2 1 2
Neighs:    25397 ave 28982 max 18547 min
Histogram: 1 0 0 2 1 1 7 8 3 1

Total # of neighbors = 609527
Ave neighs/atom = 392.484
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157110.563148163
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2583.64046782175
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
90  17  -157110.563148163  -222671.562745869  -4990.12277289052  0  0  21758.0768315835  0  0  0  0  0  49929.7463095702  -223.755068719069  0  -912.945701838319
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
90  17  -157110.563148163  1359.23106080195  -155751.332087361  30096.4744337948  293.810472518907  2583.64046782175  4753.0528435283  601.901546161239  2395.96701377572  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
90  25  1553  -157110.563148163  -157110.563148163  30096.4744337948  30096.4744337948  2583.64046782175  0.717476665973663  2  17  17  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157110.563148163, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
90  25  1553  -157110.563148163  30096.4744337948  30096.4744337948  2583.64046782175  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 91, 25
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.897992730140686
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.897992730140686)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.897992730140686, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000769138 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 7.30230868567 ${ry} ${rz} units box
create_atoms	2 single 7.30230868567 11.0746809941 ${rz} units box
create_atoms	2 single 7.30230868567 11.0746809941 22.0111102701 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.376227676868439-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.376227676868439-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.376227676868439-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.908411800861359-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.908411800861359-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.908411800861359-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.74900096654892-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.74900096654892-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.74900096654892-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00257028210595096 ${rvy} ${rvz}
velocity	created set -0.00257028210595096 0.00848116539347305 ${rvz}
velocity	created set -0.00257028210595096 0.00848116539347305 0.00517080646539135
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.85 | 73.18 | 73.67 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18600            0   -157174.87    1360.1043   -155814.76    30096.474    293.80992    2577.2746     4683.216    489.15251    2559.4552      30.5776      30.5776      32.1891    2.3848959   -222736.73 
   18800           50   -157167.92    1358.0593   -155809.86    30096.474    293.36815    2202.7068    4898.2085   -1120.4906    2830.4024      30.5776      30.5776      32.1891    2.3848959   -222910.84 
Loop time of 2.69593 on 24 procs for 200 steps with 1554 atoms

Performance: 1.602 ns/day, 14.977 hours/ns, 74.186 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3034     | 2.3654     | 2.4101     |   1.6 | 87.74
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017885   | 0.062664   | 0.12497    |   9.8 |  2.32
Output  | 0.001138   | 0.00467    | 0.0048292  |   1.1 |  0.17
Modify  | 0.26083    | 0.2613     | 0.2649     |   0.2 |  9.69
Other   |            | 0.001905   |            |       |  0.07

Nlocal:    64.75 ave 72 max 50 min
Histogram: 1 0 0 1 1 4 7 5 1 4
Nghost:    2378.21 ave 2406 max 2355 min
Histogram: 1 3 3 4 3 5 1 1 1 2
Neighs:    25427 ave 29007 max 19023 min
Histogram: 1 0 1 1 0 4 9 3 4 1

Total # of neighbors = 610249
Ave neighs/atom = 392.696
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157167.917151879-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157167.917151879--157110.563148163-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157167.917151879--157110.563148163--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.761878073215485
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157167.917151879; E_system:-157110.563148163;prob1:131.605791417272; prob2:0.761878073215485

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1554
variable	E_system equal ${E_trial}
variable	E_system equal -157167.917151879
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2202.70676509215
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
91  18  -157167.917151879  -222910.835007121  -4926.27254900202  0  0  22027.238979932  0  0  0  0  0  49845.0027212051  -239.029532479246  0  -964.021764413418
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
91  18  -157167.917151879  1358.05925058139  -155809.857901298  30096.4744337948  293.368148940082  2202.70676509215  4898.20852387066  -1120.49063590088  2830.40240730666  30.5776  30.5776  32.1891  2.38489587052208
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
91  26  1554  -157167.917151879  -157167.917151879  30096.4744337948  30096.4744337948  2202.70676509215  0.897992730140686  2  18  18  3  131.605791417272  0.761878073215485  add pass  1554  7.30230868567  11.0746809941  22.0111102701 -0.00257028210595096  0.00848116539347305  0.00517080646539135
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157167.917151879, total atoms are 1554
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
91  26  1554  -157167.917151879  30096.4744337948  30096.4744337948  2202.70676509215  131.605791417272  0.761878073215485
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 92, 26
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.630106806755066
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.630106806755066)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.630106806755066, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.4084233045578*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.4084233045578*18)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1544
variable	lastatom equal ${n_system}
variable	lastatom equal 1554
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000893116 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1554]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1554]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1554]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1554]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1554]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1554]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1554]
variable	tx equal ${lastx}
variable	tx equal 7.72986563597326
variable	ty equal ${lasty}
variable	ty equal 12.1795586409433
variable	tz equal ${lastz}
variable	tz equal 21.9364673287071
variable	tvx equal ${lastvx}
variable	tvx equal 0.0223137439007035
variable	tvy equal ${lastvy}
variable	tvy equal 0.0119294860692763
variable	tvz equal ${lastvz}
variable	tvz equal 0.00196900560616367
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1544]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1544]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1544]
variable	dx equal (${tx}-${delx})
variable	dx equal (7.72986563597326-${delx})
variable	dx equal (7.72986563597326-13.0918680833628)
variable	dy equal (${ty}-${dely})
variable	dy equal (12.1795586409433-${dely})
variable	dy equal (12.1795586409433-4.95196982698616)
variable	dz equal (${tz}-${delz})
variable	dz equal (21.9364673287071-${delz})
variable	dz equal (21.9364673287071-4.05553062372036)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1544 13.0918680833628 4.95196982698616 4.05553062372036; Last coords: 7.72986563597326 12.1795586409433 21.9364673287071
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0223137439007035 0.0119294860692763 0.00196900560616367 Last type: 2
group		del id ${lastatom}
group		del id 1554
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1553
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1544
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -5.36200244738954 ${dy} ${dz}
displace_atoms	delDisp move -5.36200244738954 7.22758881395714 ${dz}
displace_atoms	delDisp move -5.36200244738954 7.22758881395714 17.8809367049867
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1544 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1544 vx 0.0223137439007035 vy ${tvy} vz ${tvz}
set		atom 1544 vx 0.0223137439007035 vy 0.0119294860692763 vz ${tvz}
set		atom 1544 vx 0.0223137439007035 vy 0.0119294860692763 vz 0.00196900560616367
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1544 type ${ttyp}
set		atom 1544 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.66 | 73.11 | 73.43 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   18800            0   -157096.67     1357.645   -155739.03    30096.474    293.46763    2115.3453    4911.5495   -1308.4039    2742.8903      30.5776      30.5776      32.1891    2.3845129   -222850.05 
   19000           50   -157158.19    1424.0263   -155734.17    30096.474    307.81657   -1130.5637    1574.6146   -3787.5912   -1178.7146      30.5776      30.5776      32.1891    2.3845129   -222568.95 
Loop time of 2.71336 on 24 procs for 200 steps with 1553 atoms

Performance: 1.592 ns/day, 15.074 hours/ns, 73.709 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3093     | 2.3747     | 2.4239     |   2.1 | 87.52
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017966   | 0.067392   | 0.13284    |  12.5 |  2.48
Output  | 0.0011702  | 0.0046272  | 0.0047801  |   1.1 |  0.17
Modify  | 0.26419    | 0.26468    | 0.26835    |   0.2 |  9.75
Other   |            | 0.00197    |            |       |  0.07

Nlocal:    64.7083 ave 72 max 49 min
Histogram: 1 0 0 1 1 2 7 6 4 2
Nghost:    2375.42 ave 2397 max 2354 min
Histogram: 1 2 2 3 2 5 4 4 0 1
Neighs:    25383.5 ave 28981 max 18600 min
Histogram: 1 0 0 2 0 5 5 7 2 2

Total # of neighbors = 609203
Ave neighs/atom = 392.275
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157158.19457267-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157158.19457267--157167.917151879+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157158.19457267--157167.917151879+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.99289208650589
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157158.19457267; E_system:-157167.917151879;prob1:3.79752590780437e+32; prob2:0.99289208650589

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157158.19457267
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -1130.56371116643
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
92  17  -157158.19457267  -222568.946449474  -5001.33482849297  0  0  21783.4986186343  0  0  0  0  0  49764.8465418478  -226.488812833317  0  -909.769642351918
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
92  17  -157158.19457267  1424.02629177287  -155734.168280897  30096.4744337948  307.816566094568  -1130.56371116643  1574.61464194394  -3787.59117869517  -1178.71459674805  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log
92  27  1553  -157158.19457267  -157158.19457267  30096.4744337948  30096.4744337948  -1130.56371116643  0.630106806755066  1  17  17  2  3.79752590780437e+32  0.99289208650589  delete  pass  1544
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157158.19457267, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
92  27  1553  -157158.19457267  30096.4744337948  30096.4744337948  -1130.56371116643  3.79752590780437e+32  0.99289208650589
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 93, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.924977958202362
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.924977958202362)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.924977958202362, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000772953 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 30.4403947627 ${ry} ${rz} units box
create_atoms	2 single 30.4403947627 13.9815650578 ${rz} units box
create_atoms	2 single 30.4403947627 13.9815650578 18.9517861335 units box
Created 1 atoms
  create_atoms CPU = 5.22137e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.918241739273071-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.918241739273071-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.918241739273071-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.771663963794708-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.771663963794708-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.771663963794708-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.827174246311188-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.827174246311188-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.827174246311188-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00868529596291681 ${rvy} ${rvz}
velocity	created set 0.00868529596291681 0.00564143103487729 ${rvz}
velocity	created set 0.00868529596291681 0.00564143103487729 0.00679416924192165
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.64 | 73.09 | 73.55 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19000            0   -157213.53    1425.2989   -155788.23    30096.474    307.89326   -1160.0525    1531.0866   -3737.8661   -1273.3779      30.5776      30.5776      32.1891    2.3848959   -222636.05 
   19200           50   -157193.85    1400.1759   -155793.67    30096.474    302.46618    2923.8583    6043.5332   -177.93841      2905.98      30.5776      30.5776      32.1891    2.3848959   -222680.72 
Loop time of 2.7005 on 24 procs for 200 steps with 1554 atoms

Performance: 1.600 ns/day, 15.003 hours/ns, 74.060 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2832     | 2.3568     | 2.4107     |   1.8 | 87.27
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017935   | 0.071845   | 0.1456     |  10.2 |  2.66
Output  | 0.0011489  | 0.0046275  | 0.0047832  |   1.1 |  0.17
Modify  | 0.2649     | 0.26538    | 0.2689     |   0.1 |  9.83
Other   |            | 0.001883   |            |       |  0.07

Nlocal:    64.75 ave 73 max 47 min
Histogram: 1 0 0 0 1 4 6 7 3 2
Nghost:    2374.33 ave 2406 max 2345 min
Histogram: 1 1 4 3 2 5 6 1 0 1
Neighs:    25418.2 ave 29035 max 17857 min
Histogram: 1 0 0 1 1 2 7 8 1 3

Total # of neighbors = 610038
Ave neighs/atom = 392.56
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157193.849734039-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157193.849734039--157158.19457267-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157193.849734039--157158.19457267--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.603798151016235
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157193.849734039; E_system:-157158.19457267;prob1:2.05113851223033e-14; prob2:0.603798151016235

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
93  27  1553  -157158.19457267  -157193.849734039  30096.4744337948  30096.4744337948  -1130.56371116643  0.924977958202362  2  17  17  3  2.05113851223033e-14  0.603798151016235  add fail  1554  30.4403947627  13.9815650578  18.9517861335 0.00868529596291681  0.00564143103487729  0.00679416924192165
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 94, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.295969545841217
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.295969545841217)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.295969545841217, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.810063064098358*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.810063064098358*17)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1550
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000839949 secs
group		disp id ${nMCmoved}
group		disp id 1550
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1550 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1550 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1550 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 13.5916961653 ${ry} ${rz} units box
displace_atoms	disp move 13.5916961653 -11.7981102681 ${rz} units box
displace_atoms	disp move 13.5916961653 -11.7981102681 -13.312967317 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.63 | 73.08 | 73.53 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19000            0   -157153.78    1424.0263   -155729.76    30096.474    307.81657   -1346.2207    1260.8865   -3991.0987     -1308.45      30.5776      30.5776      32.1891    2.3845129   -222524.63 
   19200           50    -157127.2    1393.2672   -155733.94    30096.474    301.16769    2276.5901    5443.5646   -920.70307    2306.9087      30.5776      30.5776      32.1891    2.3845129   -222545.95 
Loop time of 2.69877 on 24 procs for 200 steps with 1553 atoms

Performance: 1.601 ns/day, 14.993 hours/ns, 74.108 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2701     | 2.3521     | 2.4092     |   1.9 | 87.15
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018198   | 0.075166   | 0.15741    |  10.6 |  2.79
Output  | 0.0012081  | 0.0046736  | 0.0048261  |   1.1 |  0.17
Modify  | 0.26438    | 0.26497    | 0.26836    |   0.1 |  9.82
Other   |            | 0.001856   |            |       |  0.07

Nlocal:    64.7083 ave 73 max 47 min
Histogram: 1 0 0 0 1 4 7 6 3 2
Nghost:    2373.71 ave 2405 max 2345 min
Histogram: 1 0 5 3 2 4 7 1 0 1
Neighs:    25382.7 ave 28984 max 17878 min
Histogram: 1 0 0 1 1 2 6 8 2 3

Total # of neighbors = 609185
Ave neighs/atom = 392.263
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157127.203238266-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157127.203238266--157158.19457267))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.419618844985962
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157127.203238266; E_system:-157158.19457267;prob1:2.65020461763573e-23; prob2:0.419618844985962

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
94  27  1553  -157158.19457267  -157127.203238266  30096.4744337948  30096.4744337948  -1130.56371116643  0.295969545841217  0  17  17  1  2.65020461763573e-23  0.419618844985962  displace fail  1550  13.5916961653  -11.7981102681  -13.312967317
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 95, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.832530200481415
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.832530200481415)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.832530200481415, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000871181 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 2.29109844338 ${ry} ${rz} units box
create_atoms	2 single 2.29109844338 23.665096457 ${rz} units box
create_atoms	2 single 2.29109844338 23.665096457 0.694732881735 units box
Created 1 atoms
  create_atoms CPU = 4.48227e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.350103199481964-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.350103199481964-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.350103199481964-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.378975391387939-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.378975391387939-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.378975391387939-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.999969124794006-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.999969124794006-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.999969124794006-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00311278850039267 ${rvy} ${rvz}
velocity	created set -0.00311278850039267 -0.00251322248807318 ${rvz}
velocity	created set -0.00311278850039267 -0.00251322248807318 0.0103824640474759
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 73.1 | 73.55 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19000            0   -157234.69    1425.0532   -155809.63    30096.474    307.84019   -1284.9694    1534.0121   -4198.7765   -1190.1438      30.5776      30.5776      32.1891    2.3848959   -222603.37 
   19200           50   -157209.23    1394.8751   -155814.35    30096.474    301.32111    2664.0751    5761.2997   -458.34059    2689.2662      30.5776      30.5776      32.1891    2.3848959   -222638.26 
Loop time of 2.70492 on 24 procs for 200 steps with 1554 atoms

Performance: 1.597 ns/day, 15.027 hours/ns, 73.939 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2759     | 2.3571     | 2.4158     |   1.9 | 87.14
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018163   | 0.076743   | 0.15823    |  10.5 |  2.84
Output  | 0.001137   | 0.0046344  | 0.0047879  |   1.1 |  0.17
Modify  | 0.26402    | 0.26454    | 0.26802    |   0.1 |  9.78
Other   |            | 0.001882   |            |       |  0.07

Nlocal:    64.75 ave 73 max 47 min
Histogram: 1 0 0 0 1 4 7 6 2 3
Nghost:    2374.33 ave 2406 max 2345 min
Histogram: 1 1 4 4 1 5 6 1 0 1
Neighs:    25419.5 ave 29092 max 17852 min
Histogram: 1 0 0 1 1 2 7 8 1 3

Total # of neighbors = 610067
Ave neighs/atom = 392.579
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157209.225171046-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157209.225171046--157158.19457267-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157209.225171046--157158.19457267--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.19774067401886
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157209.225171046; E_system:-157158.19457267;prob1:0.00325663734411518; prob2:0.19774067401886

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
95  27  1553  -157158.19457267  -157209.225171046  30096.4744337948  30096.4744337948  -1130.56371116643  0.832530200481415  2  17  17  3  0.00325663734411518  0.19774067401886  add fail  1554  2.29109844338  23.665096457  0.694732881735 -0.00311278850039267  -0.00251322248807318  0.0103824640474759
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 95
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000869036 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.62 | 73.07 | 73.53 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19000            0   -157158.19    1424.0263   -155734.17    30096.474    307.81657    -1130.564    1574.6142   -3787.5914   -1178.7148      30.5776      30.5776      32.1891    2.3845129   -222568.95 
   19200           50   -157131.93     1393.716   -155738.22    30096.474    301.26472    2372.0393    5442.7052   -629.33401    2302.7468      30.5776      30.5776      32.1891    2.3845129   -222596.56 
Loop time of 2.7055 on 24 procs for 200 steps with 1553 atoms

Performance: 1.597 ns/day, 15.031 hours/ns, 73.924 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2836     | 2.3632     | 2.4137     |   1.8 | 87.35
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018207   | 0.068651   | 0.1484     |  10.5 |  2.54
Output  | 0.0011499  | 0.004609   | 0.0047619  |   1.1 |  0.17
Modify  | 0.26657    | 0.26714    | 0.27054    |   0.1 |  9.87
Other   |            | 0.001918   |            |       |  0.07

Nlocal:    64.7083 ave 73 max 47 min
Histogram: 1 0 0 0 1 4 7 6 3 2
Nghost:    2373.38 ave 2405 max 2344 min
Histogram: 1 1 4 3 2 5 6 1 0 1
Neighs:    25386.3 ave 29032 max 17850 min
Histogram: 1 0 0 1 1 2 7 8 1 3

Total # of neighbors = 609272
Ave neighs/atom = 392.319
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157131.931931961
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2372.03934279793
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
95  17  -157131.931931961  -222596.562349282  -4911.90439428302  0  0  21690.3034859  0  0  0  0  0  49824.2788636222  -227.233081213752  0  -910.814456704079
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
95  17  -157131.931931961  1393.71604611719  -155738.215885843  30096.4744337948  301.264723766152  2372.03934279793  5442.70521676479  -629.334007414509  2302.74681904352  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
95  27  1553  -157131.931931961  -157131.931931961  30096.4744337948  30096.4744337948  2372.03934279793  0.832530200481415  2  17  17  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157131.931931961, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
95  27  1553  -157131.931931961  30096.4744337948  30096.4744337948  2372.03934279793  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 96, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.99819540977478
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.99819540977478)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.99819540977478, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000955105 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 6.62650874902 ${ry} ${rz} units box
create_atoms	2 single 6.62650874902 25.8749953407 ${rz} units box
create_atoms	2 single 6.62650874902 25.8749953407 17.9629122982 units box
Created 1 atoms
  create_atoms CPU = 4.31538e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.69134396314621-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.69134396314621-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.69134396314621-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.406064510345459-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.406064510345459-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.406064510345459-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.585658967494965-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.585658967494965-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.585658967494965-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00397348900071697 ${rvy} ${rvz}
velocity	created set 0.00397348900071697 -0.00195068414379016 ${rvz}
velocity	created set 0.00397348900071697 -0.00195068414379016 0.00177881214310344
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.66 | 73.09 | 73.45 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19200            0   -157180.87    1393.9048   -155786.96    30096.474    301.11151    2728.5522     5870.479    -345.2504    2660.4281      30.5776      30.5776      32.1891    2.3848959    -222682.5 
   19400           50   -157152.78    1361.0104   -155791.76    30096.474    294.00566   -3583.3026    62.037004   -5625.4212   -5186.5236      30.5776      30.5776      32.1891    2.3848959   -222696.76 
Loop time of 2.68108 on 24 procs for 200 steps with 1554 atoms

Performance: 1.611 ns/day, 14.895 hours/ns, 74.597 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2893     | 2.3558     | 2.3957     |   1.5 | 87.87
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017876   | 0.05774    | 0.12469    |   9.7 |  2.15
Output  | 0.0011442  | 0.0046439  | 0.0047979  |   1.1 |  0.17
Modify  | 0.26037    | 0.26092    | 0.2644     |   0.2 |  9.73
Other   |            | 0.001939   |            |       |  0.07

Nlocal:    64.75 ave 71 max 50 min
Histogram: 1 0 0 1 2 1 4 4 8 3
Nghost:    2374.71 ave 2404 max 2347 min
Histogram: 1 0 3 3 5 7 2 2 0 1
Neighs:    25418.6 ave 28668 max 18919 min
Histogram: 1 0 1 1 1 3 3 8 4 2

Total # of neighbors = 610046
Ave neighs/atom = 392.565
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157152.775171457-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157152.775171457--157131.931931961-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157152.775171457--157131.931931961--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.315747261047363
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157152.775171457; E_system:-157131.931931961;prob1:3.32455002177655e-25; prob2:0.315747261047363

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
96  27  1553  -157131.931931961  -157152.775171457  30096.4744337948  30096.4744337948  2372.03934279793  0.99819540977478  2  17  17  3  3.32455002177655e-25  0.315747261047363  add fail  1554  6.62650874902  25.8749953407  17.9629122982 0.00397348900071697  -0.00195068414379016  0.00177881214310344
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 97, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.488643109798431
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.488643109798431)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.488643109798431, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.155432879924774*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.155432879924774*17)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1539
variable	lastatom equal ${n_system}
variable	lastatom equal 1553
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000822067 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1553]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1553]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1553]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1553]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1553]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1553]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1553]
variable	tx equal ${lastx}
variable	tx equal 24.6002817597079
variable	ty equal ${lasty}
variable	ty equal 11.024001390631
variable	tz equal ${lastz}
variable	tz equal 13.103334658221
variable	tvx equal ${lastvx}
variable	tvx equal 0.00162703715817954
variable	tvy equal ${lastvy}
variable	tvy equal 0.010982407414523
variable	tvz equal ${lastvz}
variable	tvz equal -0.00398201541029766
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1539]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1539]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1539]
variable	dx equal (${tx}-${delx})
variable	dx equal (24.6002817597079-${delx})
variable	dx equal (24.6002817597079-6.23354106350497)
variable	dy equal (${ty}-${dely})
variable	dy equal (11.024001390631-${dely})
variable	dy equal (11.024001390631-29.3510989798764)
variable	dz equal (${tz}-${delz})
variable	dz equal (13.103334658221-${delz})
variable	dz equal (13.103334658221-30.0609125265197)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1539 6.23354106350497 29.3510989798764 30.0609125265197; Last coords: 24.6002817597079 11.024001390631 13.103334658221
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.00162703715817954 0.010982407414523 -0.00398201541029766 Last type: 2
group		del id ${lastatom}
group		del id 1553
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1552
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1539
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 18.3667406962029 ${dy} ${dz}
displace_atoms	delDisp move 18.3667406962029 -18.3270975892454 ${dz}
displace_atoms	delDisp move 18.3667406962029 -18.3270975892454 -16.9575778682987
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1539 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1539 vx 0.00162703715817954 vy ${tvy} vz ${tvz}
set		atom 1539 vx 0.00162703715817954 vy 0.010982407414523 vz ${tvz}
set		atom 1539 vx 0.00162703715817954 vy 0.010982407414523 vz -0.00398201541029766
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1539 type ${ttyp}
set		atom 1539 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.6 | 73.01 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19200            0   -157056.47    1393.4151   -155663.05    30096.474    301.39387     2155.843    5237.6583   -884.25319     2114.124      30.5776      30.5776      32.1891    2.3841299   -222507.83 
   19400           50   -157023.49    1356.0465   -155667.44    30096.474    293.31109   -4135.7602   -481.82275   -6713.6785   -5211.7794      30.5776      30.5776      32.1891    2.3841299   -222482.21 
Loop time of 2.67197 on 24 procs for 200 steps with 1552 atoms

Performance: 1.617 ns/day, 14.844 hours/ns, 74.851 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2838     | 2.3544     | 2.386      |   1.4 | 88.11
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017825   | 0.049566   | 0.1204     |  10.0 |  1.86
Output  | 0.001132   | 0.0045749  | 0.0047271  |   1.1 |  0.17
Modify  | 0.26111    | 0.26156    | 0.26519    |   0.2 |  9.79
Other   |            | 0.001916   |            |       |  0.07

Nlocal:    64.6667 ave 71 max 50 min
Histogram: 1 0 0 1 2 1 4 5 7 3
Nghost:    2371.29 ave 2400 max 2346 min
Histogram: 1 0 4 2 7 5 2 2 0 1
Neighs:    25352 ave 28182 max 18915 min
Histogram: 1 0 0 2 1 2 2 8 6 2

Total # of neighbors = 608448
Ave neighs/atom = 392.041
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157023.486245426-${E_system}+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157023.486245426--157131.931931961+${mu}))
variable	prob1 equal	(1553*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157023.486245426--157131.931931961+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0330938100814819
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157023.486245426; E_system:-157131.931931961;prob1:4.5806129996155e-40; prob2:0.0330938100814819

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
97  27  1553  -157131.931931961  -157023.486245426  30096.4744337948  30096.4744337948  2372.03934279793  0.488643109798431  1  17  17  2  4.5806129996155e-40  0.0330938100814819  delete fail  1539
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 98, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.894302010536194
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.894302010536194)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.894302010536194, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000702143 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 4.48147146446 ${ry} ${rz} units box
create_atoms	2 single 4.48147146446 14.4576191925 ${rz} units box
create_atoms	2 single 4.48147146446 14.4576191925 5.6467054202 units box
Created 1 atoms
  create_atoms CPU = 5.22137e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.603994727134705-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.603994727134705-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.603994727134705-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.474828660488129-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.474828660488129-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.474828660488129-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.615410923957825-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.615410923957825-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.615410923957825-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00215957638593783 ${rvy} ${rvz}
velocity	created set 0.00215957638593783 -0.000522713332781269 ${rvz}
velocity	created set 0.00215957638593783 -0.000522713332781269 0.00239664753132863
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.66 | 73.1 | 73.46 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19200            0   -157209.59    1393.8046   -155815.78    30096.474    301.08987    2464.7663    5498.2998   -599.68351    2495.6826      30.5776      30.5776      32.1891    2.3848959   -222636.96 
   19400           50   -157176.83    1357.0635   -155819.76    30096.474    293.15304   -4229.1225    -1232.911   -6240.9374    -5213.519      30.5776      30.5776      32.1891    2.3848959   -222647.57 
Loop time of 2.68214 on 24 procs for 200 steps with 1554 atoms

Performance: 1.611 ns/day, 14.901 hours/ns, 74.567 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2856     | 2.3573     | 2.3962     |   1.6 | 87.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018003   | 0.056791   | 0.12887    |  10.2 |  2.12
Output  | 0.001168   | 0.0046514  | 0.0048051  |   1.1 |  0.17
Modify  | 0.26097    | 0.26146    | 0.2649     |   0.1 |  9.75
Other   |            | 0.001889   |            |       |  0.07

Nlocal:    64.75 ave 71 max 50 min
Histogram: 1 0 0 1 2 1 4 4 8 3
Nghost:    2374.71 ave 2404 max 2347 min
Histogram: 1 0 3 3 5 7 2 2 0 1
Neighs:    25416.8 ave 28629 max 18916 min
Histogram: 1 0 1 1 1 3 3 8 4 2

Total # of neighbors = 610004
Ave neighs/atom = 392.538
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157176.826305472-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157176.826305472--157131.931931961-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157176.826305472--157131.931931961--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.602607429027557
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157176.826305472; E_system:-157131.931931961;prob1:1.10311795758422e-07; prob2:0.602607429027557

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
98  27  1553  -157131.931931961  -157176.826305472  30096.4744337948  30096.4744337948  2372.03934279793  0.894302010536194  2  17  17  3  1.10311795758422e-07  0.602607429027557  add fail  1554  4.48147146446  14.4576191925  5.6467054202 0.00215957638593783  -0.000522713332781269  0.00239664753132863
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 99, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.826111495494843
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.826111495494843)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.826111495494843, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000848055 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 10.2730837188 ${ry} ${rz} units box
create_atoms	2 single 10.2730837188 16.8601835394 ${rz} units box
create_atoms	2 single 10.2730837188 16.8601835394 13.5817504297 units box
Created 1 atoms
  create_atoms CPU = 4.29153e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.469397485256195-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.469397485256195-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.469397485256195-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.345712304115295-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.345712304115295-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.345712304115295-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.849101483821869-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.849101483821869-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.849101483821869-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.000635498260459211 ${rvy} ${rvz}
velocity	created set -0.000635498260459211 -0.00320397075749595 ${rvz}
velocity	created set -0.000635498260459211 -0.00320397075749595 0.00724951486993199
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.66 | 73.09 | 73.45 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19200            0   -157178.45    1394.2405   -155784.21    30096.474    301.18402    2591.2364    5742.7343   -461.87116     2492.846      30.5776      30.5776      32.1891    2.3848959   -222668.66 
   19400           50   -157157.49    1368.0389   -155789.45    30096.474    295.52396   -3310.4315    171.28841   -5334.9239   -4767.6588      30.5776      30.5776      32.1891    2.3848959   -222652.11 
Loop time of 2.67811 on 24 procs for 200 steps with 1554 atoms

Performance: 1.613 ns/day, 14.878 hours/ns, 74.679 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2922     | 2.3563     | 2.3931     |   1.6 | 87.98
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01804    | 0.054732   | 0.11908    |  10.3 |  2.04
Output  | 0.001137   | 0.0046019  | 0.004761   |   1.1 |  0.17
Modify  | 0.26001    | 0.26061    | 0.26391    |   0.1 |  9.73
Other   |            | 0.00187    |            |       |  0.07

Nlocal:    64.75 ave 71 max 50 min
Histogram: 1 0 0 1 1 2 4 5 7 3
Nghost:    2374.71 ave 2404 max 2347 min
Histogram: 1 0 3 3 5 7 2 2 0 1
Neighs:    25419.2 ave 28622 max 18921 min
Histogram: 1 0 1 1 1 3 3 8 4 2

Total # of neighbors = 610062
Ave neighs/atom = 392.575
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157157.489617755-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157157.489617755--157131.931931961-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157157.489617755--157131.931931961--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.919612348079681
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157157.489617755; E_system:-157131.931931961;prob1:9.03932564423639e-22; prob2:0.919612348079681

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
99  27  1553  -157131.931931961  -157157.489617755  30096.4744337948  30096.4744337948  2372.03934279793  0.826111495494843  2  17  17  3  9.03932564423639e-22  0.919612348079681  add fail  1554  10.2730837188  16.8601835394  13.5817504297 -0.000635498260459211  -0.00320397075749595  0.00724951486993199
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 100, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.872535824775696
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.872535824775696)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.872535824775696, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000821829 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 17.8399955566 ${ry} ${rz} units box
create_atoms	2 single 17.8399955566 1.97432038543 ${rz} units box
create_atoms	2 single 17.8399955566 1.97432038543 32.0259455838 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.794703841209412-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.794703841209412-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.794703841209412-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.627557575702667-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.627557575702667-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.627557575702667-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.211835443973541-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.211835443973541-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.211835443973541-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00611988197725292 ${rvy} ${rvz}
velocity	created set 0.00611988197725292 0.00264888745732404 ${rvz}
velocity	created set 0.00611988197725292 0.00264888745732404 -0.00598408580516695
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.1 | 73.46 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19200            0   -157207.97    1394.3819   -155813.59    30096.474    301.21458    2445.6438    5489.4402   -570.86012    2418.3514      30.5776      30.5776      32.1891    2.3848959    -222639.5 
   19400           50   -157176.05    1358.3034   -155817.75    30096.474    293.42089   -3871.6027     -461.479   -5957.5334   -5195.7956      30.5776      30.5776      32.1891    2.3848959   -222632.14 
Loop time of 2.6926 on 24 procs for 200 steps with 1554 atoms

Performance: 1.604 ns/day, 14.959 hours/ns, 74.278 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2943     | 2.3569     | 2.4066     |   1.5 | 87.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018193   | 0.067591   | 0.13049    |   9.1 |  2.51
Output  | 0.001286   | 0.0047841  | 0.00494    |   1.1 |  0.18
Modify  | 0.26072    | 0.26142    | 0.26462    |   0.1 |  9.71
Other   |            | 0.001898   |            |       |  0.07

Nlocal:    64.75 ave 71 max 50 min
Histogram: 1 0 0 1 2 1 4 5 7 3
Nghost:    2374.54 ave 2403 max 2347 min
Histogram: 1 0 3 3 5 6 3 2 0 1
Neighs:    25420 ave 28650 max 18928 min
Histogram: 1 0 1 1 1 3 2 9 4 2

Total # of neighbors = 610080
Ave neighs/atom = 392.587
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157176.053311145-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157176.053311145--157131.931931961-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157176.053311145--157131.931931961--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.102310240268707
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157176.053311145; E_system:-157131.931931961;prob1:3.0165270446352e-08; prob2:0.102310240268707

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
100  27  1553  -157131.931931961  -157176.053311145  30096.4744337948  30096.4744337948  2372.03934279793  0.872535824775696  2  17  17  3  3.0165270446352e-08  0.102310240268707  add fail  1554  17.8399955566  1.97432038543  32.0259455838 0.00611988197725292  0.00264888745732404  -0.00598408580516695
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 100
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000809908 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.64 | 73.06 | 73.41 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19200            0   -157131.93     1393.716   -155738.22    30096.474    301.26472    2372.0395     5442.705   -629.33359    2302.7471      30.5776      30.5776      32.1891    2.3845129   -222596.56 
   19400           50   -157097.87    1355.7385   -155742.13    30096.474    293.05552   -3886.2524   -230.50493   -6198.0238   -5230.2284      30.5776      30.5776      32.1891    2.3845129   -222598.66 
Loop time of 2.67997 on 24 procs for 200 steps with 1553 atoms

Performance: 1.612 ns/day, 14.889 hours/ns, 74.628 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2915     | 2.3584     | 2.3936     |   1.5 | 88.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017958   | 0.053094   | 0.12016    |   9.7 |  1.98
Output  | 0.0011411  | 0.0046408  | 0.0047979  |   1.1 |  0.17
Modify  | 0.26134    | 0.26189    | 0.26541    |   0.2 |  9.77
Other   |            | 0.001925   |            |       |  0.07

Nlocal:    64.7083 ave 71 max 50 min
Histogram: 1 0 0 1 2 1 4 5 7 3
Nghost:    2373.25 ave 2402 max 2346 min
Histogram: 1 0 3 3 5 6 3 2 0 1
Neighs:    25385.8 ave 28622 max 18915 min
Histogram: 1 0 1 1 1 3 3 8 4 2

Total # of neighbors = 609258
Ave neighs/atom = 392.31
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1553
variable	E_system equal ${E_trial}
variable	E_system equal -157097.865197823
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -3886.25235054309
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
100  17  -157097.865197823  -222598.664004852  -4901.85183752061  0  0  21835.6863898718  0  0  0  0  0  49704.860680255  -226.540195741092  0  -911.356229835778
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
100  17  -157097.865197823  1355.73847577534  -155742.126722047  30096.4744337948  293.055517687037  -3886.25235054309  -230.504928215702  -6198.02375901933  -5230.22836439423  30.5776  30.5776  32.1891  2.38451290870121
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
100  27  1553  -157097.865197823  -157097.865197823  30096.4744337948  30096.4744337948  -3886.25235054309  0.872535824775696  2  17  17  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157097.865197823, total atoms are 1553
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
100  27  1553  -157097.865197823  30096.4744337948  30096.4744337948  -3886.25235054309  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 101, 27
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.861495196819305
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.861495196819305)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.861495196819305, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:17; n_GCMC:17
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1553 atoms
  read_restart CPU = 0.000813007 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 15.3000498742 ${ry} ${rz} units box
create_atoms	2 single 15.3000498742 2.11278364773 ${rz} units box
create_atoms	2 single 15.3000498742 2.11278364773 18.7007991813 units box
Created 1 atoms
  create_atoms CPU = 4.91142e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1554
print 		'ncreated is ${ncreated}'
ncreated is 1554
group		created id ${ncreated}
group		created id 1554
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.221153378486633-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.221153378486633-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.221153378486633-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.470132827758789-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.470132827758789-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.470132827758789-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.54934024810791-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.54934024810791-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.54934024810791-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00579058761641625 ${rvy} ${rvz}
velocity	created set -0.00579058761641625 -0.000620227983321781 ${rvz}
velocity	created set -0.00579058761641625 -0.000620227983321781 0.00102460997423587
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.84 | 73.15 | 73.56 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19400            0   -157154.49    1356.0285   -155798.46    30096.474    292.92947   -3720.1803    42.644324   -6111.0294   -5092.1558      30.5776      30.5776      32.1891    2.3848959   -222667.09 
   19600           50   -157218.31    1416.4896   -155801.82    30096.474    305.99027    3192.6476    10121.845   -3468.7254    2924.8232      30.5776      30.5776      32.1891    2.3848959   -222794.65 
Loop time of 2.71061 on 24 procs for 200 steps with 1554 atoms

Performance: 1.594 ns/day, 15.059 hours/ns, 73.784 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.295      | 2.3634     | 2.4127     |   1.7 | 87.19
Neigh   | 0.009634   | 0.0098688  | 0.010051   |   0.1 |  0.36
Comm    | 0.018704   | 0.067595   | 0.13622    |  10.1 |  2.49
Output  | 0.0011458  | 0.0046062  | 0.0047638  |   1.1 |  0.17
Modify  | 0.26245    | 0.26328    | 0.26653    |   0.1 |  9.71
Other   |            | 0.001886   |            |       |  0.07

Nlocal:    64.75 ave 72 max 48 min
Histogram: 1 0 1 0 1 2 5 7 4 3
Nghost:    2374.92 ave 2401 max 2347 min
Histogram: 1 2 1 3 2 6 4 4 0 1
Neighs:    25415.6 ave 29015 max 18270 min
Histogram: 1 0 1 1 0 2 7 7 3 2

Total # of neighbors = 609974
Ave neighs/atom = 392.519
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157218.311558556-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157218.311558556--157097.865197823-${mu}))
variable	prob1 equal	(30096.4744337948/((1553+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157218.311558556--157097.865197823--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.52682101726532
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157218.311558556; E_system:-157097.865197823;prob1:1.20533382523567e+48; prob2:0.52682101726532

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1554
variable	E_system equal ${E_trial}
variable	E_system equal -157218.311558556
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3192.64760593719
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
101  18  -157218.311558556  -222794.651968378  -4871.13089478759  0  0  21844.7627782939  0  0  0  0  0  49808.362037898  -241.461002759076  0  -964.192508823208
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
101  18  -157218.311558556  1416.48956822879  -155801.821990327  30096.4744337948  305.990274317056  3192.64760593719  10121.8449665443  -3468.72535371588  2924.82320498317  30.5776  30.5776  32.1891  2.38489587052208
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
101  28  1554  -157218.311558556  -157218.311558556  30096.4744337948  30096.4744337948  3192.64760593719  0.861495196819305  2  18  18  3  1.20533382523567e+48  0.52682101726532  add pass  1554  15.3000498742  2.11278364773  18.7007991813 -0.00579058761641625  -0.000620227983321781  0.00102460997423587
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157218.311558556, total atoms are 1554
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
101  28  1554  -157218.311558556  30096.4744337948  30096.4744337948  3192.64760593719  1.20533382523567e+48  0.52682101726532
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 102, 28
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.117682158946991
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.117682158946991)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.117682158946991, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.644159913063049*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.644159913063049*18)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1548
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000874996 secs
group		disp id ${nMCmoved}
group		disp id 1548
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 3.87646655049 ${ry} ${rz} units box
displace_atoms	disp move 3.87646655049 -10.3928745591 ${rz} units box
displace_atoms	disp move 3.87646655049 -10.3928745591 -7.67333016715 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.06 | 73.47 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19600            0   -157198.72    1416.4896   -155782.23    30096.474    305.99027    3348.1741    10415.387   -3164.5113    2793.6469      30.5776      30.5776      32.1891    2.3848959   -222791.47 
   19800           50   -157184.92    1395.4189    -155789.5    30096.474    301.43858     -301.613    184.29255   -1123.4487    34.317182      30.5776      30.5776      32.1891    2.3848959   -222689.62 
Loop time of 2.72534 on 24 procs for 200 steps with 1554 atoms

Performance: 1.585 ns/day, 15.141 hours/ns, 73.385 timesteps/s
98.4% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2826     | 2.3591     | 2.4228     |   2.0 | 86.56
Neigh   | 0.00969    | 0.009896   | 0.01017    |   0.1 |  0.36
Comm    | 0.01854    | 0.082005   | 0.15863    |  10.8 |  3.01
Output  | 0.0011861  | 0.0046434  | 0.0047979  |   1.1 |  0.17
Modify  | 0.26587    | 0.26651    | 0.26985    |   0.1 |  9.78
Other   |            | 0.003172   |            |       |  0.12

Nlocal:    64.75 ave 72 max 48 min
Histogram: 1 0 0 1 1 2 2 11 2 4
Nghost:    2375 ave 2407 max 2340 min
Histogram: 1 0 3 3 2 7 3 3 1 1
Neighs:    25424.2 ave 29017 max 18248 min
Histogram: 1 0 1 1 0 2 8 4 5 2

Total # of neighbors = 610180
Ave neighs/atom = 392.651
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157184.920141461-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157184.920141461--157218.311558556))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.851036190986633
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157184.920141461; E_system:-157218.311558556;prob1:4.72993633288561e-25; prob2:0.851036190986633

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
102  28  1554  -157218.311558556  -157184.920141461  30096.4744337948  30096.4744337948  3192.64760593719  0.117682158946991  0  18  18  1  4.72993633288561e-25  0.851036190986633  displace fail  1548  3.87646655049  -10.3928745591  -7.67333016715
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 103, 28
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.282429873943329
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.282429873943329)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.282429873943329, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.776677191257477*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.776677191257477*18)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1550
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000840902 secs
group		disp id ${nMCmoved}
group		disp id 1550
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1550 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1550 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1550 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 0.656908031526 ${ry} ${rz} units box
displace_atoms	disp move 0.656908031526 -5.0133874268 ${rz} units box
displace_atoms	disp move 0.656908031526 -5.0133874268 -24.0416489272 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.64 | 73.06 | 73.6 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19600            0   -157222.57    1416.4896   -155806.09    30096.474    305.99027    3114.1916    9919.9704   -3456.5121    2879.1164      30.5776      30.5776      32.1891    2.3848959   -222810.65 
   19800           50   -157207.19    1395.3921    -155811.8    30096.474     301.4328   -50.335252    437.94579   -1508.4338     919.4823      30.5776      30.5776      32.1891    2.3848959      -222728 
Loop time of 2.72659 on 24 procs for 200 steps with 1554 atoms

Performance: 1.584 ns/day, 15.148 hours/ns, 73.352 timesteps/s
98.3% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2794     | 2.3574     | 2.4358     |   2.1 | 86.46
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018852   | 0.096762   | 0.17479    |  10.5 |  3.55
Output  | 0.0011899  | 0.0046498  | 0.0048051  |   1.1 |  0.17
Modify  | 0.2651     | 0.26581    | 0.26871    |   0.1 |  9.75
Other   |            | 0.00201    |            |       |  0.07

Nlocal:    64.75 ave 72 max 48 min
Histogram: 1 0 0 1 1 2 4 9 3 3
Nghost:    2372.58 ave 2396 max 2341 min
Histogram: 1 1 0 3 4 2 7 1 4 1
Neighs:    25418 ave 28963 max 18278 min
Histogram: 1 0 1 1 0 3 5 7 4 2

Total # of neighbors = 610032
Ave neighs/atom = 392.556
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157207.194981995-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157207.194981995--157218.311558556))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.968952298164368
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157207.194981995; E_system:-157218.311558556;prob1:7.97519509169591e-09; prob2:0.968952298164368

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
103  28  1554  -157218.311558556  -157207.194981995  30096.4744337948  30096.4744337948  3192.64760593719  0.282429873943329  0  18  18  1  7.97519509169591e-09  0.968952298164368  displace fail  1550  0.656908031526  -5.0133874268  -24.0416489272
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 104, 28
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.190736889839172
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.190736889839172)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.190736889839172, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.987310171127319*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.987310171127319*18)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1554
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000840902 secs
group		disp id ${nMCmoved}
group		disp id 1554
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 7.55661405283 ${ry} ${rz} units box
displace_atoms	disp move 7.55661405283 22.895519566 ${rz} units box
displace_atoms	disp move 7.55661405283 22.895519566 1.68586716574 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.69 | 73.07 | 73.45 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19600            0   -157216.82    1416.4896   -155800.33    30096.474    305.99027    3133.6963    10174.251   -3611.1314    2837.9697      30.5776      30.5776      32.1891    2.3848959   -222764.41 
   19800           50   -157188.05    1381.1664   -155806.89    30096.474    298.35977   -177.23542   -48.776244   -1245.8962    762.96615      30.5776      30.5776      32.1891    2.3848959   -222673.08 
Loop time of 2.70271 on 24 procs for 200 steps with 1554 atoms

Performance: 1.598 ns/day, 15.015 hours/ns, 74.000 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2806     | 2.3574     | 2.4063     |   1.8 | 87.22
Neigh   | 0.009619   | 0.0098714  | 0.010074   |   0.1 |  0.37
Comm    | 0.018352   | 0.067085   | 0.14372    |  10.5 |  2.48
Output  | 0.001133   | 0.0046214  | 0.004791   |   1.1 |  0.17
Modify  | 0.26124    | 0.2618     | 0.26518    |   0.1 |  9.69
Other   |            | 0.001902   |            |       |  0.07

Nlocal:    64.75 ave 72 max 48 min
Histogram: 1 0 0 1 1 1 5 8 4 3
Nghost:    2374.38 ave 2403 max 2344 min
Histogram: 1 1 4 0 4 4 5 4 0 1
Neighs:    25413.7 ave 29011 max 18208 min
Histogram: 1 0 1 1 0 2 7 7 4 1

Total # of neighbors = 609929
Ave neighs/atom = 392.49
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157188.054362014-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157188.054362014--157218.311558556))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.153401434421539
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157188.054362014; E_system:-157218.311558556;prob1:9.08004054298216e-23; prob2:0.153401434421539

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
104  28  1554  -157218.311558556  -157188.054362014  30096.4744337948  30096.4744337948  3192.64760593719  0.190736889839172  0  18  18  1  9.08004054298216e-23  0.153401434421539  displace fail  1554  7.55661405283  22.895519566  1.68586716574
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 105, 28
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.506817162036896
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.506817162036896)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.506817162036896, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.602196455001831*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.602196455001831*18)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1547
variable	lastatom equal ${n_system}
variable	lastatom equal 1554
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.00112605 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1554]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1554]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1554]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1554]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1554]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1554]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1554]
variable	tx equal ${lastx}
variable	tx equal 16.7778829021264
variable	ty equal ${lasty}
variable	ty equal 2.19920575067743
variable	tz equal ${lastz}
variable	tz equal 17.5022146714681
variable	tvx equal ${lastvx}
variable	tvx equal 0.0264588766067534
variable	tvy equal ${lastvy}
variable	tvy equal 0.00588594627500685
variable	tvz equal ${lastvz}
variable	tvz equal -0.0218376755604283
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1547]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1547]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1547]
variable	dx equal (${tx}-${delx})
variable	dx equal (16.7778829021264-${delx})
variable	dx equal (16.7778829021264-4.85390148574848)
variable	dy equal (${ty}-${dely})
variable	dy equal (2.19920575067743-${dely})
variable	dy equal (2.19920575067743-16.0658466516351)
variable	dz equal (${tz}-${delz})
variable	dz equal (17.5022146714681-${delz})
variable	dz equal (17.5022146714681-2.65213868507805)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1547 4.85390148574848 16.0658466516351 2.65213868507805; Last coords: 16.7778829021264 2.19920575067743 17.5022146714681
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0264588766067534 0.00588594627500685 -0.0218376755604283 Last type: 2
group		del id ${lastatom}
group		del id 1554
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1553
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1547
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 11.9239814163779 ${dy} ${dz}
displace_atoms	delDisp move 11.9239814163779 -13.8666409009577 ${dz}
displace_atoms	delDisp move 11.9239814163779 -13.8666409009577 14.85007598639
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx 0.0264588766067534 vy ${tvy} vz ${tvz}
set		atom 1547 vx 0.0264588766067534 vy 0.00588594627500685 vz ${tvz}
set		atom 1547 vx 0.0264588766067534 vy 0.00588594627500685 vz -0.0218376755604283
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1547 type ${ttyp}
set		atom 1547 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.64 | 73.03 | 73.42 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19600            0   -157137.93    1415.9917   -155721.94    30096.474    306.07982    3199.3721    10166.791   -3405.4251    2836.7503      30.5776      30.5776      32.1891    2.3845129   -222743.05 
   19800           50   -157120.51    1392.9129    -155727.6    30096.474    301.09111   -433.19306    45.920568   -1603.6477    258.14793      30.5776      30.5776      32.1891    2.3845129   -222621.46 
Loop time of 2.6961 on 24 procs for 200 steps with 1553 atoms

Performance: 1.602 ns/day, 14.978 hours/ns, 74.181 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2869     | 2.3534     | 2.4071     |   1.8 | 87.29
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018456   | 0.071918   | 0.1382     |  10.3 |  2.67
Output  | 0.001137   | 0.0046291  | 0.0047829  |   1.1 |  0.17
Modify  | 0.26351    | 0.26422    | 0.26747    |   0.1 |  9.80
Other   |            | 0.001913   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 48 min
Histogram: 1 0 0 1 1 2 4 9 3 3
Nghost:    2371.54 ave 2397 max 2340 min
Histogram: 1 1 0 4 3 7 2 3 2 1
Neighs:    25385.2 ave 28968 max 18268 min
Histogram: 1 0 1 1 0 2 6 7 4 2

Total # of neighbors = 609245
Ave neighs/atom = 392.302
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157120.514817412-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157120.514817412--157218.311558556+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157120.514817412--157218.311558556+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0895623564720154
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157120.514817412; E_system:-157218.311558556;prob1:2.62300776559458e-32; prob2:0.0895623564720154

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
105  28  1554  -157218.311558556  -157120.514817412  30096.4744337948  30096.4744337948  3192.64760593719  0.506817162036896  1  18  18  2  2.62300776559458e-32  0.0895623564720154  delete fail  1547
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 105
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000730038 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.06 | 73.47 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19600            0   -157218.31    1416.4896   -155801.82    30096.474    305.99027    3192.6477    10121.845   -3468.7254    2924.8234      30.5776      30.5776      32.1891    2.3848959   -222794.65 
   19800           50   -157198.59    1391.4309   -155807.16    30096.474     300.5771   -363.09809   -32.663822    -1569.439     512.8086      30.5776      30.5776      32.1891    2.3848959   -222675.93 
Loop time of 2.709 on 24 procs for 200 steps with 1554 atoms

Performance: 1.595 ns/day, 15.050 hours/ns, 73.828 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2908     | 2.3631     | 2.4201     |   1.8 | 87.23
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018085   | 0.075093   | 0.14718    |  10.0 |  2.77
Output  | 0.0011461  | 0.0046618  | 0.004817   |   1.1 |  0.17
Modify  | 0.26361    | 0.26421    | 0.26771    |   0.1 |  9.75
Other   |            | 0.001948   |            |       |  0.07

Nlocal:    64.75 ave 72 max 48 min
Histogram: 1 0 0 1 1 2 4 9 3 3
Nghost:    2373 ave 2399 max 2341 min
Histogram: 1 1 0 5 2 6 3 3 2 1
Neighs:    25417.8 ave 28996 max 18269 min
Histogram: 1 0 1 1 0 2 6 7 4 2

Total # of neighbors = 610027
Ave neighs/atom = 392.553
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1554
variable	E_system equal ${E_trial}
variable	E_system equal -157198.592662323
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -363.098086185475
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
105  18  -157198.592662323  -222675.93012473  -4874.07846984714  0  0  21758.0945734568  0  0  0  0  0  49798.2449108485  -240.432431152968  0  -964.491120898703
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
105  18  -157198.592662323  1391.43092392138  -155807.161738401  30096.4744337948  300.577102474763  -363.098086185475  -32.6638218564741  -1569.43903980244  512.80860310249  30.5776  30.5776  32.1891  2.38489587052208
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
105  28  1554  -157198.592662323  -157198.592662323  30096.4744337948  30096.4744337948  -363.098086185475  0.506817162036896  1  18  18  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157198.592662323, total atoms are 1554
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
105  28  1554  -157198.592662323  30096.4744337948  30096.4744337948  -363.098086185475  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 106, 28
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.732680797576904
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.732680797576904)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.732680797576904, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000735998 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 3.23233869019 ${ry} ${rz} units box
create_atoms	2 single 3.23233869019 24.4935151525 ${rz} units box
create_atoms	2 single 3.23233869019 24.4935151525 10.8767683456 units box
Created 1 atoms
  create_atoms CPU = 4.79221e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1555
print 		'ncreated is ${ncreated}'
ncreated is 1555
group		created id ${ncreated}
group		created id 1555
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.711515367031097-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.711515367031097-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.711515367031097-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.289976537227631-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.289976537227631-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.289976537227631-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.190503239631653-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.190503239631653-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.190503239631653-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00439237261819683 ${rvy} ${rvz}
velocity	created set 0.00439237261819683 -0.00436139142043806 ${rvz}
velocity	created set 0.00439237261819683 -0.00436139142043806 -0.00642707484918904
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.7 | 73.12 | 73.49 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   19800            0   -157253.18    1392.0914   -155861.09    30096.474    300.52626   -190.16366    186.40561   -1255.1447    498.24809      30.5776      30.5776      32.1891    2.3852788   -222751.55 
   20000           50   -157279.35    1415.5321   -155863.82    30096.474    305.58666    3688.6401    6088.4556    2658.5632    2318.9013      30.5776      30.5776      32.1891    2.3852788   -222875.58 
Loop time of 2.69405 on 24 procs for 200 steps with 1555 atoms

Performance: 1.604 ns/day, 14.967 hours/ns, 74.238 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2904     | 2.3581     | 2.4009     |   1.6 | 87.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017912   | 0.061027   | 0.12895    |  10.3 |  2.27
Output  | 0.0011408  | 0.004597   | 0.00475    |   1.1 |  0.17
Modify  | 0.26798    | 0.26843    | 0.27219    |   0.2 |  9.96
Other   |            | 0.001864   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 48 min
Histogram: 1 0 0 1 1 2 4 8 3 4
Nghost:    2375.96 ave 2406 max 2343 min
Histogram: 1 0 3 4 1 5 5 3 1 1
Neighs:    25453.7 ave 29031 max 18228 min
Histogram: 1 0 1 1 0 3 6 5 5 2

Total # of neighbors = 610889
Ave neighs/atom = 392.855
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157279.348756782-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157279.348756782--157198.592662323-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157279.348756782--157198.592662323--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.271514177322388
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157279.348756782; E_system:-157198.592662323;prob1:1.46915105564674e+19; prob2:0.271514177322388

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157279.348756782
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3688.64006949735
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
106  19  -157279.348756782  -222875.58311855  -4879.43955875142  0  0  21840.5939977335  0  0  0  0  0  49907.8601913943  -254.005775476842  0  -1018.77449313163
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
106  19  -157279.348756782  1415.53206037287  -155863.81669641  30096.4744337948  305.586661500197  3688.64006949735  6088.45563641438  2658.56323397234  2318.90133810532  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
106  29  1555  -157279.348756782  -157279.348756782  30096.4744337948  30096.4744337948  3688.64006949735  0.732680797576904  2  19  19  3  1.46915105564674e+19  0.271514177322388  add pass  1555  3.23233869019  24.4935151525  10.8767683456 0.00439237261819683  -0.00436139142043806  -0.00642707484918904
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157279.348756782, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
106  29  1555  -157279.348756782  30096.4744337948  30096.4744337948  3688.64006949735  1.46915105564674e+19  0.271514177322388
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 107, 29
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.803694844245911
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.803694844245911)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.803694844245911, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000830173 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 16.9542289328 ${ry} ${rz} units box
create_atoms	2 single 16.9542289328 7.68984196935 ${rz} units box
create_atoms	2 single 16.9542289328 7.68984196935 25.8733962504 units box
Created 1 atoms
  create_atoms CPU = 4.3869e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.960525989532471-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.960525989532471-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.960525989532471-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.356383681297302-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.356383681297302-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.356383681297302-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.99206405878067-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.99206405878067-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.99206405878067-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00956337960112862 ${rvy} ${rvz}
velocity	created set 0.00956337960112862 -0.00298236669349522 ${rvz}
velocity	created set 0.00956337960112862 -0.00298236669349522 0.0102183057832826
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.62 | 73.17 | 73.66 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20000            0   -157346.15    1417.2305   -155928.92    30096.474    305.75658    3897.0724    6443.2238    2830.5812    2417.4121      30.5776      30.5776      32.1891    2.3856618    -222925.3 
   20200           50   -157345.64    1407.4665   -155938.17    30096.474    303.65006    3146.0523    6022.1807    1191.8035    2224.1727      30.5776      30.5776      32.1891    2.3856618   -222857.17 
Loop time of 2.69415 on 24 procs for 200 steps with 1556 atoms

Performance: 1.603 ns/day, 14.967 hours/ns, 74.235 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3079     | 2.3632     | 2.406      |   1.6 | 87.72
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017971   | 0.060805   | 0.11631    |  10.0 |  2.26
Output  | 0.0011668  | 0.0046617  | 0.0048149  |   1.1 |  0.17
Modify  | 0.26308    | 0.26352    | 0.26705    |   0.1 |  9.78
Other   |            | 0.001914   |            |       |  0.07

Nlocal:    64.8333 ave 73 max 47 min
Histogram: 1 0 0 1 0 3 6 6 6 1
Nghost:    2377.33 ave 2421 max 2337 min
Histogram: 1 0 3 4 4 7 2 2 0 1
Neighs:    25493.9 ave 29454 max 17863 min
Histogram: 1 0 0 1 2 2 6 7 4 1

Total # of neighbors = 611853
Ave neighs/atom = 393.222
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157345.638337461-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157345.638337461--157279.348756782-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157345.638337461--157279.348756782--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0321289896965027
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157345.638337461; E_system:-157279.348756782;prob1:424765984.796489; prob2:0.0321289896965027

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157345.638337461
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3146.0522973276
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
107  20  -157345.638337461  -222857.172750357  -4784.30168154878  0  0  21717.9013236044  0  0  0  0  0  49916.6431041587  -266.391115257295  0  -1072.31721806143
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
107  20  -157345.638337461  1407.46652165368  -155938.171815808  30096.4744337948  303.65006487099  3146.0522973276  6022.18068736775  1191.80346619847  2224.17273841657  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
107  30  1556  -157345.638337461  -157345.638337461  30096.4744337948  30096.4744337948  3146.0522973276  0.803694844245911  2  20  20  3  424765984.796489  0.0321289896965027  add pass  1556  16.9542289328  7.68984196935  25.8733962504 0.00956337960112862  -0.00298236669349522  0.0102183057832826
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157345.638337461, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
107  30  1556  -157345.638337461  30096.4744337948  30096.4744337948  3146.0522973276  424765984.796489  0.0321289896965027
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 108, 30
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.580991983413696
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.580991983413696)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.580991983413696, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.275022149085999*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.275022149085999*20)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1542
variable	lastatom equal ${n_system}
variable	lastatom equal 1556
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.00103092 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1556]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1556]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1556]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1556]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1556]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1556]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1556]
variable	tx equal ${lastx}
variable	tx equal 18.0369558391062
variable	ty equal ${lasty}
variable	ty equal 7.40158033684413
variable	tz equal ${lastz}
variable	tz equal 25.5139576628159
variable	tvx equal ${lastvx}
variable	tvx equal 0.00361552141035098
variable	tvy equal ${lastvy}
variable	tvy equal -0.00518399600524219
variable	tvz equal ${lastvz}
variable	tvz equal -0.00979381572812478
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1542]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1542]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1542]
variable	dx equal (${tx}-${delx})
variable	dx equal (18.0369558391062-${delx})
variable	dx equal (18.0369558391062-23.4361367716149)
variable	dy equal (${ty}-${dely})
variable	dy equal (7.40158033684413-${dely})
variable	dy equal (7.40158033684413-14.6057476456658)
variable	dz equal (${tz}-${delz})
variable	dz equal (25.5139576628159-${delz})
variable	dz equal (25.5139576628159-8.99053570435221)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1542 23.4361367716149 14.6057476456658 8.99053570435221; Last coords: 18.0369558391062 7.40158033684413 25.5139576628159
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.00361552141035098 -0.00518399600524219 -0.00979381572812478 Last type: 2
group		del id ${lastatom}
group		del id 1556
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1555
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1542
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -5.3991809325087 ${dy} ${dz}
displace_atoms	delDisp move -5.3991809325087 -7.20416730882167 ${dz}
displace_atoms	delDisp move -5.3991809325087 -7.20416730882167 16.5234219584637
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1542 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1542 vx 0.00361552141035098 vy ${tvy} vz ${tvz}
set		atom 1542 vx 0.00361552141035098 vy -0.00518399600524219 vz ${tvz}
set		atom 1542 vx 0.00361552141035098 vy -0.00518399600524219 vz -0.00979381572812478
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1542 type ${ttyp}
set		atom 1542 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.78 | 73.19 | 73.7 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20200            0   -157271.28    1406.9883    -155864.3    30096.474    303.74222    3110.2391    5921.1893    1163.3648    2246.1633      30.5776      30.5776      32.1891    2.3852788   -222791.66 
   20400           50   -157259.07    1375.2347   -155883.83    30096.474    296.88722     2236.063     6142.014   -581.83331    1148.0084      30.5776      30.5776      32.1891    2.3852788   -222824.39 
Loop time of 2.72561 on 24 procs for 200 steps with 1555 atoms

Performance: 1.585 ns/day, 15.142 hours/ns, 73.378 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3099     | 2.3775     | 2.4268     |   1.9 | 87.23
Neigh   | 0.009665   | 0.0098946  | 0.010072   |   0.1 |  0.36
Comm    | 0.018009   | 0.067584   | 0.13523    |  11.0 |  2.48
Output  | 0.0011499  | 0.0046274  | 0.004791   |   1.1 |  0.17
Modify  | 0.26359    | 0.26407    | 0.26797    |   0.2 |  9.69
Other   |            | 0.001924   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 1 1 3 6 7 4 1
Nghost:    2375.58 ave 2403 max 2349 min
Histogram: 1 0 5 2 4 4 4 2 1 1
Neighs:    25462 ave 29397 max 18610 min
Histogram: 1 0 1 1 0 4 9 5 2 1

Total # of neighbors = 611089
Ave neighs/atom = 392.983
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157259.068727748-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157259.068727748--157345.638337461+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157259.068727748--157345.638337461+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.210920214653015
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157259.068727748; E_system:-157345.638337461;prob1:3.9641894138302e-24; prob2:0.210920214653015

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
108  30  1556  -157345.638337461  -157259.068727748  30096.4744337948  30096.4744337948  3146.0522973276  0.580991983413696  1  20  20  2  3.9641894138302e-24  0.210920214653015  delete fail  1542
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 109, 30
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.714195668697357
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.714195668697357)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.714195668697357, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000741959 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 26.5557237804 ${ry} ${rz} units box
create_atoms	2 single 26.5557237804 25.0774245597 ${rz} units box
create_atoms	2 single 26.5557237804 25.0774245597 14.5516511532 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1557
print 		'ncreated is ${ncreated}'
ncreated is 1557
group		created id ${ncreated}
group		created id 1557
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.494016766548157-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.494016766548157-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.494016766548157-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.735126733779907-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.735126733779907-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.735126733779907-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0350437760353088-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0350437760353088-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.0350437760353088-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.000124249084835007 ${rvy} ${rvz}
velocity	created set -0.000124249084835007 0.00488269122833558 ${rvz}
velocity	created set -0.000124249084835007 0.00488269122833558 -0.00965537878154474
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.89 | 73.27 | 73.75 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20200            0    -157379.4    1408.4377   -155970.97    30096.474     303.6643    3332.7262    6183.5183    1375.3846    2439.2756      30.5776      30.5776      32.1891    2.3860448   -222944.33 
   20400           50   -157382.22    1389.4432   -155992.78    30096.474    299.56903    2479.5637    6602.9527   -499.01526    1334.7535      30.5776      30.5776      32.1891    2.3860448    -222978.8 
Loop time of 2.71388 on 24 procs for 200 steps with 1557 atoms

Performance: 1.592 ns/day, 15.077 hours/ns, 73.695 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3002     | 2.3699     | 2.4165     |   1.7 | 87.32
Neigh   | 0.0096779  | 0.0099036  | 0.010076   |   0.1 |  0.36
Comm    | 0.018051   | 0.064818   | 0.13467    |  10.6 |  2.39
Output  | 0.001158   | 0.0046419  | 0.0047951  |   1.1 |  0.17
Modify  | 0.26232    | 0.26277    | 0.26654    |   0.2 |  9.68
Other   |            | 0.001887   |            |       |  0.07

Nlocal:    64.875 ave 73 max 49 min
Histogram: 1 0 0 1 1 3 6 6 5 1
Nghost:    2377.62 ave 2404 max 2353 min
Histogram: 1 1 4 1 6 3 4 3 0 1
Neighs:    25525 ave 29398 max 18653 min
Histogram: 1 0 1 1 0 4 8 6 2 1

Total # of neighbors = 612600
Ave neighs/atom = 393.449
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157382.218976161-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157382.218976161--157345.638337461-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157382.218976161--157345.638337461--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.937767863273621
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157382.218976161; E_system:-157345.638337461;prob1:9.66837964035497e-14; prob2:0.937767863273621

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
109  30  1556  -157345.638337461  -157382.218976161  30096.4744337948  30096.4744337948  3146.0522973276  0.714195668697357  2  20  20  3  9.66837964035497e-14  0.937767863273621  add fail  1557  26.5557237804  25.0774245597  14.5516511532 -0.000124249084835007  0.00488269122833558  -0.00965537878154474
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 110, 30
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.565239727497101
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.565239727497101)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.565239727497101, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.89462411403656*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.89462411403656*20)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1554
variable	lastatom equal ${n_system}
variable	lastatom equal 1556
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000788927 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1556]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1556]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1556]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1556]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1556]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1556]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1556]
variable	tx equal ${lastx}
variable	tx equal 18.0369558391062
variable	ty equal ${lasty}
variable	ty equal 7.40158033684413
variable	tz equal ${lastz}
variable	tz equal 25.5139576628159
variable	tvx equal ${lastvx}
variable	tvx equal 0.00361552141035098
variable	tvy equal ${lastvy}
variable	tvy equal -0.00518399600524219
variable	tvz equal ${lastvz}
variable	tvz equal -0.00979381572812478
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1554]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1554]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1554]
variable	dx equal (${tx}-${delx})
variable	dx equal (18.0369558391062-${delx})
variable	dx equal (18.0369558391062-16.6459656062895)
variable	dy equal (${ty}-${dely})
variable	dy equal (7.40158033684413-${dely})
variable	dy equal (7.40158033684413-1.61499842448817)
variable	dz equal (${tz}-${delz})
variable	dz equal (25.5139576628159-${delz})
variable	dz equal (25.5139576628159-18.0723596782068)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1554 16.6459656062895 1.61499842448817 18.0723596782068; Last coords: 18.0369558391062 7.40158033684413 25.5139576628159
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.00361552141035098 -0.00518399600524219 -0.00979381572812478 Last type: 2
group		del id ${lastatom}
group		del id 1556
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1555
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1554
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 1.3909902328167 ${dy} ${dz}
displace_atoms	delDisp move 1.3909902328167 5.78658191235596 ${dz}
displace_atoms	delDisp move 1.3909902328167 5.78658191235596 7.4415979846091
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1554 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1554 vx 0.00361552141035098 vy ${tvy} vz ${tvz}
set		atom 1554 vx 0.00361552141035098 vy -0.00518399600524219 vz ${tvz}
set		atom 1554 vx 0.00361552141035098 vy -0.00518399600524219 vz -0.00979381572812478
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1554 type ${ttyp}
set		atom 1554 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.81 | 73.2 | 73.71 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20200            0   -157271.73    1404.9791   -155866.75    30096.474    303.30847    3042.4802     5853.806    1130.5703    2143.0642      30.5776      30.5776      32.1891    2.3852788   -222805.53 
   20400           50   -157255.46    1370.4958   -155884.96    30096.474    295.86418     2191.021    6175.0312   -717.28926    1115.3209      30.5776      30.5776      32.1891    2.3852788    -222828.5 
Loop time of 2.7415 on 24 procs for 200 steps with 1555 atoms

Performance: 1.576 ns/day, 15.231 hours/ns, 72.953 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3007     | 2.3824     | 2.442      |   2.2 | 86.90
Neigh   | 0.009654   | 0.0098956  | 0.010087   |   0.1 |  0.36
Comm    | 0.018386   | 0.077861   | 0.1597     |  12.1 |  2.84
Output  | 0.001173   | 0.0046988  | 0.004854   |   1.1 |  0.17
Modify  | 0.26417    | 0.26463    | 0.26816    |   0.1 |  9.65
Other   |            | 0.002028   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 2 0 3 6 6 5 1
Nghost:    2375.58 ave 2402 max 2350 min
Histogram: 1 0 5 1 5 5 3 2 1 1
Neighs:    25459 ave 29386 max 18586 min
Histogram: 1 0 1 1 0 4 8 6 2 1

Total # of neighbors = 611015
Ave neighs/atom = 392.936
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157255.457549327-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157255.457549327--157345.638337461+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157255.457549327--157345.638337461+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.571822881698608
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157255.457549327; E_system:-157345.638337461;prob1:9.2782330655293e-27; prob2:0.571822881698608

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
110  30  1556  -157345.638337461  -157255.457549327  30096.4744337948  30096.4744337948  3146.0522973276  0.565239727497101  1  20  20  2  9.2782330655293e-27  0.571822881698608  delete fail  1554
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 110
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000774145 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.84 | 73.23 | 73.73 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20200            0   -157345.64    1407.4665   -155938.17    30096.474    303.65006     3146.052    6022.1808    1191.8033     2224.172      30.5776      30.5776      32.1891    2.3856618   -222857.17 
   20400           50   -157331.08    1373.4452   -155957.63    30096.474    296.31022    2485.7537    6545.1385   -389.81676    1301.9393      30.5776      30.5776      32.1891    2.3856618   -222909.51 
Loop time of 2.73963 on 24 procs for 200 steps with 1556 atoms

Performance: 1.577 ns/day, 15.220 hours/ns, 73.003 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3126     | 2.3831     | 2.4389     |   1.9 | 86.98
Neigh   | 0.00967    | 0.0099054  | 0.010064   |   0.1 |  0.36
Comm    | 0.018548   | 0.074175   | 0.14481    |  10.8 |  2.71
Output  | 0.001193   | 0.0046573  | 0.0048101  |   1.1 |  0.17
Modify  | 0.26542    | 0.26591    | 0.2693     |   0.1 |  9.71
Other   |            | 0.001927   |            |       |  0.07

Nlocal:    64.8333 ave 73 max 49 min
Histogram: 1 0 0 1 1 3 6 6 5 1
Nghost:    2376.54 ave 2403 max 2351 min
Histogram: 1 0 5 1 5 5 3 2 1 1
Neighs:    25492.3 ave 29397 max 18630 min
Histogram: 1 0 1 1 0 4 8 6 2 1

Total # of neighbors = 611815
Ave neighs/atom = 393.197
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157331.076753122
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2485.75366449631
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
110  20  -157331.076753122  -222909.514191951  -4828.32669271682  0  0  21907.3189802519  0  0  0  0  0  49836.8306293751  -265.588537580404  0  -1071.79694050087
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
110  20  -157331.076753122  1373.44515306006  -155957.631600062  30096.4744337948  296.310216553806  2485.75366449631  6545.13848379122  -389.816760346871  1301.93927004459  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
110  30  1556  -157331.076753122  -157331.076753122  30096.4744337948  30096.4744337948  2485.75366449631  0.565239727497101  1  20  20  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157331.076753122, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
110  30  1556  -157331.076753122  30096.4744337948  30096.4744337948  2485.75366449631  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 111, 30
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.712705075740814
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.712705075740814)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.712705075740814, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000718117 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 0.144042621141 ${ry} ${rz} units box
create_atoms	2 single 0.144042621141 16.0732307325 ${rz} units box
create_atoms	2 single 0.144042621141 16.0732307325 15.5659566718 units box
Created 1 atoms
  create_atoms CPU = 4.98295e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1557
print 		'ncreated is ${ncreated}'
ncreated is 1557
group		created id ${ncreated}
group		created id 1557
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0414084196090698-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0414084196090698-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.0414084196090698-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.152021944522858-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.152021944522858-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.152021944522858-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.875089943408966-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.875089943408966-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.875089943408966-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00952320925386281 ${rvy} ${rvz}
velocity	created set -0.00952320925386281 -0.00722618552053697 ${rvz}
velocity	created set -0.00952320925386281 -0.00722618552053697 0.00778919669013136
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.75 | 73.16 | 73.54 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20400            0   -157401.14    1375.1338      -156026    30096.474    296.48386    2496.1112    6603.6336   -382.28273    1266.9826      30.5776      30.5776      32.1891    2.3860448   -222961.05 
   20600           50   -157435.16    1385.3738   -156049.79    30096.474    298.69165    5611.2013    8429.7681    2588.9255    5814.9102      30.5776      30.5776      32.1891    2.3860448   -222905.96 
Loop time of 2.69862 on 24 procs for 200 steps with 1557 atoms

Performance: 1.601 ns/day, 14.992 hours/ns, 74.112 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2987     | 2.3641     | 2.401      |   1.6 | 87.61
Neigh   | 0.009691   | 0.0099182  | 0.010068   |   0.1 |  0.37
Comm    | 0.01791    | 0.054921   | 0.12039    |  10.7 |  2.04
Output  | 0.001133   | 0.0045777  | 0.0047309  |   1.1 |  0.17
Modify  | 0.26279    | 0.26324    | 0.26689    |   0.2 |  9.75
Other   |            | 0.001836   |            |       |  0.07

Nlocal:    64.875 ave 73 max 49 min
Histogram: 1 0 0 1 1 4 5 8 2 2
Nghost:    2381.83 ave 2407 max 2352 min
Histogram: 1 1 0 5 3 4 4 2 2 2
Neighs:    25524.3 ave 29371 max 18617 min
Histogram: 1 0 0 2 1 5 5 5 4 1

Total # of neighbors = 612584
Ave neighs/atom = 393.439
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157435.161811071-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157435.161811071--157331.076753122-${mu}))
variable	prob1 equal	(30096.4744337948/((1556+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157435.161811071--157331.076753122--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.907797813415527
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157435.161811071; E_system:-157331.076753122;prob1:1.44979620477296e+36; prob2:0.907797813415527

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1557
variable	E_system equal ${E_trial}
variable	E_system equal -157435.161811071
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 5611.20125026929
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
111  21  -157435.161811071  -222905.956344504  -4950.20380388844  0  0  21921.8815473411  0  0  0  0  0  49901.9014447377  -275.120785999939  0  -1127.66386875748
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
111  21  -157435.161811071  1385.37382203038  -156049.787989041  30096.4744337948  298.691650373463  5611.20125026929  8429.76809101375  2588.92545694847  5814.91020284565  30.5776  30.5776  32.1891  2.38604475598468
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
111  31  1557  -157435.161811071  -157435.161811071  30096.4744337948  30096.4744337948  5611.20125026929  0.712705075740814  2  21  21  3  1.44979620477296e+36  0.907797813415527  add pass  1557  0.144042621141  16.0732307325  15.5659566718 -0.00952320925386281  -0.00722618552053697  0.00778919669013136
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157435.161811071, total atoms are 1557
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
111  31  1557  -157435.161811071  30096.4744337948  30096.4744337948  5611.20125026929  1.44979620477296e+36  0.907797813415527
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 112, 31
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.220181226730347
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.220181226730347)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.220181226730347, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:21; n_GCMC:21
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.532309412956238*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.532309412956238*21)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1548
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1557 atoms
  read_restart CPU = 0.000863791 secs
group		disp id ${nMCmoved}
group		disp id 1548
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1548 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 2.76701651689 ${ry} ${rz} units box
displace_atoms	disp move 2.76701651689 -14.1687909865 ${rz} units box
displace_atoms	disp move 2.76701651689 -14.1687909865 -1.50437004902 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.9 | 73.25 | 73.78 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20600            0   -157414.36    1385.3738   -156028.99    30096.474    298.69165    5984.3856    9314.7807     2623.619     6014.757      30.5776      30.5776      32.1891    2.3860448   -222886.58 
   20800           50   -157448.36    1388.8742   -156059.48    30096.474    299.44634    3776.5481    6576.6391    2267.3243     2485.681      30.5776      30.5776      32.1891    2.3860448   -223007.91 
Loop time of 2.72201 on 24 procs for 200 steps with 1557 atoms

Performance: 1.587 ns/day, 15.122 hours/ns, 73.475 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2957     | 2.3654     | 2.4237     |   1.9 | 86.90
Neigh   | 0.00964    | 0.009882   | 0.010075   |   0.1 |  0.36
Comm    | 0.017994   | 0.076205   | 0.14617    |  10.4 |  2.80
Output  | 0.0011361  | 0.0046097  | 0.0047619  |   1.1 |  0.17
Modify  | 0.26346    | 0.26393    | 0.26745    |   0.1 |  9.70
Other   |            | 0.001981   |            |       |  0.07

Nlocal:    64.875 ave 72 max 52 min
Histogram: 1 0 1 1 2 1 5 7 2 4
Nghost:    2375.04 ave 2398 max 2348 min
Histogram: 1 0 2 3 3 4 7 1 0 3
Neighs:    25522.3 ave 29013 max 19683 min
Histogram: 1 1 1 0 2 3 7 5 2 2

Total # of neighbors = 612536
Ave neighs/atom = 393.408
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157448.355374199-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157448.355374199--157435.161811071))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0321699380874634
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157448.355374199; E_system:-157435.161811071;prob1:4086129561.82228; prob2:0.0321699380874634

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1557
variable	E_system equal ${E_trial}
variable	E_system equal -157448.355374199
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3776.54814880389
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
112  21  -157448.355374199  -223007.910032504  -4858.9889425721  0  0  21908.1326902549  0  0  0  0  0  49911.4094946539  -273.287497722306  0  -1127.71108630858
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
112  21  -157448.355374199  1388.87416744233  -156059.481206756  30096.4744337948  299.446337614803  3776.54814880389  6576.63911027446  2267.32433543098  2485.68100070623  30.5776  30.5776  32.1891  2.38604475598468
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
112  32  1557  -157448.355374199  -157448.355374199  30096.4744337948  30096.4744337948  3776.54814880389  0.220181226730347  0  21  21  1  4086129561.82228  0.0321699380874634  displace pass  1548  2.76701651689  -14.1687909865  -1.50437004902
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157448.355374199, total atoms are 1557
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
112  32  1557  -157448.355374199  30096.4744337948  30096.4744337948  3776.54814880389  4086129561.82228  0.0321699380874634
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 113, 32
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.403190433979034
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.403190433979034)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.403190433979034, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:21; n_GCMC:21
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.257431030273438*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.257431030273438*21)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1542
variable	lastatom equal ${n_system}
variable	lastatom equal 1557
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1557 atoms
  read_restart CPU = 0.000803947 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1557]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1557]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1557]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1557]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1557]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1557]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1557]
variable	tx equal ${lastx}
variable	tx equal 28.7604328593671
variable	ty equal ${lasty}
variable	ty equal 15.3130606460205
variable	tz equal ${lastz}
variable	tz equal 15.7649180445875
variable	tvx equal ${lastvx}
variable	tvx equal -0.0271974691930555
variable	tvy equal ${lastvy}
variable	tvy equal -0.0125701396920538
variable	tvz equal ${lastvz}
variable	tvz equal -0.00289340016177231
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1542]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1542]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1542]
variable	dx equal (${tx}-${delx})
variable	dx equal (28.7604328593671-${delx})
variable	dx equal (28.7604328593671-23.4554591403588)
variable	dy equal (${ty}-${dely})
variable	dy equal (15.3130606460205-${dely})
variable	dy equal (15.3130606460205-14.3791683841162)
variable	dz equal (${tz}-${delz})
variable	dz equal (15.7649180445875-${delz})
variable	dz equal (15.7649180445875-8.79128555455643)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1542 23.4554591403588 14.3791683841162 8.79128555455643; Last coords: 28.7604328593671 15.3130606460205 15.7649180445875
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0271974691930555 -0.0125701396920538 -0.00289340016177231 Last type: 2
group		del id ${lastatom}
group		del id 1557
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1556
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1542
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 5.3049737190083 ${dy} ${dz}
displace_atoms	delDisp move 5.3049737190083 0.933892261904299 ${dz}
displace_atoms	delDisp move 5.3049737190083 0.933892261904299 6.97363249003107
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1542 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1542 vx -0.0271974691930555 vy ${tvy} vz ${tvz}
set		atom 1542 vx -0.0271974691930555 vy -0.0125701396920538 vz ${tvz}
set		atom 1542 vx -0.0271974691930555 vy -0.0125701396920538 vz -0.00289340016177231
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1542 type ${ttyp}
set		atom 1542 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.8 | 73.15 | 73.54 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   20800            0   -157375.15    1387.3157   -155987.84    30096.474    299.30269    3597.9352    6260.3396     2132.613    2400.8531      30.5776      30.5776      32.1891    2.3856618   -222941.92 
   21000           50      -157409    1401.7869   -156007.22    30096.474    302.42473     89.30472   -313.34285    274.33999    306.91702      30.5776      30.5776      32.1891    2.3856618   -222689.11 
Loop time of 2.73568 on 24 procs for 200 steps with 1556 atoms

Performance: 1.579 ns/day, 15.198 hours/ns, 73.108 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3132     | 2.3768     | 2.4363     |   1.9 | 86.88
Neigh   | 0.009783   | 0.009981   | 0.010178   |   0.1 |  0.36
Comm    | 0.018697   | 0.077974   | 0.14182    |  10.3 |  2.85
Output  | 0.001153   | 0.0046518  | 0.004806   |   1.1 |  0.17
Modify  | 0.26375    | 0.26442    | 0.26764    |   0.1 |  9.67
Other   |            | 0.001899   |            |       |  0.07

Nlocal:    64.8333 ave 73 max 50 min
Histogram: 1 0 0 2 1 1 11 4 3 1
Nghost:    2383.5 ave 2416 max 2350 min
Histogram: 1 0 2 5 3 6 3 1 2 1
Neighs:    25491.5 ave 29420 max 19012 min
Histogram: 1 0 2 0 1 3 10 4 2 1

Total # of neighbors = 611797
Ave neighs/atom = 393.186
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1557*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1557*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1557*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1557*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1557*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157409.003407759-${E_system}+${mu}))
variable	prob1 equal	(1557*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157409.003407759--157448.355374199+${mu}))
variable	prob1 equal	(1557*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157409.003407759--157448.355374199+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.297793865203857
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157409.003407759; E_system:-157448.355374199;prob1:99032048749.415; prob2:0.297793865203857

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157409.003407759
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 89.3047200252292
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
113  20  -157409.003407759  -222689.106338208  -5003.65757451648  0  0  21699.2444614024  0  0  0  0  0  49914.3378798527  -254.3684097124  0  -1075.45342657728
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
113  20  -157409.003407759  1401.78689026929  -156007.216517489  30096.4744337948  302.424728131692  89.3047200252292  -313.34285059102  274.339988672215  306.917021994493  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log
113  33  1556  -157409.003407759  -157409.003407759  30096.4744337948  30096.4744337948  89.3047200252292  0.403190433979034  1  20  20  2  99032048749.415  0.297793865203857  delete  pass  1542
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157409.003407759, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
113  33  1556  -157409.003407759  30096.4744337948  30096.4744337948  89.3047200252292  99032048749.415  0.297793865203857
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 114, 33
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.279881536960602
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.279881536960602)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.279881536960602, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.0799100995063782*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.0799100995063782*20)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1538
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000716925 secs
group		disp id ${nMCmoved}
group		disp id 1538
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1538 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -3.3950647623 ${ry} ${rz} units box
displace_atoms	disp move -3.3950647623 0.504064998272 ${rz} units box
displace_atoms	disp move -3.3950647623 0.504064998272 23.9822217053 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.91 | 73.29 | 73.71 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21000            0   -157389.06    1401.7869   -155987.27    30096.474    302.42473    606.90407    189.25653      791.656    839.79968      30.5776      30.5776      32.1891    2.3856618   -222714.04 
   21200           50   -157344.97    1351.2874   -155993.68    30096.474    291.52985   -1702.0457   -491.75285    -2646.723   -1967.6612      30.5776      30.5776      32.1891    2.3856618   -222562.51 
Loop time of 2.69104 on 24 procs for 200 steps with 1556 atoms

Performance: 1.605 ns/day, 14.950 hours/ns, 74.321 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3049     | 2.3736     | 2.4029     |   1.6 | 88.20
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018269   | 0.0474     | 0.11629    |  11.2 |  1.76
Output  | 0.0011501  | 0.0045937  | 0.004745   |   1.1 |  0.17
Modify  | 0.26301    | 0.26359    | 0.26704    |   0.1 |  9.80
Other   |            | 0.001847   |            |       |  0.07

Nlocal:    64.8333 ave 73 max 49 min
Histogram: 1 0 0 1 2 1 7 7 4 1
Nghost:    2381.75 ave 2413 max 2352 min
Histogram: 1 0 3 4 4 6 2 2 1 1
Neighs:    25498.5 ave 29426 max 18634 min
Histogram: 1 0 1 1 1 2 7 9 1 1

Total # of neighbors = 611965
Ave neighs/atom = 393.294
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157344.969075859-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157344.969075859--157409.003407759))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.332789361476898
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157344.969075859; E_system:-157409.003407759;prob1:2.24881191851549e-47; prob2:0.332789361476898

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
114  33  1556  -157409.003407759  -157344.969075859  30096.4744337948  30096.4744337948  89.3047200252292  0.279881536960602  0  20  20  1  2.24881191851549e-47  0.332789361476898  displace fail  1538  -3.3950647623  0.504064998272  23.9822217053
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 115, 33
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0371811985969543
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0371811985969543)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0371811985969543, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.171169102191925*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.171169102191925*20)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1540
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000788927 secs
group		disp id ${nMCmoved}
group		disp id 1540
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1540 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1540 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1540 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 7.63368101082 ${ry} ${rz} units box
displace_atoms	disp move 7.63368101082 -8.62944207712 ${rz} units box
displace_atoms	disp move 7.63368101082 -8.62944207712 -14.0337391361 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.9 | 73.28 | 73.69 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21000            0    -157394.2    1401.7869   -155992.41    30096.474    302.42473    49.435426   -227.15753    224.87294    150.59087      30.5776      30.5776      32.1891    2.3856618   -222643.75 
   21200           50   -157346.52    1349.0394   -155997.48    30096.474    291.04487   -1064.0373     228.0115   -2218.7143   -1201.4091      30.5776      30.5776      32.1891    2.3856618   -222544.13 
Loop time of 2.68949 on 24 procs for 200 steps with 1556 atoms

Performance: 1.606 ns/day, 14.942 hours/ns, 74.364 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2959     | 2.3707     | 2.4032     |   1.9 | 88.15
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018058   | 0.050551   | 0.12548    |  13.4 |  1.88
Output  | 0.0011361  | 0.0046233  | 0.0047781  |   1.1 |  0.17
Modify  | 0.26132    | 0.26178    | 0.26533    |   0.1 |  9.73
Other   |            | 0.001864   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 50 min
Histogram: 1 0 0 1 2 1 7 6 3 3
Nghost:    2381.92 ave 2412 max 2355 min
Histogram: 1 1 5 3 3 6 1 2 1 1
Neighs:    25495.3 ave 29033 max 19024 min
Histogram: 1 0 1 1 1 2 7 8 2 1

Total # of neighbors = 611887
Ave neighs/atom = 393.244
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157346.521079196-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157346.521079196--157409.003407759))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0246261954307556
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157346.521079196; E_system:-157409.003407759;prob1:3.03783514841284e-46; prob2:0.0246261954307556

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
115  33  1556  -157409.003407759  -157346.521079196  30096.4744337948  30096.4744337948  89.3047200252292  0.0371811985969543  0  20  20  1  3.03783514841284e-46  0.0246261954307556  displace fail  1540  7.63368101082  -8.62944207712  -14.0337391361
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 115
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000786781 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.9 | 73.27 | 73.69 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21000            0      -157409    1401.7869   -156007.22    30096.474    302.42473    89.304919   -313.34306    274.34052    306.91731      30.5776      30.5776      32.1891    2.3856618   -222689.11 
   21200           50   -157355.21    1343.4119    -156011.8    30096.474    289.83077   -1121.8904    175.40423   -2104.2263   -1436.8492      30.5776      30.5776      32.1891    2.3856618   -222594.84 
Loop time of 2.70105 on 24 procs for 200 steps with 1556 atoms

Performance: 1.599 ns/day, 15.006 hours/ns, 74.045 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2952     | 2.3798     | 2.4148     |   1.9 | 88.11
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018187   | 0.053063   | 0.13782    |  13.0 |  1.96
Output  | 0.0011609  | 0.0045973  | 0.0047491  |   1.1 |  0.17
Modify  | 0.26133    | 0.26179    | 0.26519    |   0.1 |  9.69
Other   |            | 0.001804   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 49 min
Histogram: 1 0 0 1 2 1 7 6 3 3
Nghost:    2381.75 ave 2413 max 2353 min
Histogram: 1 0 3 4 4 6 2 2 1 1
Neighs:    25498.6 ave 29047 max 18634 min
Histogram: 1 0 1 1 1 2 6 8 2 2

Total # of neighbors = 611966
Ave neighs/atom = 393.294
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157355.214069805
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -1121.89043277807
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
115  20  -157355.214069805  -222594.837488958  -4977.89649589693  0  0  21684.5175596136  0  0  0  0  0  49863.2382364305  -255.0273287076  0  -1075.20855228615
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
115  20  -157355.214069805  1343.41189238414  -156011.802177421  30096.4744337948  289.830771812332  -1121.89043277807  175.404227867885  -2104.22634534559  -1436.84918085649  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
115  33  1556  -157355.214069805  -157355.214069805  30096.4744337948  30096.4744337948  -1121.89043277807  0.0371811985969543  0  20  20  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157355.214069805, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
115  33  1556  -157355.214069805  30096.4744337948  30096.4744337948  -1121.89043277807  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 116, 33
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.480863094329834
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.480863094329834)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.480863094329834, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.620854020118713*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.620854020118713*20)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1549
variable	lastatom equal ${n_system}
variable	lastatom equal 1556
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000783205 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1556]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1556]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1556]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1556]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1556]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1556]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1556]
variable	tx equal ${lastx}
variable	tx equal 16.2228125816487
variable	ty equal ${lasty}
variable	ty equal 7.54890678290422
variable	tz equal ${lastz}
variable	tz equal 24.1891998464569
variable	tvx equal ${lastvx}
variable	tvx equal -0.00455437356548222
variable	tvy equal ${lastvy}
variable	tvy equal 0.0111241348139104
variable	tvz equal ${lastvz}
variable	tvz equal 0.0111915558154938
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1549]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1549]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1549]
variable	dx equal (${tx}-${delx})
variable	dx equal (16.2228125816487-${delx})
variable	dx equal (16.2228125816487-30.3386074861613)
variable	dy equal (${ty}-${dely})
variable	dy equal (7.54890678290422-${dely})
variable	dy equal (7.54890678290422-3.81371699528137)
variable	dz equal (${tz}-${delz})
variable	dz equal (24.1891998464569-${delz})
variable	dz equal (24.1891998464569-19.3883556111324)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1549 30.3386074861613 3.81371699528137 19.3883556111324; Last coords: 16.2228125816487 7.54890678290422 24.1891998464569
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00455437356548222 0.0111241348139104 0.0111915558154938 Last type: 2
group		del id ${lastatom}
group		del id 1556
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1555
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1549
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -14.1157949045126 ${dy} ${dz}
displace_atoms	delDisp move -14.1157949045126 3.73518978762285 ${dz}
displace_atoms	delDisp move -14.1157949045126 3.73518978762285 4.8008442353245
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1549 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1549 vx -0.00455437356548222 vy ${tvy} vz ${tvz}
set		atom 1549 vx -0.00455437356548222 vy 0.0111241348139104 vz ${tvz}
set		atom 1549 vx -0.00455437356548222 vy 0.0111241348139104 vz 0.0111915558154938
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1549 type ${ttyp}
set		atom 1549 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.82 | 73.19 | 73.71 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21200            0   -157274.02     1341.097   -155932.92    30096.474    289.51753   -1029.9567    310.82959   -2035.5838   -1365.1159      30.5776      30.5776      32.1891    2.3852788   -222574.42 
   21400           50   -157311.97    1383.8236   -155928.14    30096.474     298.7414    1654.9201    4721.6602     724.4288   -481.32879      30.5776      30.5776      32.1891    2.3852788   -222876.54 
Loop time of 2.73299 on 24 procs for 200 steps with 1555 atoms

Performance: 1.581 ns/day, 15.183 hours/ns, 73.180 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2912     | 2.3757     | 2.4398     |   2.0 | 86.93
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.02008    | 0.083931   | 0.16843    |  10.8 |  3.07
Output  | 0.001157   | 0.0046083  | 0.0047612  |   1.1 |  0.17
Modify  | 0.26622    | 0.26689    | 0.27005    |   0.1 |  9.77
Other   |            | 0.001895   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 2 1 4 3 8 2 3
Nghost:    2377.83 ave 2402 max 2348 min
Histogram: 1 0 3 2 4 4 5 1 1 3
Neighs:    25460.1 ave 29077 max 18561 min
Histogram: 1 0 1 1 1 4 6 4 3 3

Total # of neighbors = 611043
Ave neighs/atom = 392.954
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157311.967656738-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157311.967656738--157355.214069805+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157311.967656738--157355.214069805+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.694106876850128
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157311.967656738; E_system:-157355.214069805;prob1:144029349.764753; prob2:0.694106876850128

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157311.967656738
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1654.92005595089
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
116  19  -157311.967656738  -222876.53950477  -4952.22245027686  0  0  21918.789196516  0  0  0  0  0  49866.9906077597  -247.160904353243  0  -1021.82460161461
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
116  19  -157311.967656738  1383.82359059385  -155928.144066144  30096.4744337948  298.741401196803  1654.92005595089  4721.66016488231  724.428796565597  -481.32879359524  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log
116  34  1555  -157311.967656738  -157311.967656738  30096.4744337948  30096.4744337948  1654.92005595089  0.480863094329834  1  19  19  2  144029349.764753  0.694106876850128  delete  pass  1549
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157311.967656738, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
116  34  1555  -157311.967656738  30096.4744337948  30096.4744337948  1654.92005595089  144029349.764753  0.694106876850128
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 117, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.38288813829422
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.38288813829422)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.38288813829422, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.577372968196869*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.577372968196869*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1547
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000790119 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 3.92176829694239
variable	ty equal ${lasty}
variable	ty equal 24.0986527296155
variable	tz equal ${lastz}
variable	tz equal 12.5872328953134
variable	tvx equal ${lastvx}
variable	tvx equal -0.0036178095808188
variable	tvy equal ${lastvy}
variable	tvy equal 0.00938742450259512
variable	tvz equal ${lastvz}
variable	tvz equal -0.0105974046091418
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1547]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1547]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1547]
variable	dx equal (${tx}-${delx})
variable	dx equal (3.92176829694239-${delx})
variable	dx equal (3.92176829694239-4.76538186242771)
variable	dy equal (${ty}-${dely})
variable	dy equal (24.0986527296155-${dely})
variable	dy equal (24.0986527296155-16.3313203272436)
variable	dz equal (${tz}-${delz})
variable	dz equal (12.5872328953134-${delz})
variable	dz equal (12.5872328953134-2.79808397500886)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1547 4.76538186242771 16.3313203272436 2.79808397500886; Last coords: 3.92176829694239 24.0986527296155 12.5872328953134
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0036178095808188 0.00938742450259512 -0.0105974046091418 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1547
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -0.84361356548532 ${dy} ${dz}
displace_atoms	delDisp move -0.84361356548532 7.7673324023719 ${dz}
displace_atoms	delDisp move -0.84361356548532 7.7673324023719 9.78914892030454
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx -0.0036178095808188 vy ${tvy} vz ${tvz}
set		atom 1547 vx -0.0036178095808188 vy 0.00938742450259512 vz ${tvz}
set		atom 1547 vx -0.0036178095808188 vy 0.00938742450259512 vz -0.0105974046091418
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1547 type ${ttyp}
set		atom 1547 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.79 | 73.18 | 73.58 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21400            0   -157228.89    1382.9969   -155845.89    30096.474    298.75519    1810.9207    5168.8766    870.84751   -606.96213      30.5776      30.5776      32.1891    2.3848959   -222830.07 
   21600           50   -157209.47    1371.9589   -155837.51    30096.474    296.37075    1926.8725    5382.0691   -1125.0262    1523.5747      30.5776      30.5776      32.1891    2.3848959   -222664.49 
Loop time of 2.72045 on 24 procs for 200 steps with 1554 atoms

Performance: 1.588 ns/day, 15.114 hours/ns, 73.517 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2971     | 2.3719     | 2.4284     |   1.8 | 87.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018305   | 0.074571   | 0.14926    |  10.2 |  2.74
Output  | 0.0011852  | 0.0046206  | 0.0047741  |   1.1 |  0.17
Modify  | 0.26679    | 0.26742    | 0.27077    |   0.1 |  9.83
Other   |            | 0.001969   |            |       |  0.07

Nlocal:    64.75 ave 73 max 50 min
Histogram: 1 0 1 2 0 2 9 4 1 4
Nghost:    2377.5 ave 2404 max 2353 min
Histogram: 1 0 5 4 2 5 2 4 0 1
Neighs:    25421.6 ave 28762 max 18969 min
Histogram: 1 0 2 1 0 2 7 6 1 4

Total # of neighbors = 610118
Ave neighs/atom = 392.611
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157209.465903035-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157209.465903035--157311.967656738+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157209.465903035--157311.967656738+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0692118406295776
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157209.465903035; E_system:-157311.967656738;prob1:9.80726999470603e-36; prob2:0.0692118406295776

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
117  34  1555  -157311.967656738  -157209.465903035  30096.4744337948  30096.4744337948  1654.92005595089  0.38288813829422  1  19  19  2  9.80726999470603e-36  0.0692118406295776  delete fail  1547
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 118, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.76350063085556
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.76350063085556)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.76350063085556, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000948906 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 9.23129447691 ${ry} ${rz} units box
create_atoms	2 single 9.23129447691 2.44472295846 ${rz} units box
create_atoms	2 single 9.23129447691 2.44472295846 12.4943908243 units box
Created 1 atoms
  create_atoms CPU = 5.4121e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.277099609375-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.277099609375-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.277099609375-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0834794640541077-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0834794640541077-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.0834794640541077-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.815401911735535-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.815401911735535-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.815401911735535-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.00462879641375033 ${rvy} ${rvz}
velocity	created set -0.00462879641375033 -0.00864955309245418 ${rvz}
velocity	created set -0.00462879641375033 -0.00864955309245418 0.00654970246502431
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.88 | 73.26 | 73.68 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21400            0   -157377.46    1384.9777   -155992.48    30096.474    298.79828     1752.792     4903.799    876.50227   -521.92511      30.5776      30.5776      32.1891    2.3856618   -222954.07 
   21600           50    -157364.2    1379.5609   -155984.64    30096.474    297.62964     1824.228    4982.7455   -952.27803    1442.2166      30.5776      30.5776      32.1891    2.3856618   -222829.94 
Loop time of 2.71365 on 24 procs for 200 steps with 1556 atoms

Performance: 1.592 ns/day, 15.076 hours/ns, 73.702 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2949     | 2.3662     | 2.4226     |   1.8 | 87.19
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018544   | 0.074668   | 0.1461     |  10.1 |  2.75
Output  | 0.0011811  | 0.0046289  | 0.0047858  |   1.1 |  0.17
Modify  | 0.26569    | 0.26629    | 0.26947    |   0.1 |  9.81
Other   |            | 0.001901   |            |       |  0.07

Nlocal:    64.8333 ave 73 max 50 min
Histogram: 1 0 1 2 0 2 9 4 1 4
Nghost:    2380.79 ave 2408 max 2356 min
Histogram: 1 0 5 4 2 5 3 3 0 1
Neighs:    25486.8 ave 28842 max 18998 min
Histogram: 1 0 1 2 0 3 6 6 1 4

Total # of neighbors = 611683
Ave neighs/atom = 393.112
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157364.197500612-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157364.197500612--157311.967656738-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157364.197500612--157311.967656738--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.807148933410645
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157364.197500612; E_system:-157311.967656738;prob1:0.0243132554592599; prob2:0.807148933410645

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
118  34  1555  -157311.967656738  -157364.197500612  30096.4744337948  30096.4744337948  1654.92005595089  0.76350063085556  2  19  19  3  0.0243132554592599  0.807148933410645  add fail  1556  9.23129447691  2.44472295846  12.4943908243 -0.00462879641375033  -0.00864955309245418  0.00654970246502431
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 119, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.655636727809906
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.655636727809906)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.655636727809906, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.723239064216614*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.723239064216614*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1550
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000975847 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 3.92176829694239
variable	ty equal ${lasty}
variable	ty equal 24.0986527296155
variable	tz equal ${lastz}
variable	tz equal 12.5872328953134
variable	tvx equal ${lastvx}
variable	tvx equal -0.0036178095808188
variable	tvy equal ${lastvy}
variable	tvy equal 0.00938742450259512
variable	tvz equal ${lastvz}
variable	tvz equal -0.0105974046091418
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1550]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1550]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1550]
variable	dx equal (${tx}-${delx})
variable	dx equal (3.92176829694239-${delx})
variable	dx equal (3.92176829694239-17.0099679049361)
variable	dy equal (${ty}-${dely})
variable	dy equal (24.0986527296155-${dely})
variable	dy equal (24.0986527296155-22.6682972746009)
variable	dz equal (${tz}-${delz})
variable	dz equal (12.5872328953134-${delz})
variable	dz equal (12.5872328953134-27.799655225068)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1550 17.0099679049361 22.6682972746009 27.799655225068; Last coords: 3.92176829694239 24.0986527296155 12.5872328953134
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0036178095808188 0.00938742450259512 -0.0105974046091418 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1550
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -13.0881996079937 ${dy} ${dz}
displace_atoms	delDisp move -13.0881996079937 1.4303554550146 ${dz}
displace_atoms	delDisp move -13.0881996079937 1.4303554550146 -15.2124223297546
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1550 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1550 vx -0.0036178095808188 vy ${tvy} vz ${tvz}
set		atom 1550 vx -0.0036178095808188 vy 0.00938742450259512 vz ${tvz}
set		atom 1550 vx -0.0036178095808188 vy 0.00938742450259512 vz -0.0105974046091418
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1550 type ${ttyp}
set		atom 1550 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.81 | 73.17 | 73.6 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21400            0   -157238.47    1383.1731   -155855.29    30096.474    298.79325    1571.1836    4606.1314    620.19262   -512.77333      30.5776      30.5776      32.1891    2.3848959   -222823.17 
   21600           50   -157214.69    1367.9359   -155846.75    30096.474     295.5017    1479.8549    4865.3864   -1284.3819    858.56025      30.5776      30.5776      32.1891    2.3848959   -222678.39 
Loop time of 2.72478 on 24 procs for 200 steps with 1554 atoms

Performance: 1.585 ns/day, 15.138 hours/ns, 73.400 timesteps/s
98.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2994     | 2.3693     | 2.4317     |   1.7 | 86.95
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01845    | 0.080788   | 0.15069    |   9.3 |  2.96
Output  | 0.0011599  | 0.0046118  | 0.0047669  |   1.1 |  0.17
Modify  | 0.26769    | 0.26822    | 0.27159    |   0.1 |  9.84
Other   |            | 0.001904   |            |       |  0.07

Nlocal:    64.75 ave 73 max 50 min
Histogram: 1 0 1 2 1 1 9 4 1 4
Nghost:    2377.33 ave 2402 max 2353 min
Histogram: 1 0 4 4 3 5 2 3 1 1
Neighs:    25420.2 ave 28778 max 18970 min
Histogram: 1 0 2 1 0 4 5 6 1 4

Total # of neighbors = 610086
Ave neighs/atom = 392.591
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157214.686638569-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157214.686638569--157311.967656738+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157214.686638569--157311.967656738+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.161556422710419
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157214.686638569; E_system:-157311.967656738;prob1:6.23412317947812e-32; prob2:0.161556422710419

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
119  34  1555  -157311.967656738  -157214.686638569  30096.4744337948  30096.4744337948  1654.92005595089  0.655636727809906  1  19  19  2  6.23412317947812e-32  0.161556422710419  delete fail  1550
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 120, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.701316297054291
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.701316297054291)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.701316297054291, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000941038 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 25.821028158 ${ry} ${rz} units box
create_atoms	2 single 25.821028158 6.34551695871 ${rz} units box
create_atoms	2 single 25.821028158 6.34551695871 6.11639905237 units box
Created 1 atoms
  create_atoms CPU = 4.79221e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.997923791408539-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.997923791408539-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.997923791408539-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.342146873474121-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.342146873474121-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.342146873474121-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0906703472137451-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.0906703472137451-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.0906703472137451-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.0103399902240203 ${rvy} ${rvz}
velocity	created set 0.0103399902240203 -0.00327801124041779 ${rvz}
velocity	created set 0.0103399902240203 -0.00327801124041779 -0.00850022569967708
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.87 | 73.25 | 73.65 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21400            0   -157362.65    1385.3989   -155977.25    30096.474    298.88914    2092.4946    5276.4857    1072.2336   -71.235598      30.5776      30.5776      32.1891    2.3856618   -222955.41 
   21600           50   -157356.32    1385.2087   -155971.11    30096.474    298.84811    2202.5201     5337.106   -147.10946    1417.5639      30.5776      30.5776      32.1891    2.3856618   -222813.21 
Loop time of 2.70907 on 24 procs for 200 steps with 1556 atoms

Performance: 1.595 ns/day, 15.050 hours/ns, 73.826 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3031     | 2.3677     | 2.408      |   1.7 | 87.40
Neigh   | 0.009654   | 0.009874   | 0.010047   |   0.1 |  0.36
Comm    | 0.018394   | 0.05858    | 0.1233     |  10.6 |  2.16
Output  | 0.001142   | 0.0046052  | 0.0047588  |   1.1 |  0.17
Modify  | 0.26599    | 0.26643    | 0.26987    |   0.1 |  9.83
Other   |            | 0.001889   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 49 min
Histogram: 1 0 0 1 2 1 6 6 4 3
Nghost:    2375.38 ave 2406 max 2349 min
Histogram: 1 0 3 6 3 7 1 2 0 1
Neighs:    25489.1 ave 28975 max 18613 min
Histogram: 1 0 0 2 1 2 6 7 3 2

Total # of neighbors = 611739
Ave neighs/atom = 393.148
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157356.317657429-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157356.317657429--157311.967656738-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157356.317657429--157311.967656738--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.634061634540558
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157356.317657429; E_system:-157311.967656738;prob1:4.42075016188913e-08; prob2:0.634061634540558

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
120  34  1555  -157311.967656738  -157356.317657429  30096.4744337948  30096.4744337948  1654.92005595089  0.701316297054291  2  19  19  3  4.42075016188913e-08  0.634061634540558  add fail  1556  25.821028158  6.34551695871  6.11639905237 0.0103399902240203  -0.00327801124041779  -0.00850022569967708
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 120
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.00087285 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.83 | 73.22 | 73.63 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21400            0   -157311.97    1383.8236   -155928.14    30096.474     298.7414    1654.9202    4721.6602    724.42885   -481.32854      30.5776      30.5776      32.1891    2.3852788   -222876.54 
   21600           50   -157287.28    1367.8908   -155919.39    30096.474    295.30181    1693.3512    5043.3751   -1134.3543    1171.0328      30.5776      30.5776      32.1891    2.3852788   -222727.38 
Loop time of 2.70129 on 24 procs for 200 steps with 1555 atoms

Performance: 1.599 ns/day, 15.007 hours/ns, 74.039 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3043     | 2.3728     | 2.4121     |   1.5 | 87.84
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018106   | 0.057459   | 0.12587    |   9.3 |  2.13
Output  | 0.0011559  | 0.0046404  | 0.0047939  |   1.1 |  0.17
Modify  | 0.26416    | 0.26456    | 0.26811    |   0.1 |  9.79
Other   |            | 0.001843   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 50 min
Histogram: 1 0 1 2 0 2 9 4 1 4
Nghost:    2378.96 ave 2406 max 2354 min
Histogram: 1 0 5 3 3 5 3 3 0 1
Neighs:    25454.2 ave 28807 max 18970 min
Histogram: 1 0 2 1 0 3 6 6 1 4

Total # of neighbors = 610902
Ave neighs/atom = 392.863
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157287.276935538
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1693.35120440649
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
120  19  -157287.276935538  -222727.380286376  -4980.2634680115  0  0  21841.8348568519  0  0  0  0  0  49849.1479106798  -249.400710238406  0  -1021.21523844383
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
120  19  -157287.276935538  1367.89080744045  -155919.386128098  30096.4744337948  295.301813957096  1693.35120440649  5043.37513019864  -1134.35433294567  1171.0328159665  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
120  34  1555  -157287.276935538  -157287.276935538  30096.4744337948  30096.4744337948  1693.35120440649  0.701316297054291  2  19  19  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157287.276935538, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
120  34  1555  -157287.276935538  30096.4744337948  30096.4744337948  1693.35120440649  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 121, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.167681455612183
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.167681455612183)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.167681455612183, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.284355401992798*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.284355401992798*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1542
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000745058 secs
group		disp id ${nMCmoved}
group		disp id 1542
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -23.5430984982 ${ry} ${rz} units box
displace_atoms	disp move -23.5430984982 -1.80478706525 ${rz} units box
displace_atoms	disp move -23.5430984982 -1.80478706525 -10.2597046636 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.92 | 73.17 | 73.52 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21600            0   -157285.08    1367.8908   -155917.19    30096.474    295.30181    1655.2856    5017.0163   -1216.8312    1165.6718      30.5776      30.5776      32.1891    2.3852788   -222733.74 
   21800           50   -157255.34    1348.6144   -155906.73    30096.474     291.1404    2960.6244    5840.4796    614.72897    2426.6648      30.5776      30.5776      32.1891    2.3852788    -222603.7 
Loop time of 2.70376 on 24 procs for 200 steps with 1555 atoms

Performance: 1.598 ns/day, 15.021 hours/ns, 73.971 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.295      | 2.3656     | 2.4048     |   1.6 | 87.49
Neigh   | 0.0096748  | 0.0099004  | 0.01011    |   0.1 |  0.37
Comm    | 0.01791    | 0.057277   | 0.12788    |  10.0 |  2.12
Output  | 0.0011442  | 0.0046114  | 0.0047641  |   1.1 |  0.17
Modify  | 0.26405    | 0.26454    | 0.26836    |   0.2 |  9.78
Other   |            | 0.001833   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 51 min
Histogram: 1 1 0 0 2 3 5 4 5 3
Nghost:    2374.67 ave 2403 max 2340 min
Histogram: 1 1 0 3 6 4 1 4 3 1
Neighs:    25451.8 ave 28984 max 19307 min
Histogram: 1 1 0 1 1 4 6 4 5 1

Total # of neighbors = 610843
Ave neighs/atom = 392.825
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157255.344764214-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157255.344764214--157287.276935538))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.142925620079041
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157255.344764214; E_system:-157287.276935538;prob1:5.46882306603485e-24; prob2:0.142925620079041

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
121  34  1555  -157287.276935538  -157255.344764214  30096.4744337948  30096.4744337948  1693.35120440649  0.167681455612183  0  19  19  1  5.46882306603485e-24  0.142925620079041  displace fail  1542  -23.5430984982  -1.80478706525  -10.2597046636
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 122, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.466625332832336
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.466625332832336)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.466625332832336, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.153086006641388*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.153086006641388*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1539
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000801086 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 3.89776340957879
variable	ty equal ${lasty}
variable	ty equal 24.3266154574841
variable	tz equal ${lastz}
variable	tz equal 12.2951556339215
variable	tvx equal ${lastvx}
variable	tvx equal -0.0014505321734847
variable	tvy equal ${lastvy}
variable	tvy equal -0.000539820232899204
variable	tvz equal ${lastvz}
variable	tvz equal 0.000487971044193463
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1539]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1539]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1539]
variable	dx equal (${tx}-${delx})
variable	dx equal (3.89776340957879-${delx})
variable	dx equal (3.89776340957879-6.22512782873923)
variable	dy equal (${ty}-${dely})
variable	dy equal (24.3266154574841-${dely})
variable	dy equal (24.3266154574841-29.3916578560453)
variable	dz equal (${tz}-${delz})
variable	dz equal (12.2951556339215-${delz})
variable	dz equal (12.2951556339215-29.999433942355)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1539 6.22512782873923 29.3916578560453 29.999433942355; Last coords: 3.89776340957879 24.3266154574841 12.2951556339215
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0014505321734847 -0.000539820232899204 0.000487971044193463 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1539
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -2.32736441916044 ${dy} ${dz}
displace_atoms	delDisp move -2.32736441916044 -5.0650423985612 ${dz}
displace_atoms	delDisp move -2.32736441916044 -5.0650423985612 -17.7042783084335
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1539 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1539 vx -0.0014505321734847 vy ${tvy} vz ${tvz}
set		atom 1539 vx -0.0014505321734847 vy -0.000539820232899204 vz ${tvz}
set		atom 1539 vx -0.0014505321734847 vy -0.000539820232899204 vz 0.000487971044193463
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1539 type ${ttyp}
set		atom 1539 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.86 | 73.1 | 73.43 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21600            0   -157211.34    1367.4002   -155843.94    30096.474    295.38599     1405.569    4835.5905   -1437.8303    818.94689      30.5776      30.5776      32.1891    2.3848959   -222635.99 
   21800           50   -157184.25    1350.6296   -155833.62    30096.474    291.76319      3141.62    7055.5101    168.50582    2200.8441      30.5776      30.5776      32.1891    2.3848959    -222435.9 
Loop time of 2.69387 on 24 procs for 200 steps with 1554 atoms

Performance: 1.604 ns/day, 14.966 hours/ns, 74.243 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.294      | 2.3589     | 2.3941     |   1.5 | 87.57
Neigh   | 0.0096781  | 0.0098973  | 0.010106   |   0.1 |  0.37
Comm    | 0.017717   | 0.0533     | 0.11832    |   9.8 |  1.98
Output  | 0.001128   | 0.0045791  | 0.0047309  |   1.1 |  0.17
Modify  | 0.26473    | 0.26534    | 0.26938    |   0.2 |  9.85
Other   |            | 0.001866   |            |       |  0.07

Nlocal:    64.75 ave 71 max 51 min
Histogram: 1 0 1 0 0 4 3 6 5 4
Nghost:    2372.67 ave 2403 max 2340 min
Histogram: 1 1 1 4 6 2 3 4 1 1
Neighs:    25418.7 ave 28546 max 19320 min
Histogram: 1 1 0 0 1 5 6 3 6 1

Total # of neighbors = 610048
Ave neighs/atom = 392.566
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157184.25258983-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157184.25258983--157287.276935538+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157184.25258983--157287.276935538+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.411194801330566
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157184.25258983; E_system:-157287.276935538;prob1:4.08176241808106e-36; prob2:0.411194801330566

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
122  34  1555  -157287.276935538  -157184.25258983  30096.4744337948  30096.4744337948  1693.35120440649  0.466625332832336  1  19  19  2  4.08176241808106e-36  0.411194801330566  delete fail  1539
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 123, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.679976880550385
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.679976880550385)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.679976880550385, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000721931 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 27.4301543828 ${ry} ${rz} units box
create_atoms	2 single 27.4301543828 24.1987116252 ${rz} units box
create_atoms	2 single 27.4301543828 24.1987116252 17.751316503 units box
Created 1 atoms
  create_atoms CPU = 5.00679e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.973508238792419-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.973508238792419-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.973508238792419-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.3088618516922-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.3088618516922-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.3088618516922-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.674759089946747-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.674759089946747-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.674759089946747-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00983297172094664 ${rvy} ${rvz}
velocity	created set 0.00983297172094664 -0.0039692150064756 ${rvz}
velocity	created set 0.00983297172094664 -0.0039692150064756 0.00362908403411765
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.96 | 73.18 | 73.5 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21600            0   -157347.79    1368.9327   -155978.86    30096.474    295.33669    1821.8876    5204.1178   -1131.2795    1392.8245      30.5776      30.5776      32.1891    2.3856618   -222790.52 
   21800           50   -157321.45    1352.5725   -155968.88    30096.474    291.80711    3727.5312    7378.5543    1024.4705    2779.5686      30.5776      30.5776      32.1891    2.3856618    -222637.9 
Loop time of 2.68951 on 24 procs for 200 steps with 1556 atoms

Performance: 1.606 ns/day, 14.942 hours/ns, 74.363 timesteps/s
99.1% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2991     | 2.3624     | 2.3909     |   1.4 | 87.84
Neigh   | 0.0096881  | 0.0099122  | 0.010083   |   0.1 |  0.37
Comm    | 0.017822   | 0.046513   | 0.11001    |  10.3 |  1.73
Output  | 0.0011361  | 0.0046242  | 0.0047791  |   1.1 |  0.17
Modify  | 0.2636     | 0.26416    | 0.268      |   0.2 |  9.82
Other   |            | 0.001854   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 51 min
Histogram: 1 1 0 0 2 3 5 5 4 3
Nghost:    2376.38 ave 2408 max 2342 min
Histogram: 1 1 1 4 6 3 3 3 1 1
Neighs:    25482.9 ave 28989 max 19337 min
Histogram: 1 1 0 1 1 3 8 3 5 1

Total # of neighbors = 611590
Ave neighs/atom = 393.053
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157321.454940016-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157321.454940016--157287.276935538-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157321.454940016--157287.276935538--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.748947024345398
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157321.454940016; E_system:-157287.276935538;prob1:1.71929282885974e-15; prob2:0.748947024345398

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
123  34  1555  -157287.276935538  -157321.454940016  30096.4744337948  30096.4744337948  1693.35120440649  0.679976880550385  2  19  19  3  1.71929282885974e-15  0.748947024345398  add fail  1556  27.4301543828  24.1987116252  17.751316503 0.00983297172094664  -0.0039692150064756  0.00362908403411765
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 124, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.641370534896851
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.641370534896851)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.641370534896851, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.95081239938736*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.95081239938736*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1555
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000790834 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 3.89776340957879
variable	ty equal ${lasty}
variable	ty equal 24.3266154574841
variable	tz equal ${lastz}
variable	tz equal 12.2951556339215
variable	tvx equal ${lastvx}
variable	tvx equal -0.0014505321734847
variable	tvy equal ${lastvy}
variable	tvy equal -0.000539820232899204
variable	tvz equal ${lastvz}
variable	tvz equal 0.000487971044193463
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1555]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1555]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1555]
variable	dx equal (${tx}-${delx})
variable	dx equal (3.89776340957879-${delx})
variable	dx equal (3.89776340957879-3.89776340957879)
variable	dy equal (${ty}-${dely})
variable	dy equal (24.3266154574841-${dely})
variable	dy equal (24.3266154574841-24.3266154574841)
variable	dz equal (${tz}-${delz})
variable	dz equal (12.2951556339215-${delz})
variable	dz equal (12.2951556339215-12.2951556339215)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1555 3.89776340957879 24.3266154574841 12.2951556339215; Last coords: 3.89776340957879 24.3266154574841 12.2951556339215
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0014505321734847 -0.000539820232899204 0.000487971044193463 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1555
0 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 0 ${dy} ${dz}
displace_atoms	delDisp move 0 0 ${dz}
displace_atoms	delDisp move 0 0 0
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1555 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1555 vx -0.0014505321734847 vy ${tvy} vz ${tvz}
set		atom 1555 vx -0.0014505321734847 vy -0.000539820232899204 vz ${tvz}
set		atom 1555 vx -0.0014505321734847 vy -0.000539820232899204 vz 0.000487971044193463
  0 settings made for vx
  0 settings made for vy
  0 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1555 type ${ttyp}
set		atom 1555 type 2
  0 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.86 | 73.1 | 73.43 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21600            0   -157211.65     1367.869   -155843.78    30096.474    295.48724    1611.3121    4925.0743   -1184.7484    1093.6104      30.5776      30.5776      32.1891    2.3848959   -222677.22 
   21800           50   -157179.39     1346.237   -155833.15    30096.474     290.8143    2783.7693    6581.7821   -17.368511    1786.8944      30.5776      30.5776      32.1891    2.3848959   -222522.66 
Loop time of 2.69138 on 24 procs for 200 steps with 1554 atoms

Performance: 1.605 ns/day, 14.952 hours/ns, 74.311 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.287      | 2.3574     | 2.3931     |   1.6 | 87.59
Neigh   | 0.0097001  | 0.0098988  | 0.010071   |   0.1 |  0.37
Comm    | 0.017775   | 0.053743   | 0.12423    |  10.3 |  2.00
Output  | 0.0011401  | 0.0045892  | 0.004741   |   1.1 |  0.17
Modify  | 0.26332    | 0.26393    | 0.26787    |   0.2 |  9.81
Other   |            | 0.00184    |            |       |  0.07

Nlocal:    64.75 ave 72 max 51 min
Histogram: 1 1 0 0 2 3 6 4 4 3
Nghost:    2372.46 ave 2400 max 2339 min
Histogram: 1 1 0 3 6 4 1 4 3 1
Neighs:    25419.9 ave 28974 max 19317 min
Histogram: 1 1 0 1 1 4 8 2 5 1

Total # of neighbors = 610077
Ave neighs/atom = 392.585
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157179.387530084-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157179.387530084--157287.276935538+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157179.387530084--157287.276935538+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.777092456817627
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157179.387530084; E_system:-157287.276935538;prob1:1.16607083338855e-39; prob2:0.777092456817627

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
124  34  1555  -157287.276935538  -157179.387530084  30096.4744337948  30096.4744337948  1693.35120440649  0.641370534896851  1  19  19  2  1.16607083338855e-39  0.777092456817627  delete fail  1555
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 125, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.420374989509583
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.420374989509583)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.420374989509583, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.612931787967682*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.612931787967682*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1548
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000729084 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 3.89776340957879
variable	ty equal ${lasty}
variable	ty equal 24.3266154574841
variable	tz equal ${lastz}
variable	tz equal 12.2951556339215
variable	tvx equal ${lastvx}
variable	tvx equal -0.0014505321734847
variable	tvy equal ${lastvy}
variable	tvy equal -0.000539820232899204
variable	tvz equal ${lastvz}
variable	tvz equal 0.000487971044193463
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1548]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1548]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1548]
variable	dx equal (${tx}-${delx})
variable	dx equal (3.89776340957879-${delx})
variable	dx equal (3.89776340957879-24.9323795919448)
variable	dy equal (${ty}-${dely})
variable	dy equal (24.3266154574841-${dely})
variable	dy equal (24.3266154574841-4.41280780435485)
variable	dz equal (${tz}-${delz})
variable	dz equal (12.2951556339215-${delz})
variable	dz equal (12.2951556339215-9.92895070367326)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1548 24.9323795919448 4.41280780435485 9.92895070367326; Last coords: 3.89776340957879 24.3266154574841 12.2951556339215
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.0014505321734847 -0.000539820232899204 0.000487971044193463 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1548
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -21.034616182366 ${dy} ${dz}
displace_atoms	delDisp move -21.034616182366 19.9138076531292 ${dz}
displace_atoms	delDisp move -21.034616182366 19.9138076531292 2.36620493024824
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1548 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1548 vx -0.0014505321734847 vy ${tvy} vz ${tvz}
set		atom 1548 vx -0.0014505321734847 vy -0.000539820232899204 vz ${tvz}
set		atom 1548 vx -0.0014505321734847 vy -0.000539820232899204 vz 0.000487971044193463
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1548 type ${ttyp}
set		atom 1548 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.86 | 73.11 | 73.45 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21600            0   -157208.93    1363.7574   -155845.17    30096.474    294.59907    1904.5546    4623.7075    19.025158    1070.9311      30.5776      30.5776      32.1891    2.3848959   -222694.01 
   21800           50   -157175.79    1342.6214   -155833.17    30096.474    290.03326    3765.3551    7463.2038     1165.729    2667.1325      30.5776      30.5776      32.1891    2.3848959   -222565.51 
Loop time of 2.69354 on 24 procs for 200 steps with 1554 atoms

Performance: 1.604 ns/day, 14.964 hours/ns, 74.252 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2869     | 2.3662     | 2.4045     |   1.7 | 87.85
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017891   | 0.056242   | 0.13581    |  11.3 |  2.09
Output  | 0.001142   | 0.0046397  | 0.0047929  |   1.1 |  0.17
Modify  | 0.26411    | 0.26457    | 0.26814    |   0.1 |  9.82
Other   |            | 0.001896   |            |       |  0.07

Nlocal:    64.75 ave 72 max 48 min
Histogram: 1 0 0 1 1 2 6 4 5 4
Nghost:    2375.08 ave 2406 max 2349 min
Histogram: 1 0 6 3 5 3 3 1 1 1
Neighs:    25430.9 ave 28986 max 18214 min
Histogram: 1 0 1 0 2 2 7 4 6 1

Total # of neighbors = 610341
Ave neighs/atom = 392.755
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157175.790684929-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157175.790684929--157287.276935538+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157175.790684929--157287.276935538+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.499301552772522
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157175.790684929; E_system:-157287.276935538;prob1:2.79561512411073e-42; prob2:0.499301552772522

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
125  34  1555  -157287.276935538  -157175.790684929  30096.4744337948  30096.4744337948  1693.35120440649  0.420374989509583  1  19  19  2  2.79561512411073e-42  0.499301552772522  delete fail  1548
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 125
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000723124 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.91 | 73.15 | 73.48 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21600            0   -157287.28    1367.8908   -155919.39    30096.474    295.30181    1693.3514    5043.3756   -1134.3541    1171.0328      30.5776      30.5776      32.1891    2.3852788   -222727.38 
   21800           50   -157255.61    1347.2284   -155908.38    30096.474    290.84118    3366.5377    7056.4641    583.51278    2459.6362      30.5776      30.5776      32.1891    2.3852788   -222576.24 
Loop time of 2.70304 on 24 procs for 200 steps with 1555 atoms

Performance: 1.598 ns/day, 15.017 hours/ns, 73.991 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3018     | 2.3687     | 2.4034     |   1.5 | 87.63
Neigh   | 0.0096929  | 0.009918   | 0.010101   |   0.1 |  0.37
Comm    | 0.018153   | 0.052787   | 0.11985    |  10.3 |  1.95
Output  | 0.0011399  | 0.0045952  | 0.0047481  |   1.1 |  0.17
Modify  | 0.26467    | 0.26512    | 0.26881    |   0.2 |  9.81
Other   |            | 0.001881   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 51 min
Histogram: 1 1 0 0 2 3 6 3 5 3
Nghost:    2373.92 ave 2402 max 2340 min
Histogram: 1 1 0 3 5 5 1 4 3 1
Neighs:    25451.9 ave 28977 max 19320 min
Histogram: 1 1 0 1 1 4 7 3 5 1

Total # of neighbors = 610846
Ave neighs/atom = 392.827
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157255.610546045
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3366.53770352492
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
125  19  -157255.610546045  -222576.235743695  -4973.70085979025  0  0  21739.5909465584  0  0  0  0  0  49824.0498494037  -247.496533272677  0  -1021.81820524848
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
125  19  -157255.610546045  1347.22835610675  -155908.382189938  30096.4744337948  290.841180603577  3366.53770352492  7056.4641191273  583.512780277902  2459.63621116956  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
125  34  1555  -157255.610546045  -157255.610546045  30096.4744337948  30096.4744337948  3366.53770352492  0.420374989509583  1  19  19  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157255.610546045, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
125  34  1555  -157255.610546045  30096.4744337948  30096.4744337948  3366.53770352492  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 126, 34
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.337264060974121
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.337264060974121)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.337264060974121, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.551936149597168*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.551936149597168*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1547
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000711918 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 3.88900104786342
variable	ty equal ${lasty}
variable	ty equal 24.2811699511743
variable	tz equal ${lastz}
variable	tz equal 12.7385347537693
variable	tvx equal ${lastvx}
variable	tvx equal 0.0030958725507093
variable	tvy equal ${lastvy}
variable	tvy equal 0.00313277944999285
variable	tvz equal ${lastvz}
variable	tvz equal 0.0148120394793019
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1547]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1547]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1547]
variable	dx equal (${tx}-${delx})
variable	dx equal (3.88900104786342-${delx})
variable	dx equal (3.88900104786342-4.61980701349576)
variable	dy equal (${ty}-${dely})
variable	dy equal (24.2811699511743-${dely})
variable	dy equal (24.2811699511743-16.1520603003553)
variable	dz equal (${tz}-${delz})
variable	dz equal (12.7385347537693-${delz})
variable	dz equal (12.7385347537693-2.71303964690578)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1547 4.61980701349576 16.1520603003553 2.71303964690578; Last coords: 3.88900104786342 24.2811699511743 12.7385347537693
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.0030958725507093 0.00313277944999285 0.0148120394793019 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1547
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -0.73080596563234 ${dy} ${dz}
displace_atoms	delDisp move -0.73080596563234 8.129109650819 ${dz}
displace_atoms	delDisp move -0.73080596563234 8.129109650819 10.0254951068635
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1547 vx 0.0030958725507093 vy ${tvy} vz ${tvz}
set		atom 1547 vx 0.0030958725507093 vy 0.00313277944999285 vz ${tvz}
set		atom 1547 vx 0.0030958725507093 vy 0.00313277944999285 vz 0.0148120394793019
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1547 type ${ttyp}
set		atom 1547 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.57 | 73.04 | 73.49 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   21800            0   -157175.53    1346.3818   -155829.15    30096.474    290.84558    3613.3859    7646.7567     722.1515    2471.2494      30.5776      30.5776      32.1891    2.3848959    -222529.2 
   22000           50   -157217.66    1399.3516   -155818.31    30096.474    302.28812    2148.8232    6179.9164    549.32676   -282.77344      30.5776      30.5776      32.1891    2.3848959   -222264.76 
Loop time of 2.68563 on 24 procs for 200 steps with 1554 atoms

Performance: 1.609 ns/day, 14.920 hours/ns, 74.470 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3        | 2.3603     | 2.3986     |   1.4 | 87.89
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018016   | 0.056351   | 0.11675    |   9.4 |  2.10
Output  | 0.0011311  | 0.0046148  | 0.0047691  |   1.1 |  0.17
Modify  | 0.26204    | 0.2625     | 0.26603    |   0.1 |  9.77
Other   |            | 0.001882   |            |       |  0.07

Nlocal:    64.75 ave 72 max 51 min
Histogram: 1 1 0 0 2 3 6 3 5 3
Nghost:    2372.33 ave 2402 max 2339 min
Histogram: 1 1 1 3 7 2 1 6 1 1
Neighs:    25418.3 ave 28951 max 19311 min
Histogram: 1 1 0 1 1 4 7 3 5 1

Total # of neighbors = 610039
Ave neighs/atom = 392.56
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157217.660988776-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157217.660988776--157255.610546045+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157217.660988776--157255.610546045+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.438498198986053
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157217.660988776; E_system:-157255.610546045;prob1:1039564678066.25; prob2:0.438498198986053

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1554
variable	E_system equal ${E_trial}
variable	E_system equal -157217.660988776
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2148.82324772846
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
126  18  -157217.660988776  -222264.7612429  -4963.6379068967  0  0  21483.9646630245  0  0  0  0  0  49729.6379272646  -235.748574596321  0  -967.115854672622
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
126  18  -157217.660988776  1399.3515672786  -155818.309421498  30096.4744337948  302.288120958771  2148.82324772846  6179.91642780514  549.326759826616  -282.773444446374  30.5776  30.5776  32.1891  2.38489587052208
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log
126  35  1554  -157217.660988776  -157217.660988776  30096.4744337948  30096.4744337948  2148.82324772846  0.337264060974121  1  18  18  2  1039564678066.25  0.438498198986053  delete  pass  1547
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157217.660988776, total atoms are 1554
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
126  35  1554  -157217.660988776  30096.4744337948  30096.4744337948  2148.82324772846  1039564678066.25  0.438498198986053
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 127, 35
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0332962274551392
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0332962274551392)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0332962274551392, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.560208380222321*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.560208380222321*18)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1547
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000779867 secs
group		disp id ${nMCmoved}
group		disp id 1547
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 25.2247629305 ${ry} ${rz} units box
displace_atoms	disp move 25.2247629305 -10.310839773 ${rz} units box
displace_atoms	disp move 25.2247629305 -10.310839773 -8.20356057647 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.11 | 73.57 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22000            0   -157189.56    1399.3516    -155790.2    30096.474    302.28812    2055.7535    5970.6603    473.81338   -277.21333      30.5776      30.5776      32.1891    2.3848959   -222296.88 
   22200           50   -157198.08    1417.2326   -155780.84    30096.474    306.15078    2644.4317    3482.1207    3700.7643    750.40998      30.5776      30.5776      32.1891    2.3848959    -222713.6 
Loop time of 2.69322 on 24 procs for 200 steps with 1554 atoms

Performance: 1.604 ns/day, 14.962 hours/ns, 74.261 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2875     | 2.3528     | 2.3973     |   1.6 | 87.36
Neigh   | 0.0096741  | 0.0098826  | 0.010043   |   0.1 |  0.37
Comm    | 0.018345   | 0.062644   | 0.12816    |   9.9 |  2.33
Output  | 0.001116   | 0.0045945  | 0.0047479  |   1.1 |  0.17
Modify  | 0.26083    | 0.26145    | 0.26481    |   0.1 |  9.71
Other   |            | 0.001841   |            |       |  0.07

Nlocal:    64.75 ave 71 max 50 min
Histogram: 1 0 1 2 0 0 3 8 4 5
Nghost:    2374.04 ave 2404 max 2350 min
Histogram: 1 2 6 0 4 7 1 1 1 1
Neighs:    25420 ave 28624 max 18972 min
Histogram: 1 0 2 1 0 0 5 9 4 2

Total # of neighbors = 610080
Ave neighs/atom = 392.587
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157198.075423545-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157198.075423545--157217.660988776))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.100536406040192
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157198.075423545; E_system:-157217.660988776;prob1:5.39772252170644e-15; prob2:0.100536406040192

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
127  35  1554  -157217.660988776  -157198.075423545  30096.4744337948  30096.4744337948  2148.82324772846  0.0332962274551392  0  18  18  1  5.39772252170644e-15  0.100536406040192  displace fail  1547  25.2247629305  -10.310839773  -8.20356057647
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 128, 35
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.58403217792511
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.58403217792511)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.58403217792511, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.408176422119141*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.408176422119141*18)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1544
variable	lastatom equal ${n_system}
variable	lastatom equal 1554
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000828981 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1554]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1554]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1554]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1554]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1554]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1554]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1554]
variable	tx equal ${lastx}
variable	tx equal 16.13492897684
variable	ty equal ${lasty}
variable	ty equal 2.13030260170737
variable	tz equal ${lastz}
variable	tz equal 17.9727381923785
variable	tvx equal ${lastvx}
variable	tvx equal -0.00878664831914899
variable	tvy equal ${lastvy}
variable	tvy equal -0.00800350974120459
variable	tvz equal ${lastvz}
variable	tvz equal 0.00460039514084215
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1544]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1544]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1544]
variable	dx equal (${tx}-${delx})
variable	dx equal (16.13492897684-${delx})
variable	dx equal (16.13492897684-8.85439962137822)
variable	dy equal (${ty}-${dely})
variable	dy equal (2.13030260170737-${dely})
variable	dy equal (2.13030260170737-11.1798367274011)
variable	dz equal (${tz}-${delz})
variable	dz equal (17.9727381923785-${delz})
variable	dz equal (17.9727381923785-22.8708488807297)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1544 8.85439962137822 11.1798367274011 22.8708488807297; Last coords: 16.13492897684 2.13030260170737 17.9727381923785
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00878664831914899 -0.00800350974120459 0.00460039514084215 Last type: 2
group		del id ${lastatom}
group		del id 1554
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1553
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1544
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 7.28052935546178 ${dy} ${dz}
displace_atoms	delDisp move 7.28052935546178 -9.04953412569373 ${dz}
displace_atoms	delDisp move 7.28052935546178 -9.04953412569373 -4.8981106883512
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1544 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1544 vx -0.00878664831914899 vy ${tvy} vz ${tvz}
set		atom 1544 vx -0.00878664831914899 vy -0.00800350974120459 vz ${tvz}
set		atom 1544 vx -0.00878664831914899 vy -0.00800350974120459 vz 0.00460039514084215
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1544 type ${ttyp}
set		atom 1544 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.62 | 73.07 | 73.53 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22000            0   -157125.47    1397.9316   -155727.54    30096.474    302.17595    2162.0389    6217.4732    557.68238   -289.03897      30.5776      30.5776      32.1891    2.3845129   -222192.08 
   22200           50   -157112.79    1396.3184   -155716.47    30096.474    301.82724    3166.4879    3037.0551    4765.3015    1697.1071      30.5776      30.5776      32.1891    2.3845129   -222598.87 
Loop time of 2.70002 on 24 procs for 200 steps with 1553 atoms

Performance: 1.600 ns/day, 15.000 hours/ns, 74.073 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.293      | 2.3584     | 2.4119     |   1.7 | 87.35
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018418   | 0.071809   | 0.13741    |   9.9 |  2.66
Output  | 0.0012271  | 0.0046756  | 0.004828   |   1.1 |  0.17
Modify  | 0.26259    | 0.26327    | 0.26662    |   0.1 |  9.75
Other   |            | 0.001853   |            |       |  0.07

Nlocal:    64.7083 ave 72 max 51 min
Histogram: 1 0 2 1 0 2 7 3 5 3
Nghost:    2373.75 ave 2404 max 2339 min
Histogram: 1 0 3 1 6 4 6 0 2 1
Neighs:    25389.3 ave 28945 max 19319 min
Histogram: 1 0 2 1 0 4 5 8 1 2

Total # of neighbors = 609344
Ave neighs/atom = 392.366
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157112.788268954-${E_system}+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157112.788268954--157217.660988776+${mu}))
variable	prob1 equal	(1554*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157112.788268954--157217.660988776+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.264901518821716
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157112.788268954; E_system:-157217.660988776;prob1:1.83677358770684e-37; prob2:0.264901518821716

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
128  35  1554  -157217.660988776  -157112.788268954  30096.4744337948  30096.4744337948  2148.82324772846  0.58403217792511  1  18  18  2  1.83677358770684e-37  0.264901518821716  delete fail  1544
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 129, 35
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.732739508152008
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.732739508152008)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.732739508152008, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:18; n_GCMC:18
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1554 atoms
  read_restart CPU = 0.000748873 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 12.9804636453 ${ry} ${rz} units box
create_atoms	2 single 12.9804636453 11.1588180115 ${rz} units box
create_atoms	2 single 12.9804636453 11.1588180115 24.3955246757 units box
Created 1 atoms
  create_atoms CPU = 6.22272e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1555
print 		'ncreated is ${ncreated}'
ncreated is 1555
group		created id ${ncreated}
group		created id 1555
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.728136360645294-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.728136360645294-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.728136360645294-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.235470533370972-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.235470533370972-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.235470533370972-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.921574234962463-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.921574234962463-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.921574234962463-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00473752766892886 ${rvy} ${rvz}
velocity	created set 0.00473752766892886 -0.00549327456551528 ${rvz}
velocity	created set 0.00473752766892886 -0.00549327456551528 0.00875449926961647
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.72 | 73.16 | 73.62 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22000            0    -157294.9    1400.4238   -155894.47    30096.474    302.32506    2395.9939    6508.9061    810.76787   -131.69215      30.5776      30.5776      32.1891    2.3852788   -222312.45 
   22200           50   -157282.73    1399.2415   -155883.49    30096.474    302.06983    3224.5509    3126.1766    4878.5448    1668.9313      30.5776      30.5776      32.1891    2.3852788   -222748.58 
Loop time of 3.07366 on 24 procs for 200 steps with 1555 atoms

Performance: 1.405 ns/day, 17.076 hours/ns, 65.069 timesteps/s
95.5% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2989     | 2.4085     | 2.776      |   7.8 | 78.36
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018195   | 0.38558    | 0.4953     |  19.5 | 12.54
Output  | 0.0016389  | 0.0051204  | 0.0052741  |   1.0 |  0.17
Modify  | 0.27197    | 0.27256    | 0.276      |   0.1 |  8.87
Other   |            | 0.001889   |            |       |  0.06

Nlocal:    64.7917 ave 72 max 51 min
Histogram: 1 0 2 1 0 2 6 4 5 3
Nghost:    2377 ave 2407 max 2343 min
Histogram: 1 0 3 1 4 5 7 0 2 1
Neighs:    25456.8 ave 28968 max 19324 min
Histogram: 1 0 2 1 0 4 5 6 3 2

Total # of neighbors = 610964
Ave neighs/atom = 392.903
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157282.733518453-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157282.733518453--157217.660988776-${mu}))
variable	prob1 equal	(30096.4744337948/((1554+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157282.733518453--157217.660988776--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.240460336208344
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157282.733518453; E_system:-157217.660988776;prob1:55185578.0642137; prob2:0.240460336208344

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157282.733518453
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 3224.55087751268
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
129  19  -157282.733518453  -222748.583360293  -4930.29440644788  0  0  21849.0368378665  0  0  0  0  0  49816.3571679256  -250.199844378417  0  -1019.04991312613
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
129  19  -157282.733518453  1399.24145830201  -155883.492060151  30096.4744337948  302.069827908063  3224.55087751268  3126.17657618122  4878.54475623748  1668.93130011934  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
129  36  1555  -157282.733518453  -157282.733518453  30096.4744337948  30096.4744337948  3224.55087751268  0.732739508152008  2  19  19  3  55185578.0642137  0.240460336208344  add pass  1555  12.9804636453  11.1588180115  24.3955246757 0.00473752766892886  -0.00549327456551528  0.00875449926961647
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157282.733518453, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
129  36  1555  -157282.733518453  30096.4744337948  30096.4744337948  3224.55087751268  55185578.0642137  0.240460336208344
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 130, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.379563629627228
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.379563629627228)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.379563629627228, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.78665292263031*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.78665292263031*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1551
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000822067 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 12.8703737694753
variable	ty equal ${lasty}
variable	ty equal 10.6557588366437
variable	tz equal ${lastz}
variable	tz equal 24.8543850800057
variable	tvx equal ${lastvx}
variable	tvx equal -0.00351837197661828
variable	tvy equal ${lastvy}
variable	tvy equal -0.00596957095369273
variable	tvz equal ${lastvz}
variable	tvz equal -0.00104405756043571
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1551]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1551]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1551]
variable	dx equal (${tx}-${delx})
variable	dx equal (12.8703737694753-${delx})
variable	dx equal (12.8703737694753-17.7367712070758)
variable	dy equal (${ty}-${dely})
variable	dy equal (10.6557588366437-${dely})
variable	dy equal (10.6557588366437-14.305867089744)
variable	dz equal (${tz}-${delz})
variable	dz equal (24.8543850800057-${delz})
variable	dz equal (24.8543850800057-2.69371891593618)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1551 17.7367712070758 14.305867089744 2.69371891593618; Last coords: 12.8703737694753 10.6557588366437 24.8543850800057
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00351837197661828 -0.00596957095369273 -0.00104405756043571 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1551
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -4.8663974376005 ${dy} ${dz}
displace_atoms	delDisp move -4.8663974376005 -3.6501082531003 ${dz}
displace_atoms	delDisp move -4.8663974376005 -3.6501082531003 22.1606661640695
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1551 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1551 vx -0.00351837197661828 vy ${tvy} vz ${tvz}
set		atom 1551 vx -0.00351837197661828 vy -0.00596957095369273 vz ${tvz}
set		atom 1551 vx -0.00351837197661828 vy -0.00596957095369273 vz -0.00104405756043571
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1551 type ${ttyp}
set		atom 1551 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.82 | 73.08 | 73.33 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22200            0    -157202.8    1399.1235   -155803.68    30096.474    302.23886    3319.7383    3140.8156     4990.415    1827.9843      30.5776      30.5776      32.1891    2.3848959    -222668.7 
   22400           50   -157208.08    1419.6481   -155788.44    30096.474    306.67259   -196.64445   -427.41619    462.23065   -624.74781      30.5776      30.5776      32.1891    2.3848959      -222307 
Loop time of 2.69276 on 24 procs for 200 steps with 1554 atoms

Performance: 1.604 ns/day, 14.960 hours/ns, 74.273 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2874     | 2.3694     | 2.4062     |   1.9 | 87.99
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017875   | 0.054754   | 0.13675    |  12.5 |  2.03
Output  | 0.001132   | 0.0045748  | 0.0047269  |   1.1 |  0.17
Modify  | 0.26171    | 0.26224    | 0.26592    |   0.2 |  9.74
Other   |            | 0.00178    |            |       |  0.07

Nlocal:    64.75 ave 73 max 50 min
Histogram: 1 0 1 2 0 2 8 6 2 2
Nghost:    2373.88 ave 2396 max 2352 min
Histogram: 1 0 3 4 4 5 4 1 0 2
Neighs:    25422.3 ave 29373 max 18949 min
Histogram: 1 0 2 1 0 2 9 6 2 1

Total # of neighbors = 610136
Ave neighs/atom = 392.623
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157208.083508065-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157208.083508065--157282.733518453+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157208.083508065--157282.733518453+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.901541292667389
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157208.083508065; E_system:-157282.733518453;prob1:1.91039810181906e-15; prob2:0.901541292667389

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
130  36  1555  -157282.733518453  -157208.083508065  30096.4744337948  30096.4744337948  3224.55087751268  0.379563629627228  1  19  19  2  1.91039810181906e-15  0.901541292667389  delete fail  1551
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 130
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000720024 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.84 | 73.11 | 73.36 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22200            0   -157282.73    1399.2415   -155883.49    30096.474    302.06983    3224.5512    3126.1768    4878.5452    1668.9317      30.5776      30.5776      32.1891    2.3852788   -222748.58 
   22400           50   -157288.19    1420.5648   -155867.63    30096.474    306.67313   -555.61501   -638.14914     91.85965   -1120.5556      30.5776      30.5776      32.1891    2.3852788   -222415.31 
Loop time of 2.70443 on 24 procs for 200 steps with 1555 atoms

Performance: 1.597 ns/day, 15.025 hours/ns, 73.953 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3092     | 2.3771     | 2.4153     |   1.7 | 87.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018177   | 0.056311   | 0.12415    |  11.0 |  2.08
Output  | 0.001168   | 0.0046588  | 0.0048141  |   1.1 |  0.17
Modify  | 0.26392    | 0.26449    | 0.26801    |   0.1 |  9.78
Other   |            | 0.001854   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 50 min
Histogram: 1 0 1 2 0 2 8 5 3 2
Nghost:    2374.83 ave 2397 max 2353 min
Histogram: 1 0 3 4 4 5 4 1 0 2
Neighs:    25456.2 ave 29379 max 18962 min
Histogram: 1 0 2 1 0 2 9 6 2 1

Total # of neighbors = 610949
Ave neighs/atom = 392.893
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157288.194727596
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -555.6150146595
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
130  19  -157288.194727596  -222415.313380654  -4966.10555118801  0  0  21615.0651352014  0  0  0  0  0  49746.8766232398  -249.313455524108  0  -1019.40409867122
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
130  19  -157288.194727596  1420.56477257223  -155867.629955024  30096.4744337948  306.673129099447  -555.6150146595  -638.14914185192  91.8596503163469  -1120.55555244293  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
130  36  1555  -157288.194727596  -157288.194727596  30096.4744337948  30096.4744337948  -555.6150146595  0.379563629627228  1  19  19  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157288.194727596, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
130  36  1555  -157288.194727596  30096.4744337948  30096.4744337948  -555.6150146595  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 131, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.462885200977325
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.462885200977325)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.462885200977325, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.857121348381042*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.857121348381042*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1553
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000762939 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 12.9127806151066
variable	ty equal ${lasty}
variable	ty equal 10.8022519788661
variable	tz equal ${lastz}
variable	tz equal 24.5472005660258
variable	tvx equal ${lastvx}
variable	tvx equal -0.000553403929866588
variable	tvy equal ${lastvy}
variable	tvy equal 0.0090401942600529
variable	tvz equal ${lastvz}
variable	tvz equal -0.00663618476574623
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1553]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1553]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1553]
variable	dx equal (${tx}-${delx})
variable	dx equal (12.9127806151066-${delx})
variable	dx equal (12.9127806151066-24.8632612256592)
variable	dy equal (${ty}-${dely})
variable	dy equal (10.8022519788661-${dely})
variable	dy equal (10.8022519788661-10.0769106767839)
variable	dz equal (${tz}-${delz})
variable	dz equal (24.5472005660258-${delz})
variable	dz equal (24.5472005660258-13.9605464864455)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1553 24.8632612256592 10.0769106767839 13.9605464864455; Last coords: 12.9127806151066 10.8022519788661 24.5472005660258
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.000553403929866588 0.0090401942600529 -0.00663618476574623 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1553
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -11.9504806105526 ${dy} ${dz}
displace_atoms	delDisp move -11.9504806105526 0.725341302082199 ${dz}
displace_atoms	delDisp move -11.9504806105526 0.725341302082199 10.5866540795803
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1553 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1553 vx -0.000553403929866588 vy ${tvy} vz ${tvz}
set		atom 1553 vx -0.000553403929866588 vy 0.0090401942600529 vz ${tvz}
set		atom 1553 vx -0.000553403929866588 vy 0.0090401942600529 vz -0.00663618476574623
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1553 type ${ttyp}
set		atom 1553 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.52 | 73 | 73.34 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22400            0   -157211.37     1420.058   -155791.32    30096.474    306.76112   -593.18127   -559.60491    6.9170995    -1226.856      30.5776      30.5776      32.1891    2.3848959   -222393.17 
   22600           50   -157207.95    1433.2529   -155774.69    30096.474    309.61149    3820.1596     5043.703    2167.8408    4248.9351      30.5776      30.5776      32.1891    2.3848959   -222488.79 
Loop time of 2.69521 on 24 procs for 200 steps with 1554 atoms

Performance: 1.603 ns/day, 14.973 hours/ns, 74.206 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.283      | 2.3681     | 2.4064     |   1.8 | 87.86
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018193   | 0.056386   | 0.14147    |  11.4 |  2.09
Output  | 0.001153   | 0.0046013  | 0.0047531  |   1.1 |  0.17
Modify  | 0.2636     | 0.26425    | 0.26774    |   0.1 |  9.80
Other   |            | 0.001852   |            |       |  0.07

Nlocal:    64.75 ave 73 max 48 min
Histogram: 1 0 0 1 2 1 8 5 3 3
Nghost:    2369.83 ave 2401 max 2342 min
Histogram: 1 1 2 4 7 2 5 0 1 1
Neighs:    25425.3 ave 29355 max 18243 min
Histogram: 1 0 1 1 1 3 8 3 5 1

Total # of neighbors = 610208
Ave neighs/atom = 392.669
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157207.945836178-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157207.945836178--157288.194727596+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157207.945836178--157288.194727596+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.155746161937714
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157207.945836178; E_system:-157288.194727596;prob1:1.5937614901091e-19; prob2:0.155746161937714

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
131  36  1555  -157288.194727596  -157207.945836178  30096.4744337948  30096.4744337948  -555.6150146595  0.462885200977325  1  19  19  2  1.5937614901091e-19  0.155746161937714  delete fail  1553
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 132, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.278934299945831
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.278934299945831)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.278934299945831, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.57243824005127*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.57243824005127*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1547
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000794888 secs
group		disp id ${nMCmoved}
group		disp id 1547
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1547 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 5.75830829623 ${ry} ${rz} units box
displace_atoms	disp move 5.75830829623 -11.7884129074 ${rz} units box
displace_atoms	disp move 5.75830829623 -11.7884129074 14.0482214294 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.62 | 73.07 | 73.37 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22400            0    -157265.3    1420.5648   -155844.74    30096.474    306.67313   -245.72248   -342.05418     335.6831   -730.79637      30.5776      30.5776      32.1891    2.3852788   -222463.08 
   22600           50   -157272.21    1441.4119   -155830.79    30096.474    311.17364    4591.6151    5912.7435    2404.4358     5457.666      30.5776      30.5776      32.1891    2.3852788    -222549.6 
Loop time of 2.70653 on 24 procs for 200 steps with 1555 atoms

Performance: 1.596 ns/day, 15.036 hours/ns, 73.895 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2907     | 2.3657     | 2.4168     |   1.8 | 87.41
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018821   | 0.069188   | 0.14384    |  10.5 |  2.56
Output  | 0.0011399  | 0.0046129  | 0.004766   |   1.1 |  0.17
Modify  | 0.26417    | 0.26521    | 0.26805    |   0.1 |  9.80
Other   |            | 0.001844   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 1 2 3 6 5 3 3
Nghost:    2372.29 ave 2401 max 2347 min
Histogram: 1 1 2 5 6 2 5 0 1 1
Neighs:    25457 ave 29369 max 18620 min
Histogram: 1 0 1 1 1 4 7 3 5 1

Total # of neighbors = 610969
Ave neighs/atom = 392.906
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157272.205103728-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157272.205103728--157288.194727596))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.247254967689514
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157272.205103728; E_system:-157288.194727596;prob1:2.24801760293548e-12; prob2:0.247254967689514

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
132  36  1555  -157288.194727596  -157272.205103728  30096.4744337948  30096.4744337948  -555.6150146595  0.278934299945831  0  19  19  1  2.24801760293548e-12  0.247254967689514  displace fail  1547  5.75830829623  -11.7884129074  14.0482214294
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 133, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.0530754923820496
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.0530754923820496)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.0530754923820496, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.152789354324341*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.152789354324341*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1539
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000865936 secs
group		disp id ${nMCmoved}
group		disp id 1539
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1539 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 11.9305807536 ${ry} ${rz} units box
displace_atoms	disp move 11.9305807536 -1.77155541301 ${rz} units box
displace_atoms	disp move 11.9305807536 -1.77155541301 -17.4065124857 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.54 | 73.03 | 73.3 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22400            0   -157263.86    1420.5648    -155843.3    30096.474    306.67313   -417.01219    -392.7285    73.831642   -932.13971      30.5776      30.5776      32.1891    2.3852788   -222392.44 
   22600           50   -157277.62    1446.2023   -155831.41    30096.474    312.20778     4032.616    5494.8474    2260.4197    4342.5808      30.5776      30.5776      32.1891    2.3852788   -222437.83 
Loop time of 2.7094 on 24 procs for 200 steps with 1555 atoms

Performance: 1.594 ns/day, 15.052 hours/ns, 73.817 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2866     | 2.3614     | 2.4107     |   1.7 | 87.16
Neigh   | 0.009732   | 0.0099067  | 0.010015   |   0.1 |  0.37
Comm    | 0.018224   | 0.06752    | 0.14234    |  10.2 |  2.49
Output  | 0.001193   | 0.0046355  | 0.0047898  |   1.1 |  0.17
Modify  | 0.26359    | 0.26408    | 0.26766    |   0.2 |  9.75
Other   |            | 0.001868   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 50 min
Histogram: 1 0 1 1 1 2 5 6 4 3
Nghost:    2377.12 ave 2412 max 2352 min
Histogram: 1 3 5 3 4 4 1 2 0 1
Neighs:    25456 ave 28557 max 19003 min
Histogram: 1 0 2 0 1 1 6 7 3 3

Total # of neighbors = 610943
Ave neighs/atom = 392.889
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157277.617100839-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157277.617100839--157288.194727596))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.821586549282074
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157277.617100839; E_system:-157288.194727596;prob1:1.96950974933028e-08; prob2:0.821586549282074

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
133  36  1555  -157288.194727596  -157277.617100839  30096.4744337948  30096.4744337948  -555.6150146595  0.0530754923820496  0  19  19  1  1.96950974933028e-08  0.821586549282074  displace fail  1539  11.9305807536  -1.77155541301  -17.4065124857
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 134, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.104158401489258
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.104158401489258)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.104158401489258, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.748978912830353*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.748978912830353*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1551
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000895977 secs
group		disp id ${nMCmoved}
group		disp id 1551
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1551 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1551 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1551 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 4.83537774037 ${ry} ${rz} units box
displace_atoms	disp move 4.83537774037 14.3816269111 ${rz} units box
displace_atoms	disp move 4.83537774037 14.3816269111 2.94286558475 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.57 | 73.07 | 73.38 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22400            0   -157272.68    1420.5648   -155852.11    30096.474    306.67313   -412.06215   -389.25921    194.39862   -1041.3258      30.5776      30.5776      32.1891    2.3852788    -222389.3 
   22600           50   -157273.08    1435.9424   -155837.13    30096.474    309.99287    4201.9418    5257.7615    2263.8531    5084.2106      30.5776      30.5776      32.1891    2.3852788   -222444.36 
Loop time of 2.69698 on 24 procs for 200 steps with 1555 atoms

Performance: 1.602 ns/day, 14.983 hours/ns, 74.157 timesteps/s
98.7% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2778     | 2.3607     | 2.4078     |   1.7 | 87.53
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017981   | 0.065136   | 0.14791    |  10.4 |  2.42
Output  | 0.0012059  | 0.0046682  | 0.0048232  |   1.1 |  0.17
Modify  | 0.26398    | 0.26457    | 0.26812    |   0.1 |  9.81
Other   |            | 0.00189    |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 1 2 3 6 6 2 3
Nghost:    2372.79 ave 2401 max 2347 min
Histogram: 1 1 2 6 4 2 5 1 1 1
Neighs:    25454 ave 29356 max 18646 min
Histogram: 1 0 1 1 1 4 7 3 5 1

Total # of neighbors = 610897
Ave neighs/atom = 392.86
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157273.075415307-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157273.075415307--157288.194727596))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.427950978279114
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157273.075415307; E_system:-157288.194727596;prob1:9.67851197908178e-12; prob2:0.427950978279114

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
134  36  1555  -157288.194727596  -157273.075415307  30096.4744337948  30096.4744337948  -555.6150146595  0.104158401489258  0  19  19  1  9.67851197908178e-12  0.427950978279114  displace fail  1551  4.83537774037  14.3816269111  2.94286558475
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 135, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.214735150337219
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.214735150337219)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.214735150337219, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.423543572425842*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.423543572425842*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1545
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000889063 secs
group		disp id ${nMCmoved}
group		disp id 1545
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1545 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -15.0338755511 ${ry} ${rz} units box
displace_atoms	disp move -15.0338755511 1.8681622535 ${rz} units box
displace_atoms	disp move -15.0338755511 1.8681622535 11.4702032973 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.56 | 73.03 | 73.34 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22400            0   -157274.77    1420.5648   -155854.21    30096.474    306.67313    63.099292   -156.38511    1086.7657   -741.08276      30.5776      30.5776      32.1891    2.3852788   -222395.67 
   22600           50    -157274.3    1435.6512   -155838.65    30096.474    309.93001    4040.5837    5356.8443    2074.9851    4689.9218      30.5776      30.5776      32.1891    2.3852788   -222493.81 
Loop time of 2.70882 on 24 procs for 200 steps with 1555 atoms

Performance: 1.595 ns/day, 15.049 hours/ns, 73.833 timesteps/s
98.6% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2842     | 2.3575     | 2.4193     |   1.9 | 87.03
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017893   | 0.080003   | 0.15322    |  10.4 |  2.95
Output  | 0.001179   | 0.0046164  | 0.0047729  |   1.1 |  0.17
Modify  | 0.26428    | 0.26485    | 0.2686     |   0.2 |  9.78
Other   |            | 0.001884   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 1 2 4 5 6 2 3
Nghost:    2371.12 ave 2401 max 2346 min
Histogram: 1 1 2 7 4 3 4 0 1 1
Neighs:    25451.8 ave 29337 max 18614 min
Histogram: 1 0 1 1 1 4 7 3 5 1

Total # of neighbors = 610842
Ave neighs/atom = 392.824
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157274.302831196-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157274.302831196--157288.194727596))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.322900235652924
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157274.302831196; E_system:-157288.194727596;prob1:7.58512235047509e-11; prob2:0.322900235652924

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
135  36  1555  -157288.194727596  -157274.302831196  30096.4744337948  30096.4744337948  -555.6150146595  0.214735150337219  0  19  19  1  7.58512235047509e-11  0.322900235652924  displace fail  1545  -15.0338755511  1.8681622535  11.4702032973
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 135
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000869989 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.57 | 73.05 | 73.37 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22400            0   -157288.19    1420.5648   -155867.63    30096.474    306.67313    -555.6152   -638.14902     91.85952   -1120.5561      30.5776      30.5776      32.1891    2.3852788   -222415.31 
   22600           50   -157283.01     1432.164   -155850.85    30096.474    309.17719    4144.4837    5433.7551    2345.5658    4654.1303      30.5776      30.5776      32.1891    2.3852788   -222508.13 
Loop time of 2.68766 on 24 procs for 200 steps with 1555 atoms

Performance: 1.607 ns/day, 14.931 hours/ns, 74.414 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2923     | 2.3623     | 2.3989     |   1.6 | 87.90
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018004   | 0.054714   | 0.12448    |  10.8 |  2.04
Output  | 0.0011692  | 0.0046469  | 0.004801   |   1.1 |  0.17
Modify  | 0.26363    | 0.26413    | 0.26783    |   0.2 |  9.83
Other   |            | 0.001842   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 1 2 3 6 6 2 3
Nghost:    2371.79 ave 2401 max 2346 min
Histogram: 1 1 2 5 6 2 5 0 1 1
Neighs:    25455.1 ave 29355 max 18623 min
Histogram: 1 0 1 1 1 4 7 3 5 1

Total # of neighbors = 610922
Ave neighs/atom = 392.876
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157283.0123539
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 4144.48374776057
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
135  19  -157283.0123539  -222508.133111265  -4972.38048796499  0  0  21587.6854907252  0  0  0  0  0  49878.6271020008  -250.172747576846  0  -1018.6385998202
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
135  19  -157283.0123539  1432.16403424767  -155850.848319653  30096.4744337948  309.177190823297  4144.48374776057  5433.75513873018  2345.56581202331  4654.1302925282  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
135  36  1555  -157283.0123539  -157283.0123539  30096.4744337948  30096.4744337948  4144.48374776057  0.214735150337219  0  19  19  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157283.0123539, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
135  36  1555  -157283.0123539  30096.4744337948  30096.4744337948  4144.48374776057  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 136, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.932828843593597
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.932828843593597)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.932828843593597, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000702858 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 0.0517817325365 ${ry} ${rz} units box
create_atoms	2 single 0.0517817325365 4.74563384931 ${rz} units box
create_atoms	2 single 0.0517817325365 4.74563384931 9.61423902079 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0999622344970703-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.0999622344970703-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.0999622344970703-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0355537533760071-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.0355537533760071-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.0355537533760071-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.541122674942017-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.541122674942017-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.541122674942017-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.0083072684131805 ${rvy} ${rvz}
velocity	created set -0.0083072684131805 -0.0096447884847799 ${rvz}
velocity	created set -0.0083072684131805 -0.0096447884847799 0.000853962120755836
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.7 | 73.1 | 73.37 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22600            0   -157348.08    1433.5141   -155914.57    30096.474    309.26963    4275.7957    5645.4081    2394.8868    4787.0922      30.5776      30.5776      32.1891    2.3856618   -222515.38 
   22800           50   -157280.99    1377.0429   -155903.95    30096.474    297.08639    1930.4479    4406.4156    296.55231    1088.3758      30.5776      30.5776      32.1891    2.3856618   -222591.23 
Loop time of 2.6911 on 24 procs for 200 steps with 1556 atoms

Performance: 1.605 ns/day, 14.951 hours/ns, 74.319 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2946     | 2.3584     | 2.4047     |   1.7 | 87.64
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017622   | 0.064127   | 0.12764    |  10.5 |  2.38
Output  | 0.0011339  | 0.0045893  | 0.0047419  |   1.1 |  0.17
Modify  | 0.2615     | 0.26223    | 0.26596    |   0.2 |  9.74
Other   |            | 0.001783   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 50 min
Histogram: 1 0 0 2 0 5 3 7 2 4
Nghost:    2374.75 ave 2403 max 2349 min
Histogram: 1 1 2 6 4 3 4 1 1 1
Neighs:    25479.8 ave 28932 max 19016 min
Histogram: 1 0 0 2 1 3 7 5 3 2

Total # of neighbors = 611516
Ave neighs/atom = 393.005
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157280.990383536-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157280.990383536--157283.0123539-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157280.990383536--157283.0123539--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.90583336353302
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157280.990383536; E_system:-157283.0123539;prob1:7.31497937356499e-42; prob2:0.90583336353302

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
136  36  1555  -157283.0123539  -157280.990383536  30096.4744337948  30096.4744337948  4144.48374776057  0.932828843593597  2  19  19  3  7.31497937356499e-42  0.90583336353302  add fail  1556  0.0517817325365  4.74563384931  9.61423902079 -0.0083072684131805  -0.0096447884847799  0.000853962120755836
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 137, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.614975392818451
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.614975392818451)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.614975392818451, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.771990418434143*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.771990418434143*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1551
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000809908 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 12.7109430154151
variable	ty equal ${lasty}
variable	ty equal 11.15033386279
variable	tz equal ${lastz}
variable	tz equal 24.7432534253874
variable	tvx equal ${lastvx}
variable	tvx equal -0.00589769798891862
variable	tvy equal ${lastvy}
variable	tvy equal 0.00560836275139502
variable	tvz equal ${lastvz}
variable	tvz equal 0.00335296125176673
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1551]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1551]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1551]
variable	dx equal (${tx}-${delx})
variable	dx equal (12.7109430154151-${delx})
variable	dx equal (12.7109430154151-17.7564601194641)
variable	dy equal (${ty}-${dely})
variable	dy equal (11.15033386279-${dely})
variable	dy equal (11.15033386279-14.2130302463477)
variable	dz equal (${tz}-${delz})
variable	dz equal (24.7432534253874-${delz})
variable	dz equal (24.7432534253874-2.68391236508609)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1551 17.7564601194641 14.2130302463477 2.68391236508609; Last coords: 12.7109430154151 11.15033386279 24.7432534253874
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00589769798891862 0.00560836275139502 0.00335296125176673 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1551
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -5.045517104049 ${dy} ${dz}
displace_atoms	delDisp move -5.045517104049 -3.0626963835577 ${dz}
displace_atoms	delDisp move -5.045517104049 -3.0626963835577 22.0593410603013
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1551 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1551 vx -0.00589769798891862 vy ${tvy} vz ${tvz}
set		atom 1551 vx -0.00589769798891862 vy 0.00560836275139502 vz ${tvz}
set		atom 1551 vx -0.00589769798891862 vy 0.00560836275139502 vz 0.00335296125176673
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1551 type ${ttyp}
set		atom 1551 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.65 | 73.05 | 73.32 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22600            0   -157196.84     1431.779   -155765.06    30096.474     309.2931    4151.8093    5434.7545    2408.8266    4611.8468      30.5776      30.5776      32.1891    2.3848959   -222429.37 
   22800           50   -157130.22    1375.1225    -155755.1    30096.474    297.05416    1790.1153     4109.387    429.67986    831.27905      30.5776      30.5776      32.1891    2.3848959   -222466.35 
Loop time of 2.6824 on 24 procs for 200 steps with 1554 atoms

Performance: 1.610 ns/day, 14.902 hours/ns, 74.560 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2892     | 2.3558     | 2.3973     |   1.7 | 87.82
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01752    | 0.059348   | 0.12577    |  10.6 |  2.21
Output  | 0.0011361  | 0.0045859  | 0.0047379  |   1.1 |  0.17
Modify  | 0.26015    | 0.26085    | 0.26469    |   0.2 |  9.72
Other   |            | 0.001821   |            |       |  0.07

Nlocal:    64.75 ave 72 max 50 min
Histogram: 1 0 0 2 0 5 3 7 3 3
Nghost:    2372.83 ave 2401 max 2347 min
Histogram: 1 1 2 6 4 3 4 1 1 1
Neighs:    25414.8 ave 28926 max 18969 min
Histogram: 1 0 1 1 1 3 7 5 3 2

Total # of neighbors = 609955
Ave neighs/atom = 392.506
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157130.221093679-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157130.221093679--157283.0123539+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157130.221093679--157283.0123539+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0446449518203735
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157130.221093679; E_system:-157283.0123539;prob1:2.2719546210773e-72; prob2:0.0446449518203735

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
137  36  1555  -157283.0123539  -157130.221093679  30096.4744337948  30096.4744337948  4144.48374776057  0.614975392818451  1  19  19  2  2.2719546210773e-72  0.0446449518203735  delete fail  1551
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 138, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.579457879066467
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.579457879066467)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.579457879066467, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.806437909603119*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.806437909603119*19)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1552
variable	lastatom equal ${n_system}
variable	lastatom equal 1555
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000691175 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1555]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1555]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1555]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1555]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1555]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1555]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1555]
variable	tx equal ${lastx}
variable	tx equal 12.7109430154151
variable	ty equal ${lasty}
variable	ty equal 11.15033386279
variable	tz equal ${lastz}
variable	tz equal 24.7432534253874
variable	tvx equal ${lastvx}
variable	tvx equal -0.00589769798891862
variable	tvy equal ${lastvy}
variable	tvy equal 0.00560836275139502
variable	tvz equal ${lastvz}
variable	tvz equal 0.00335296125176673
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1552]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1552]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1552]
variable	dx equal (${tx}-${delx})
variable	dx equal (12.7109430154151-${delx})
variable	dx equal (12.7109430154151-8.06975856602733)
variable	dy equal (${ty}-${dely})
variable	dy equal (11.15033386279-${dely})
variable	dy equal (11.15033386279-25.1485174898956)
variable	dz equal (${tz}-${delz})
variable	dz equal (24.7432534253874-${delz})
variable	dz equal (24.7432534253874-22.788676633164)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1552 8.06975856602733 25.1485174898956 22.788676633164; Last coords: 12.7109430154151 11.15033386279 24.7432534253874
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: -0.00589769798891862 0.00560836275139502 0.00335296125176673 Last type: 2
group		del id ${lastatom}
group		del id 1555
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1554
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1552
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 4.64118444938777 ${dy} ${dz}
displace_atoms	delDisp move 4.64118444938777 -13.9981836271056 ${dz}
displace_atoms	delDisp move 4.64118444938777 -13.9981836271056 1.9545767922234
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1552 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1552 vx -0.00589769798891862 vy ${tvy} vz ${tvz}
set		atom 1552 vx -0.00589769798891862 vy 0.00560836275139502 vz ${tvz}
set		atom 1552 vx -0.00589769798891862 vy 0.00560836275139502 vz 0.00335296125176673
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1552 type ${ttyp}
set		atom 1552 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.62 | 73.04 | 73.31 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22600            0   -157204.01    1431.6573   -155772.35    30096.474    309.26682    4090.1585    5416.3188    2271.1384    4583.0183      30.5776      30.5776      32.1891    2.3848959   -222461.68 
   22800           50    -157136.8    1375.0689   -155761.74    30096.474    297.04257    1707.1269    4110.8465    297.72221    712.81187      30.5776      30.5776      32.1891    2.3848959    -222513.7 
Loop time of 2.68544 on 24 procs for 200 steps with 1554 atoms

Performance: 1.609 ns/day, 14.919 hours/ns, 74.476 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2865     | 2.3581     | 2.3987     |   1.8 | 87.81
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.01738    | 0.058377   | 0.13006    |  11.2 |  2.17
Output  | 0.0011239  | 0.0045657  | 0.0047171  |   1.1 |  0.17
Modify  | 0.26179    | 0.26258    | 0.2665     |   0.2 |  9.78
Other   |            | 0.001787   |            |       |  0.07

Nlocal:    64.75 ave 72 max 50 min
Histogram: 1 0 0 2 0 5 3 7 2 4
Nghost:    2372.33 ave 2400 max 2347 min
Histogram: 1 1 2 6 4 2 5 1 1 1
Neighs:    25416 ave 28860 max 18983 min
Histogram: 1 0 1 1 1 4 6 5 3 2

Total # of neighbors = 609984
Ave neighs/atom = 392.525
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157136.804272372-${E_system}+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157136.804272372--157283.0123539+${mu}))
variable	prob1 equal	(1555*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157136.804272372--157283.0123539+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.124217391014099
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157136.804272372; E_system:-157283.0123539;prob1:1.41953541695197e-67; prob2:0.124217391014099

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
138  36  1555  -157283.0123539  -157136.804272372  30096.4744337948  30096.4744337948  4144.48374776057  0.579457879066467  1  19  19  2  1.41953541695197e-67  0.124217391014099  delete fail  1552
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 139, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.262252748012543
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.262252748012543)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.262252748012543, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.352033674716949*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.352033674716949*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1543
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000753164 secs
group		disp id ${nMCmoved}
group		disp id 1543
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1543 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -9.20592370301 ${ry} ${rz} units box
displace_atoms	disp move -9.20592370301 -14.6415498378 ${rz} units box
displace_atoms	disp move -9.20592370301 -14.6415498378 -8.43407459022 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.06 | 73.32 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22600            0   -157254.05     1432.164   -155821.89    30096.474    309.17719    4497.7431    5725.2309    2550.2339    5217.7643      30.5776      30.5776      32.1891    2.3852788   -222500.01 
   22800           50   -157200.71    1385.6959   -155815.02    30096.474    299.14559    1994.4345    4575.4109    629.19726     778.6953      30.5776      30.5776      32.1891    2.3852788   -222547.39 
Loop time of 2.68033 on 24 procs for 200 steps with 1555 atoms

Performance: 1.612 ns/day, 14.891 hours/ns, 74.618 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2833     | 2.3533     | 2.3848     |   1.6 | 87.80
Neigh   | 0.009629   | 0.0099041  | 0.01007    |   0.1 |  0.37
Comm    | 0.017789   | 0.049481   | 0.11966    |  11.2 |  1.85
Output  | 0.0011339  | 0.0045791  | 0.0047319  |   1.1 |  0.17
Modify  | 0.2605     | 0.2612     | 0.26517    |   0.2 |  9.74
Other   |            | 0.001877   |            |       |  0.07

Nlocal:    64.7917 ave 71 max 50 min
Histogram: 1 0 0 2 0 1 5 8 2 5
Nghost:    2377.62 ave 2403 max 2361 min
Histogram: 3 3 3 4 3 3 1 2 1 1
Neighs:    25454.4 ave 28486 max 18959 min
Histogram: 1 0 0 2 1 0 7 7 3 3

Total # of neighbors = 610906
Ave neighs/atom = 392.866
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157200.714817182-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157200.714817182--157283.0123539))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.450866758823395
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157200.714817182; E_system:-157283.0123539;prob1:1.11553536927398e-60; prob2:0.450866758823395

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
139  36  1555  -157283.0123539  -157200.714817182  30096.4744337948  30096.4744337948  4144.48374776057  0.262252748012543  0  19  19  1  1.11553536927398e-60  0.450866758823395  displace fail  1543  -9.20592370301  -14.6415498378  -8.43407459022
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 140, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.698827087879181
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.698827087879181)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.698827087879181, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000807047 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 23.341344086 ${ry} ${rz} units box
create_atoms	2 single 23.341344086 27.8390155806 ${rz} units box
create_atoms	2 single 23.341344086 27.8390155806 26.3639653577 units box
Created 1 atoms
  create_atoms CPU = 5.6982e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.739025056362152-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.739025056362152-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.739025056362152-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.820876717567444-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.820876717567444-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.820876717567444-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.474604845046997-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.474604845046997-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.474604845046997-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set 0.00496364461535183 ${rvy} ${rvz}
velocity	created set 0.00496364461535183 0.00666339343492195 ${rvz}
velocity	created set 0.00496364461535183 0.00666339343492195 -0.00052736113132639
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.71 | 73.12 | 73.39 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22600            0   -157339.01     1432.739   -155906.27    30096.474    309.10241    4669.4912      6082.03    2815.1646    5111.2789      30.5776      30.5776      32.1891    2.3856618   -222590.38 
   22800           50   -157291.19    1391.9148   -155899.27    30096.474     300.2949    1875.6701    4047.9533    789.96796    789.08918      30.5776      30.5776      32.1891    2.3856618   -222676.72 
Loop time of 2.69365 on 24 procs for 200 steps with 1556 atoms

Performance: 1.604 ns/day, 14.965 hours/ns, 74.249 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2916     | 2.3623     | 2.4065     |   1.8 | 87.70
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017391   | 0.061889   | 0.13256    |  10.9 |  2.30
Output  | 0.001189   | 0.0046438  | 0.004796   |   1.1 |  0.17
Modify  | 0.2623     | 0.26298    | 0.26675    |   0.2 |  9.76
Other   |            | 0.00184    |            |       |  0.07

Nlocal:    64.8333 ave 72 max 50 min
Histogram: 1 0 0 2 0 4 4 7 2 4
Nghost:    2375.25 ave 2403 max 2350 min
Histogram: 1 1 2 6 4 2 5 1 1 1
Neighs:    25481.8 ave 28970 max 18988 min
Histogram: 1 0 1 1 1 3 7 5 3 2

Total # of neighbors = 611563
Ave neighs/atom = 393.035
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157291.188147706-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157291.188147706--157283.0123539-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157291.188147706--157283.0123539--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.681622385978699
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157291.188147706; E_system:-157283.0123539;prob1:1.96395166186455e-34; prob2:0.681622385978699

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
140  36  1555  -157283.0123539  -157291.188147706  30096.4744337948  30096.4744337948  4144.48374776057  0.698827087879181  2  19  19  3  1.96395166186455e-34  0.681622385978699  add fail  1556  23.341344086  27.8390155806  26.3639653577 0.00496364461535183  0.00666339343492195  -0.00052736113132639
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 140
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.00079298 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.68 | 73.08 | 73.35 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22600            0   -157283.01     1432.164   -155850.85    30096.474    309.17719    4144.4839    5433.7553     2345.566    4654.1303      30.5776      30.5776      32.1891    2.3852788   -222508.13 
   22800           50   -157214.59    1374.4746   -155840.12    30096.474    296.72314     1927.115    4308.4974    553.06252    919.78516      30.5776      30.5776      32.1891    2.3852788    -222576.6 
Loop time of 2.68396 on 24 procs for 200 steps with 1555 atoms

Performance: 1.610 ns/day, 14.911 hours/ns, 74.517 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2922     | 2.3607     | 2.399      |   1.6 | 87.96
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017882   | 0.056056   | 0.12488    |  10.5 |  2.09
Output  | 0.0011361  | 0.0046049  | 0.0047569  |   1.1 |  0.17
Modify  | 0.26022    | 0.26069    | 0.26418    |   0.1 |  9.71
Other   |            | 0.001863   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 50 min
Histogram: 1 0 0 2 0 5 3 7 2 4
Nghost:    2373.79 ave 2402 max 2348 min
Histogram: 1 1 2 6 4 3 4 1 1 1
Neighs:    25448.8 ave 28932 max 18983 min
Histogram: 1 0 1 1 1 3 7 5 3 2

Total # of neighbors = 610772
Ave neighs/atom = 392.779
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157214.594169058
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 1927.11502278292
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
140  19  -157214.594169058  -222576.600417002  -4944.93089390986  0  0  21671.1962851236  0  0  0  0  0  49904.5738430687  -249.790159247622  0  -1019.04282709181
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
140  19  -157214.594169058  1374.47464291119  -155840.119526147  30096.4744337948  296.72313980177  1927.11502278292  4308.49738858436  553.062522235725  919.785157528675  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
140  36  1555  -157214.594169058  -157214.594169058  30096.4744337948  30096.4744337948  1927.11502278292  0.698827087879181  2  19  19  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157214.594169058, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
140  36  1555  -157214.594169058  30096.4744337948  30096.4744337948  1927.11502278292  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 141, 36
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.24347984790802
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.24347984790802)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.24347984790802, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.772108793258667*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.772108793258667*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1551
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000725031 secs
group		disp id ${nMCmoved}
group		disp id 1551
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1551 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1551 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1551 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -15.1083644145 ${ry} ${rz} units box
displace_atoms	disp move -15.1083644145 11.5068980645 ${rz} units box
displace_atoms	disp move -15.1083644145 11.5068980645 14.0827438884 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.79 | 73.16 | 73.51 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   22800            0   -157194.57    1374.4746   -155820.09    30096.474    296.72314    2037.6125     4434.995    763.84526    913.99718      30.5776      30.5776      32.1891    2.3852788   -222559.73 
   23000           50   -157230.58    1414.2949   -155816.28    30096.474    305.31958    995.35831    2911.1069   -1770.9532    1845.9213      30.5776      30.5776      32.1891    2.3852788   -222633.55 
Loop time of 2.67819 on 24 procs for 200 steps with 1555 atoms

Performance: 1.613 ns/day, 14.879 hours/ns, 74.677 timesteps/s
99.1% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2958     | 2.366      | 2.3924     |   1.5 | 88.34
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017842   | 0.044293   | 0.11466    |  10.8 |  1.65
Output  | 0.001122   | 0.0045651  | 0.0047162  |   1.1 |  0.17
Modify  | 0.26099    | 0.26148    | 0.26508    |   0.1 |  9.76
Other   |            | 0.001832   |            |       |  0.07

Nlocal:    64.7917 ave 71 max 50 min
Histogram: 1 0 1 1 0 1 4 8 3 5
Nghost:    2377.04 ave 2402 max 2360 min
Histogram: 2 0 10 3 1 3 2 1 1 1
Neighs:    25458.3 ave 28584 max 18935 min
Histogram: 1 0 1 1 1 0 9 3 5 3

Total # of neighbors = 611000
Ave neighs/atom = 392.926
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157230.578525015-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157230.578525015--157214.594169058))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.959394335746765
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157230.578525015; E_system:-157214.594169058;prob1:440922944014.755; prob2:0.959394335746765

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157230.578525015
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 995.358310093275
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
141  19  -157230.578525015  -222633.554463656  -4979.66780712479  0  0  21767.7056469155  0  0  0  0  0  49882.3968101668  -250.357223240021  0  -1017.10148807656
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
141  19  -157230.578525015  1414.29488900904  -155816.283636006  30096.4744337948  305.319579547508  995.358310093275  2911.10685830256  -1770.95320823487  1845.92128021213  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
141  37  1555  -157230.578525015  -157230.578525015  30096.4744337948  30096.4744337948  995.358310093275  0.24347984790802  0  19  19  1  440922944014.755  0.959394335746765  displace pass  1551  -15.1083644145  11.5068980645  14.0827438884
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157230.578525015, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
141  37  1555  -157230.578525015  30096.4744337948  30096.4744337948  995.358310093275  440922944014.755  0.959394335746765
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 142, 37
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.162486672401428
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.162486672401428)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.162486672401428, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.925990521907806*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.925990521907806*19)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1554
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.00113201 secs
group		disp id ${nMCmoved}
group		disp id 1554
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move -6.47293197244 ${ry} ${rz} units box
displace_atoms	disp move -6.47293197244 1.57849672978 ${rz} units box
displace_atoms	disp move -6.47293197244 1.57849672978 -1.97971161978 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.67 | 73.04 | 73.48 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   23000            0    -157196.4    1414.2949   -155782.11    30096.474    305.31958    1080.9333    3107.7646   -1792.5311    1927.5664      30.5776      30.5776      32.1891    2.3852788      -222648 
   23200           50    -157256.5    1452.3773   -155804.13    30096.474    313.54084   -992.12613    935.79346    -2226.768   -1685.4039      30.5776      30.5776      32.1891    2.3852788   -222653.12 
Loop time of 2.70296 on 24 procs for 200 steps with 1555 atoms

Performance: 1.598 ns/day, 15.016 hours/ns, 73.993 timesteps/s
99.0% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2972     | 2.3677     | 2.4077     |   1.9 | 87.60
Neigh   | 0.0096352  | 0.0098942  | 0.010099   |   0.1 |  0.37
Comm    | 0.017849   | 0.057941   | 0.1286     |  12.0 |  2.14
Output  | 0.0011301  | 0.0046082  | 0.004766   |   1.1 |  0.17
Modify  | 0.26015    | 0.26093    | 0.26464    |   0.2 |  9.65
Other   |            | 0.001837   |            |       |  0.07

Nlocal:    64.7917 ave 73 max 49 min
Histogram: 1 0 0 1 1 5 4 6 5 1
Nghost:    2374.92 ave 2402 max 2348 min
Histogram: 1 0 3 3 5 7 2 0 2 1
Neighs:    25447.2 ave 29366 max 18591 min
Histogram: 1 0 1 1 0 4 9 4 3 1

Total # of neighbors = 610732
Ave neighs/atom = 392.754
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157256.503294939-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157256.503294939--157230.578525015))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.376432001590729
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157256.503294939; E_system:-157230.578525015;prob1:7.68784534492903e+18; prob2:0.376432001590729

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1555
variable	E_system equal ${E_trial}
variable	E_system equal -157256.503294939
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -992.126131194478
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
142  19  -157256.503294939  -222653.115095998  -4924.76274952392  0  0  21849.103224637  0  0  0  0  0  49738.8504680321  -250.473230651051  0  -1016.105911435
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
142  19  -157256.503294939  1452.37725273133  -155804.126042208  30096.4744337948  313.540843281278  -992.126131194478  935.793462255806  -2226.7679620161  -1685.40389382314  30.5776  30.5776  32.1891  2.38527883234295
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
142  38  1555  -157256.503294939  -157256.503294939  30096.4744337948  30096.4744337948  -992.126131194478  0.162486672401428  0  19  19  1  7.68784534492903e+18  0.376432001590729  displace pass  1554  -6.47293197244  1.57849672978  -1.97971161978
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157256.503294939, total atoms are 1555
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
142  38  1555  -157256.503294939  30096.4744337948  30096.4744337948  -992.126131194478  7.68784534492903e+18  0.376432001590729
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 143, 38
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.985830307006836
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.985830307006836)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.985830307006836, 2
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:19; n_GCMC:19
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 2
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"

label		iblock2
print 		"iblock:${iblock}"
iblock:0
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print 		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Add atom block
print 		"iMCflag at add block: ${iMCflag}"
iMCflag at add block: 2
if 		"(${iMCflag} == 2)" then 		"print 		'in add block'" 		"variable	iblock equal 3" 		"clear" 		"read_restart	refile" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in add block'
in add block
variable	iblock equal 3
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1555 atoms
  read_restart CPU = 0.000810862 secs
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 0 0 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 0 0 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke


if 		"(${iblock}==3) && (${flgCoord}==1)" 	then 		"create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box" 		"variable	ncreated equal ${n_trial}" 		"print 		'ncreated is ${ncreated}'" 		"group		created id ${ncreated}" 		"variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}" 		"velocity	created set ${rvx} ${rvy} ${rvz}" 		"group		created delete" 		"jump		SELF run_control" elif		"${iblock}==3" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
create_atoms	${typeGC} single ${rx} ${ry} ${rz} units box
create_atoms	2 single ${rx} ${ry} ${rz} units box
create_atoms	2 single 30.2693143723 ${ry} ${rz} units box
create_atoms	2 single 30.2693143723 2.30155725274 ${rz} units box
create_atoms	2 single 30.2693143723 2.30155725274 14.6471427119 units box
Created 1 atoms
  create_atoms CPU = 5.10216e-05 secs
variable	ncreated equal ${n_trial}
variable	ncreated equal 1556
print 		'ncreated is ${ncreated}'
ncreated is 1556
group		created id ${ncreated}
group		created id 1556
1 atoms in group created
variable	rvx equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.47765839099884-1)*${therm_vel}*${EmMD}
variable	rvx equal (2*0.47765839099884-1)*0.0103831052085002*${EmMD}
variable	rvx equal (2*0.47765839099884-1)*0.0103831052085002*1
variable	rvy equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.785307347774506-1)*${therm_vel}*${EmMD}
variable	rvy equal (2*0.785307347774506-1)*0.0103831052085002*${EmMD}
variable	rvy equal (2*0.785307347774506-1)*0.0103831052085002*1
variable	rvz equal (2*${rn_01}-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.450177013874054-1)*${therm_vel}*${EmMD}
variable	rvz equal (2*0.450177013874054-1)*0.0103831052085002*${EmMD}
variable	rvz equal (2*0.450177013874054-1)*0.0103831052085002*1
velocity	created set ${rvx} ${rvy} ${rvz}
velocity	created set -0.000463950553572439 ${rvy} ${rvz}
velocity	created set -0.000463950553572439 0.0059247524174017 ${rvz}
velocity	created set -0.000463950553572439 0.0059247524174017 -0.00103463461349469
group		created delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.86 | 73.23 | 73.65 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   23200            0   -157321.47    1452.6791   -155868.79    30096.474    313.40433   -962.52439    986.48561   -2193.9498   -1680.1089      30.5776      30.5776      32.1891    2.3856618   -222659.94 
   23400           50   -157319.08     1405.188   -155913.89    30096.474    303.15849   -270.37432    1863.8988   -302.17034   -2372.8514      30.5776      30.5776      32.1891    2.3856618   -222771.07 
Loop time of 2.69145 on 24 procs for 200 steps with 1556 atoms

Performance: 1.605 ns/day, 14.953 hours/ns, 74.309 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.311      | 2.3677     | 2.4036     |   1.6 | 87.97
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.017893   | 0.05367    | 0.11067    |  10.6 |  1.99
Output  | 0.0011401  | 0.0045879  | 0.004739   |   1.1 |  0.17
Modify  | 0.26321    | 0.26359    | 0.26709    |   0.1 |  9.79
Other   |            | 0.001872   |            |       |  0.07

Nlocal:    64.8333 ave 73 max 50 min
Histogram: 1 0 1 0 2 3 9 1 6 1
Nghost:    2379.75 ave 2406 max 2353 min
Histogram: 1 1 1 5 6 1 5 1 2 1
Neighs:    25469.6 ave 29380 max 18970 min
Histogram: 1 0 1 1 2 3 7 4 4 1

Total # of neighbors = 611270
Ave neighs/atom = 392.847
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock3
print 		"iblock:${iblock}"
iblock:3
if 		"${iblock}==3" 	then 		"variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${vol_GC}/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((${n_system}+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(${lambda}^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-${beta}*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(${E_trial}-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157319.082574903-${E_system}-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157319.082574903--157256.503294939-${mu}))
variable	prob1 equal	(30096.4744337948/((1555+1)*(0.382585343708812^3)))*exp(-1.67739857890457*(-157319.082574903--157256.503294939--57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.683675110340118
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157319.082574903; E_system:-157256.503294939;prob1:841882.558795122; prob2:0.683675110340118

print 		"iblock:${iblock}"
iblock:3
if 		"(${iblock}==3) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==3)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157319.082574903
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal -270.374318197369
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
143  20  -157319.082574903  -222771.072420928  -4917.6041208768  0  0  21874.6834994339  0  0  0  0  0  49824.2990154493  -258.989321647257  0  -1070.39922633472
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
143  20  -157319.082574903  1405.18798914073  -155913.894585763  30096.4744337948  303.158489025509  -270.374318197369  1863.89877565983  -302.170344925461  -2372.85138532647  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add pass  ${ncreated}  ${rx}  ${ry}  ${rz} ${rvx}  ${rvy}  ${rvz}' append status.log
143  39  1556  -157319.082574903  -157319.082574903  30096.4744337948  30096.4744337948  -270.374318197369  0.985830307006836  2  20  20  3  841882.558795122  0.683675110340118  add pass  1556  30.2693143723  2.30155725274  14.6471427119 -0.000463950553572439  0.0059247524174017  -0.00103463461349469
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157319.082574903, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
143  39  1556  -157319.082574903  30096.4744337948  30096.4744337948  -270.374318197369  841882.558795122  0.683675110340118
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 144, 39
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.493114948272705
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.493114948272705)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.493114948272705, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.813792645931244*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.813792645931244*20)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1553
variable	lastatom equal ${n_system}
variable	lastatom equal 1556
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000955105 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1556]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1556]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1556]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1556]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1556]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1556]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1556]
variable	tx equal ${lastx}
variable	tx equal 30.4850478703159
variable	ty equal ${lasty}
variable	ty equal 2.09294322701117
variable	tz equal ${lastz}
variable	tz equal 14.632061043954
variable	tvx equal ${lastvx}
variable	tvx equal 0.00928734978135008
variable	tvy equal ${lastvy}
variable	tvy equal -0.0134908319396866
variable	tvz equal ${lastvz}
variable	tvz equal 0.00014235635089086
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1553]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1553]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1553]
variable	dx equal (${tx}-${delx})
variable	dx equal (30.4850478703159-${delx})
variable	dx equal (30.4850478703159-24.6907035244592)
variable	dy equal (${ty}-${dely})
variable	dy equal (2.09294322701117-${dely})
variable	dy equal (2.09294322701117-10.6884306911576)
variable	dz equal (${tz}-${delz})
variable	dz equal (14.632061043954-${delz})
variable	dz equal (14.632061043954-13.7164817993976)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1553 24.6907035244592 10.6884306911576 13.7164817993976; Last coords: 30.4850478703159 2.09294322701117 14.632061043954
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.00928734978135008 -0.0134908319396866 0.00014235635089086 Last type: 2
group		del id ${lastatom}
group		del id 1556
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1555
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1553
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move 5.7943443458567 ${dy} ${dz}
displace_atoms	delDisp move 5.7943443458567 -8.59548746414643 ${dz}
displace_atoms	delDisp move 5.7943443458567 -8.59548746414643 0.915579244556399
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1553 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1553 vx 0.00928734978135008 vy ${tvy} vz ${tvz}
set		atom 1553 vx 0.00928734978135008 vy -0.0134908319396866 vz ${tvz}
set		atom 1553 vx 0.00928734978135008 vy -0.0134908319396866 vz 0.00014235635089086
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1553 type ${ttyp}
set		atom 1553 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.76 | 73.15 | 73.57 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   23400            0   -157243.36    1404.1912   -155839.17    30096.474    303.13839   -368.45042    1775.1065   -360.01556   -2520.4422      30.5776      30.5776      32.1891    2.3852788   -222740.45 
   23600           50   -157249.28    1371.5841    -155877.7    30096.474    296.09914    312.33027    4861.6707   -2381.9102   -1542.7697      30.5776      30.5776      32.1891    2.3852788   -222608.42 
Loop time of 2.69848 on 24 procs for 200 steps with 1555 atoms

Performance: 1.601 ns/day, 14.992 hours/ns, 74.116 timesteps/s
98.8% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3002     | 2.3688     | 2.4088     |   1.7 | 87.78
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018035   | 0.057941   | 0.12661    |  11.0 |  2.15
Output  | 0.0012209  | 0.0046782  | 0.0048311  |   1.1 |  0.17
Modify  | 0.26486    | 0.26521    | 0.2687     |   0.1 |  9.83
Other   |            | 0.001826   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 50 min
Histogram: 1 0 2 0 1 1 7 5 4 3
Nghost:    2376.54 ave 2413 max 2349 min
Histogram: 1 2 3 4 7 4 0 2 0 1
Neighs:    25446.9 ave 29007 max 18891 min
Histogram: 1 0 2 1 0 2 7 5 4 2

Total # of neighbors = 610725
Ave neighs/atom = 392.749
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157249.283734582-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157249.283734582--157319.082574903+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157249.283734582--157319.082574903+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0594503283500671
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157249.283734582; E_system:-157319.082574903;prob1:6.53743592454424e-12; prob2:0.0594503283500671

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
144  39  1556  -157319.082574903  -157249.283734582  30096.4744337948  30096.4744337948  -270.374318197369  0.493114948272705  1  20  20  2  6.53743592454424e-12  0.0594503283500671  delete fail  1553
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 145, 39
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.100239813327789
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.100239813327789)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.100239813327789, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.881178379058838*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.881178379058838*20)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1554
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000756025 secs
group		disp id ${nMCmoved}
group		disp id 1554
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1554 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp move 12.479870919 ${ry} ${rz} units box
displace_atoms	disp move 12.479870919 25.4907336281 ${rz} units box
displace_atoms	disp move 12.479870919 25.4907336281 3.62203463705 units box
group		disp delete
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.88 | 73.21 | 73.57 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   23400            0   -157304.31     1405.188   -155899.12    30096.474    303.15849   -158.66511    1988.1845   -264.39982     -2199.78      30.5776      30.5776      32.1891    2.3856618   -222758.84 
   23600           50   -157323.67    1384.3977   -155939.27    30096.474    298.67314    747.13327    5637.4389   -2545.1232   -850.91598      30.5776      30.5776      32.1891    2.3856618   -222563.66 
Loop time of 2.70445 on 24 procs for 200 steps with 1556 atoms

Performance: 1.597 ns/day, 15.025 hours/ns, 73.952 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3063     | 2.3687     | 2.4074     |   1.7 | 87.59
Neigh   | 0.0096822  | 0.0099189  | 0.010098   |   0.1 |  0.37
Comm    | 0.017695   | 0.056527   | 0.11893    |  10.8 |  2.09
Output  | 0.0011389  | 0.0045801  | 0.0047309  |   1.1 |  0.17
Modify  | 0.26215    | 0.26289    | 0.26677    |   0.2 |  9.72
Other   |            | 0.001823   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 49 min
Histogram: 1 0 0 2 1 1 7 2 6 4
Nghost:    2379.29 ave 2407 max 2355 min
Histogram: 1 1 1 4 8 5 1 2 0 1
Neighs:    25476.1 ave 28980 max 18642 min
Histogram: 1 0 2 0 1 2 6 7 3 2

Total # of neighbors = 611426
Ave neighs/atom = 392.947
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock1
print		"iblock:${iblock}"
iblock:1
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(${E_trial}-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157323.667030741-${E_system}))
variable	prob1 equal	exp(-1.67739857890457*(-157323.667030741--157319.082574903))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.0961090922355652
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157323.667030741; E_system:-157319.082574903;prob1:2186.2864699341; prob2:0.0961090922355652

print		"iblock:${iblock}"
iblock:1
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157323.667030741
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 747.133273060838
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
145  20  -157323.667030741  -222563.661803939  -4930.95502211233  0  0  21738.1906390763  0  0  0  0  0  49765.3163652413  -261.814562026077  0  -1070.74264698152
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
145  20  -157323.667030741  1384.39766578382  -155939.269364957  30096.4744337948  298.673136842072  747.133273060838  5637.43894878358  -2545.12315237482  -850.915977226242  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
next		pass
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log
145  40  1556  -157323.667030741  -157323.667030741  30096.4744337948  30096.4744337948  747.133273060838  0.100239813327789  0  20  20  1  2186.2864699341  0.0961090922355652  displace pass  1554  12.479870919  25.4907336281  3.62203463705
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157323.667030741, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
145  40  1556  -157323.667030741  30096.4744337948  30096.4744337948  747.133273060838  2186.2864699341  0.0961090922355652
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
variable 	iblock equal 5
print 		'iMDfreq Reax run at imc: ${imc}'
iMDfreq Reax run at imc: 145
print 		'in iMDfreq block'
in iMDfreq block
variable	MDstp equal	${MDstp2}
variable	MDstp equal	200

if 		"(${iblock} == 5) && (${MDstp2}<1000)" then 		"variable	MDdmp equal	${MDstp2}"
variable	MDdmp equal	${MDstp2}
variable	MDdmp equal	200
if 		"(${iblock} == 5) && (${MDstp2}>=1000)" then 		"variable	MDdmp equal	1000"

if 		"${iblock} == 5" then 		"clear" 		"read_restart	refile" 		"jump		SELF run_control"
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000864029 secs
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
variable temp_filename string ${filename}
variable temp_filename string control_md
variable filename string control_md
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 73.01 | 73.29 | 73.79 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   23600            0   -157323.67    1384.3977   -155939.27    30096.474    298.67314    747.13321     5637.439   -2545.1234   -850.91597      30.5776      30.5776      32.1891    2.3856618   -222563.66 
   23800           50   -157385.57    1422.3225   -155963.25    30096.474    306.85512    2722.8767    3857.3433    3326.5633    984.72356      30.5776      30.5776      32.1891    2.3856618   -222961.84 
Loop time of 2.70685 on 24 procs for 200 steps with 1556 atoms

Performance: 1.596 ns/day, 15.038 hours/ns, 73.887 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.3064     | 2.3775     | 2.4101     |   1.6 | 87.83
Neigh   | 0.0097501  | 0.0099669  | 0.01014    |   0.1 |  0.37
Comm    | 0.01804    | 0.050675   | 0.12167    |  10.7 |  1.87
Output  | 0.0011332  | 0.0045778  | 0.00473    |   1.1 |  0.17
Modify  | 0.26162    | 0.26228    | 0.26601    |   0.2 |  9.69
Other   |            | 0.001822   |            |       |  0.07

Nlocal:    64.8333 ave 72 max 48 min
Histogram: 1 0 1 0 1 2 3 8 6 2
Nghost:    2382.92 ave 2413 max 2362 min
Histogram: 1 2 6 5 5 1 1 0 2 1
Neighs:    25477.2 ave 28998 max 18239 min
Histogram: 1 0 1 1 0 1 6 8 5 1

Total # of neighbors = 611454
Ave neighs/atom = 392.965
Neighbor list builds = 1
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
variable filename delete
variable filename string ${temp_filename}
variable filename string control_md
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock5
print 		"iblock:${iblock}"
iblock:5
if 		"${iblock}==5" 	then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"variable	MDstp equal	${MDstp1}"		"variable	MDdmp equal	${MDstp1}"		"jump		SELF imcloop"
variable	n_system equal ${n_trial}
variable	n_system equal 1556
variable	E_system equal ${E_trial}
variable	E_system equal -157385.569745995
variable	vol_system equal ${vol_trial}
variable	vol_system equal 30096.4744337948
variable	pr_system equal ${pr_trial}
variable	pr_system equal 2722.8767440176
print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp
145  20  -157385.569745995  -222961.844574744  -4925.14625262847  0  0  21918.8912449821  0  0  0  0  0  49915.5822266798  -262.844215961928  0  -1070.20817432279
print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo
145  20  -157385.569745995  1422.32248589147  -155963.247260104  30096.4744337948  306.855124767707  2722.8767440176  3857.34334019438  3326.5633311058  984.723560752619  30.5776  30.5776  32.1891  2.38566179416381
shell		cat dump.last >> dump.reax
shell		cat bonds.last >> bonds.out
shell		cat dump.strs.last >> dump.strs
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  MD run' append status.log
145  40  1556  -157385.569745995  -157385.569745995  30096.4744337948  30096.4744337948  2722.8767440176  0.100239813327789  0  20  20  5  0  0  MD run
print 		'PE is ${E_system}, total atoms are ${n_system}'
PE is -157385.569745995, total atoms are 1556
print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog
145  40  1556  -157385.569745995  30096.4744337948  30096.4744337948  2722.8767440176  0  0
write_restart	refile
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
variable	MDstp equal	${MDstp1}
variable	MDstp equal	200
variable	MDdmp equal	${MDstp1}
variable	MDdmp equal	200
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 146, 40
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.560372054576874
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.560372054576874)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.560372054576874, 1
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"

label		iblock1
print		"iblock:${iblock}"
iblock:0
if 		"${iblock}==1" 	then 		"variable	prob1 equal	exp(-${beta}*(${E_trial}-${E_system}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"

print		"iblock:${iblock}"
iblock:0
if 		"(${iblock}==1) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace pass  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==1)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  displace fail  ${nMCmoved}  ${rx}  ${ry}  ${rz}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"



#Delete atom block
print 		"iMCflag at delete block: ${iMCflag}"
iMCflag at delete block: 1
if 		"(${iMCflag} == 1) && (${n_GCMC}>0)" then 		"print 		'in delete block'" 		"variable	iblock equal 2" 		"variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1" 		"print 		'nGCdeleted trying on ${nGCdeleted}'" 		"variable	lastatom equal ${n_system}" 		"clear" 		"read_restart	refile" 		"variable	lastx equal x[${lastatom}]" 		"variable	lasty equal y[${lastatom}]" 		"variable	lastz equal z[${lastatom}]" 		"variable	lastvx equal vx[${lastatom}]" 		"variable	lastvy equal vy[${lastatom}]" 		"variable	lastvz equal vz[${lastatom}]" 		"variable	lasttyp equal type[${lastatom}]" 		"variable	tx equal ${lastx}" 		"variable	ty equal ${lasty}" 		"variable	tz equal ${lastz}" 		"variable	tvx equal ${lastvx}" 		"variable	tvy equal ${lastvy}" 		"variable	tvz equal ${lastvz}" 		"variable	ttyp equal ${lasttyp}" 		"variable	delx equal x[${nGCdeleted}]" 		"variable	dely equal y[${nGCdeleted}]" 		"variable	delz equal z[${nGCdeleted}]" 		"variable	dx equal (${tx}-${delx})" 		"variable	dy equal (${ty}-${dely})" 		"variable	dz equal (${tz}-${delz})" 		"print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'" 		"print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'" 		"group		del id ${lastatom}" 		"delete_atoms	group del compress no" 		"group		del delete" 		"group		delDisp id ${nGCdeleted}" 		"displace_atoms	delDisp move ${dx} ${dy} ${dz}" 		"group		delDisp delete" 		"set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}" 		"set		atom ${nGCdeleted} type ${ttyp}" 		"jump		SELF run_control"
print 		'in delete block'
in delete block
variable	iblock equal 2
variable	nGCdeleted equal floor(${iMC}+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+${rn_01}*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.458274662494659*${n_GCMC})+1
variable	nGCdeleted equal floor(1536+0.458274662494659*20)+1
print 		'nGCdeleted trying on ${nGCdeleted}'
nGCdeleted trying on 1546
variable	lastatom equal ${n_system}
variable	lastatom equal 1556
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000765085 secs
variable	lastx equal x[${lastatom}]
variable	lastx equal x[1556]
variable	lasty equal y[${lastatom}]
variable	lasty equal y[1556]
variable	lastz equal z[${lastatom}]
variable	lastz equal z[1556]
variable	lastvx equal vx[${lastatom}]
variable	lastvx equal vx[1556]
variable	lastvy equal vy[${lastatom}]
variable	lastvy equal vy[1556]
variable	lastvz equal vz[${lastatom}]
variable	lastvz equal vz[1556]
variable	lasttyp equal type[${lastatom}]
variable	lasttyp equal type[1556]
variable	tx equal ${lastx}
variable	tx equal 1.22684872592326
variable	ty equal ${lasty}
variable	ty equal 1.76480499938691
variable	tz equal ${lastz}
variable	tz equal 14.691082497033
variable	tvx equal ${lastvx}
variable	tvx equal 0.000136075674885987
variable	tvy equal ${lastvy}
variable	tvy equal 0.00535567169348177
variable	tvz equal ${lastvz}
variable	tvz equal 0.0157877453636587
variable	ttyp equal ${lasttyp}
variable	ttyp equal 2
variable	delx equal x[${nGCdeleted}]
variable	delx equal x[1546]
variable	dely equal y[${nGCdeleted}]
variable	dely equal y[1546]
variable	delz equal z[${nGCdeleted}]
variable	delz equal z[1546]
variable	dx equal (${tx}-${delx})
variable	dx equal (1.22684872592326-${delx})
variable	dx equal (1.22684872592326-19.8951365759675)
variable	dy equal (${ty}-${dely})
variable	dy equal (1.76480499938691-${dely})
variable	dy equal (1.76480499938691-28.2302075181502)
variable	dz equal (${tz}-${delz})
variable	dz equal (14.691082497033-${delz})
variable	dz equal (14.691082497033-0.934099661772372)
print		'Del atom, coords: ${nGCdeleted} ${delx} ${dely} ${delz}; Last coords: ${tx} ${ty} ${tz}'
Del atom, coords: 1546 19.8951365759675 28.2302075181502 0.934099661772372; Last coords: 1.22684872592326 1.76480499938691 14.691082497033
print		'Last vels: ${tvx} ${tvy} ${tvz} Last type: ${ttyp}'
Last vels: 0.000136075674885987 0.00535567169348177 0.0157877453636587 Last type: 2
group		del id ${lastatom}
group		del id 1556
1 atoms in group del
delete_atoms	group del compress no
Deleted 1 atoms, new total = 1555
group		del delete
group		delDisp id ${nGCdeleted}
group		delDisp id 1546
1 atoms in group delDisp
displace_atoms	delDisp move ${dx} ${dy} ${dz}
displace_atoms	delDisp move -18.6682878500442 ${dy} ${dz}
displace_atoms	delDisp move -18.6682878500442 -26.4654025187633 ${dz}
displace_atoms	delDisp move -18.6682878500442 -26.4654025187633 13.7569828352606
group		delDisp delete
set		atom ${nGCdeleted} vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1546 vx ${tvx} vy ${tvy} vz ${tvz}
set		atom 1546 vx 0.000136075674885987 vy ${tvy} vz ${tvz}
set		atom 1546 vx 0.000136075674885987 vy 0.00535567169348177 vz ${tvz}
set		atom 1546 vx 0.000136075674885987 vy 0.00535567169348177 vz 0.0157877453636587
  1 settings made for vx
  1 settings made for vy
  1 settings made for vz
set		atom ${nGCdeleted} type ${ttyp}
set		atom 1546 type ${ttyp}
set		atom 1546 type 2
  1 settings made for type
jump		SELF run_control
if 		"${iblock}==5" 	then  	"variable temp_filename string ${filename}"	"variable filename string control_md"
include		${filename}
include		control_md
# Control file for running ReaxFF MD on a geometry

#Force field: Define all GCMC species (including the ones not in geometry file) in the order they appear in datafile
pair_style	reax/c lmp_control safezone 1.6 mincap 100
pair_coeff	* * ffield Si Li
WARNING: VdWaals-parameters for element LI indicate inner wall+shielding, but earlier atoms indicate different vdWaals-method. This may cause division-by-zero errors. Keeping vdWaals-setting for earlier atoms. (src/USER-REAXC/reaxc_ffield.cpp:259)
WARNING: Changed valency_val to valency_boc for X (src/USER-REAXC/reaxc_ffield.cpp:315)

#Neighbor list
neighbor	2.5 bin
neigh_modify	delay 0 every 1 check yes

#Property computes
compute virial all stress/atom NULL
compute e all pair reax/c
variable eb equal c_e[1]
variable ea equal c_e[2]
variable elp equal c_e[3]
variable emol equal c_e[4]
variable ev equal c_e[5]
variable epen equal c_e[6]
variable ecoa equal c_e[7]
variable ehb equal c_e[8]
variable et equal c_e[9]
variable eco equal c_e[10]
variable ew equal c_e[11]
variable ep equal c_e[12]
variable efi equal c_e[13]
variable eqeq equal c_e[14]
variable stp equal "step"
variable Pe equal "pe"

variable Ke equal "ke"
variable Te equal "etotal"
variable V equal "vol"
variable Tmp equal "temp"
variable P equal "press"
variable Px equal "pxx"
variable Py equal "pyy"
variable Pz equal "pzz"
variable Lx equal "lx"
variable Ly equal "ly"
variable Lz equal "lz"
variable Dens equal "density"

# Energy Minimization and equilibration
fix             1 all qeq/reax 1 0.0 10.0 1.0e-6 reax/c
fix		2 all nvt temp ${Temp} ${Temp} 100.0
fix		2 all nvt temp 300 ${Temp} 100.0
fix		2 all nvt temp 300 300 100.0
Resetting global fix info from restart file:
  fix style: nvt, fix ID: 2
fix		freeze freezeatoms setforce 0 0 0
fix		5 all reax/c/bonds ${MDdmp} bonds.last
fix		5 all reax/c/bonds 200 bonds.last


thermo		${MDdmp}
thermo		200
thermo_style	custom step time pe ke etotal vol temp press pxx pyy pzz lx ly lz density c_e[1]
timestep	0.25

dump		1 all custom ${MDdmp} dump.last id type x y z fx fy fz
dump		1 all custom 200 dump.last id type x y z fx fy fz
dump            2 all custom ${MDdmp} dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]
dump            2 all custom 200 dump.strs.last c_virial[1] c_virial[2] c_virial[3] c_virial[4] c_virial[5] c_virial[6]

run		${MDstp}
run		200
All restart file global fix info was re-assigned
Neighbor list info ...
  update every 1 steps, delay 0 steps, check yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 12.5
  ghost atom cutoff = 12.5
  binsize = 6.25, bins = 5 5 6
  2 neighbor lists, perpetual/occasional/extra = 2 0 0
  (1) pair reax/c, perpetual
      attributes: half, newton off, ghost
      pair build: half/bin/newtoff/ghost
      stencil: half/ghost/bin/3d/newtoff
      bin: standard
  (2) fix qeq/reax, perpetual, copy from (1)
      attributes: half, newton off, ghost
      pair build: copy
      stencil: none
      bin: none
Per MPI rank memory allocation (min/avg/max) = 72.98 | 73.25 | 73.56 Mbytes
Step Time PotEng KinEng TotEng Volume Temp Press Pxx Pyy Pzz Lx Ly Lz Density c_e[1] 
   23800            0   -157312.86    1421.5866   -155891.28    30096.474    306.89373    2826.3392    3883.7005    3546.4131     1048.904      30.5776      30.5776      32.1891    2.3852788   -222909.55 
   24000           50   -157224.47    1311.8272   -155912.64    30096.474    283.19874   -32.972262    6702.3054   -3094.9647   -3706.2575      30.5776      30.5776      32.1891    2.3852788    -222551.4 
Loop time of 2.7054 on 24 procs for 200 steps with 1555 atoms

Performance: 1.597 ns/day, 15.030 hours/ns, 73.926 timesteps/s
98.9% CPU use with 24 MPI tasks x 1 OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 2.2961     | 2.3821     | 2.4176     |   1.8 | 88.05
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0.018294   | 0.053594   | 0.13978    |  12.0 |  1.98
Output  | 0.001142   | 0.0045904  | 0.0047431  |   1.1 |  0.17
Modify  | 0.26287    | 0.2633     | 0.26665    |   0.1 |  9.73
Other   |            | 0.001816   |            |       |  0.07

Nlocal:    64.7917 ave 72 max 48 min
Histogram: 1 0 0 1 1 1 5 8 5 2
Nghost:    2381.54 ave 2408 max 2367 min
Histogram: 3 5 2 8 1 1 2 1 0 1
Neighs:    25438.4 ave 28959 max 18230 min
Histogram: 1 0 1 1 0 2 6 7 5 1

Total # of neighbors = 610521
Ave neighs/atom = 392.618
Neighbor list builds = 0
Dangerous builds = 0

#fix		2 all nvt temp ${Temp} 0.01 100.0       #To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used
#
#fix		2 all nvt temp 0.01 0.01 100.0		#To be run when control_emin is used
#run		${MDstp}				#To be run when control_emin is used

if		"(${MDdmp}!=1000) && (${imc}!=0)" then 		"shell echo dump.last | get_last" 		"shell echo dump.strs.last | get_last" 		"shell echo bonds.last | get_last"
shell echo dump.last | get_last
shell echo dump.strs.last | get_last
shell echo bonds.last | get_last

undump		1
undump		2
if 		"${iblock}==5" 	then  	"variable filename delete"			"variable filename string ${temp_filename}"
if 		"${iblock}==1" 	then  	"jump SELF iblock1" elif 		"${iblock}==2" 		"jump SELF iblock2" elif 		"${iblock}==3" 		"jump SELF iblock3" elif 		"${iblock}==4" 		"jump SELF iblock4" elif 		"${iblock}==5" 		"jump SELF iblock5"
jump SELF iblock2
print 		"iblock:${iblock}"
iblock:2
if 		"${iblock}==2" 	then 		"variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))" 		"variable	prob2 equal	${rn_01}" 		"print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'"
variable	prob1 equal	(${n_system}*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(${lambda}^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/${vol_GC})*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-${beta}*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(${E_trial}-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157224.470486827-${E_system}+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157224.470486827--157385.569745995+${mu}))
variable	prob1 equal	(1556*(0.382585343708812^3)/30096.4744337948)*exp(-1.67739857890457*(-157224.470486827--157385.569745995+-57.93))
variable	prob2 equal	${rn_01}
variable	prob2 equal	0.937287986278534
print 		'beta:${beta}; E_trail:${E_trial}; E_system:${E_system};prob1:${prob1}; prob2:${prob2}'
beta:1.67739857890457; E_trail:-157224.470486827; E_system:-157385.569745995;prob1:2.01570364601583e-78; prob2:0.937287986278534

print 		"iblock:${iblock}"
iblock:2
if 		"(${iblock}==2) && (${prob1}>${prob2})" then 		"variable	n_system equal ${n_trial}" 		"variable	E_system equal ${E_trial}" 		"variable	vol_system equal ${vol_trial}" 		"variable	pr_system equal ${pr_trial}" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${eb}  ${ea}  ${elp}  ${emol}  ${ev}  ${epen}  ${ecoa}  ${ehb}  ${et}  ${eco}  ${ew}  ${ep}  ${efi}  ${eqeq}' append ener_comp" 		"print 		'${imc}  ${n_GCMC}  ${Pe}  ${Ke}  ${Te}  ${V}  ${Tmp}  ${P}  ${Px}  ${Py}  ${Pz}  ${Lx}  ${Ly}  ${Lz}  ${Dens}' append Thermo" 		"shell		cat dump.last >> dump.reax" 		"shell		cat bonds.last >> bonds.out" 		"shell		cat dump.strs.last >> dump.strs" 		"next		pass" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete  pass  ${nGCdeleted}' append status.log" 		"print 		'PE is ${E_system}, total atoms are ${n_system}'" 		"print 		'${imc}  ${pass}  ${n_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob1}  ${prob2}' append MClog" 		"write_restart	refile" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun" elif 		"(${iblock}==2)" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  delete fail  ${nGCdeleted}' append status.log
146  40  1556  -157385.569745995  -157224.470486827  30096.4744337948  30096.4744337948  2722.8767440176  0.560372054576874  1  20  20  2  2.01570364601583e-78  0.937287986278534  delete fail  1546
variable	iblock equal 0
variable	prob1 equal 0
variable	prob2 equal 0
jump		SELF MDfreqrun
if		"(${MDcheck}==0)" then 		"variable 	iblock equal 5" 		"print 		'iMDfreq Reax run at imc: ${imc}'" 		"print 		'in iMDfreq block'" 		"variable	MDstp equal	${MDstp2}" else		"jump		SELF imcloop"
jump		SELF imcloop
if		"${imc} >= ${nmciter}" then "print 'End of loop'" 	"quit"
next		imc
print		"imc, pass: ${imc}, ${pass}"
imc, pass: 147, 40
variable	prob_MC equal	${rn_01}
variable	prob_MC equal	0.228253066539764
if		"${iEnsmble}!=3" then "variable iMCflag equal floor(${iMCpick}*${prob_MC})"
variable iMCflag equal floor(${iMCpick}*${prob_MC})
variable iMCflag equal floor(3*${prob_MC})
variable iMCflag equal floor(3*0.228253066539764)
print 		"prob_MC, iMCflag: ${prob_MC}, ${iMCflag}"
prob_MC, iMCflag: 0.228253066539764, 0
print 		"n_MC:${n_MC}; n_GCMC:${n_GCMC}"
n_MC:20; n_GCMC:20
variable	iblock equal	0
variable	prob1 equal	0
variable	prob2 equal	0
variable	rx string	0
variable	ry string	0
variable	rz string	0
variable	flgCoord delete
variable	flgCoord equal	0
print 		"iblock:${iblock}"
iblock:0
#run		0 pre no post no
#print		"${imc}  ${pass}  ${n_system}  ${E_system}  ${E_trial}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  loop head" append status.log



#Displace atom block
if 		"(${iMCflag} == 0) && (${n_MC}>0)" then 		"print 		'in displace block'" 		"variable	iblock equal 1" 		"variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1" 		"print 		'nMCmoved is ${nMCmoved}'" 		"clear" 		"read_restart	refile" 		"group		disp id ${nMCmoved}" 		"variable	flgCoord delete" 		"variable	flgCoord python	getRandCoords" 		"python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py" 		"python		getRandCoords invoke"
print 		'in displace block'
in displace block
variable	iblock equal 1
variable	nMCmoved equal	floor(${inonMC}+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+${rn_01}*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.260319590568542*${n_MC})+1
variable	nMCmoved equal	floor(1536+0.260319590568542*20)+1
print 		'nMCmoved is ${nMCmoved}'
nMCmoved is 1542
clear
OMP_NUM_THREADS environment is not set. Defaulting to 1 thread. (src/comm.cpp:93)
  using 1 OpenMP thread(s) per MPI task
read_restart	refile
  restoring atom style charge from restart
  orthogonal box = (0 0 0) to (30.5776 30.5776 32.1891)
  2 by 3 by 4 MPI processor grid
  pair style reax/c stores no restart info
  1556 atoms
  read_restart CPU = 0.000751972 secs
group		disp id ${nMCmoved}
group		disp id 1542
1 atoms in group disp
variable	flgCoord delete
variable	flgCoord python	getRandCoords
python		getRandCoords input 5 1 ${nMCmoved} ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 ${Rmin} ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 ${Rmax} SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords input 5 1 1542 2 3 SELF return v_flgCoord format iiffpi file getcoord.py
python		getRandCoords invoke

if 		"(${iblock}==1) && (${flgCoord}==1)" 	then 		"displace_atoms	disp move ${rx} ${ry} ${rz} units box" 		"group		disp delete" 		"jump		SELF run_control" elif		"${iblock}==1" 		"print		'${imc}  ${pass}  ${n_system}  ${E_system}  ${E_system}  ${vol_system}  ${vol_GC}  ${pr_system}  ${prob_MC}  ${iMCflag}  ${n_MC}  ${n_GCMC}  ${iblock}  ${prob1}  ${prob2}  add fail getrandCoords' append status.log" 		"variable	iblock equal 0" 		"variable	prob1 equal 0" 		"variable	prob2 equal 0" 		"jump		SELF MDfreqrun"
displace_atoms	disp move ${rx} ${ry} ${rz} units box
displace_atoms	disp